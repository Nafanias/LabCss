import"../chunks/Bg9kRutz.js";import"../chunks/69_IOA4Y.js";import{b as nt,h as Te,a as qe,j as dt,e as Re,y as it,$ as vt,a0 as pt,s as ct,z as ut,v as $t,Y as _t,a1 as ht,a2 as ft,T as e,U as m,_ as gt,J as p,R as yt,V as r,K as c,g as mt,d as bt}from"../chunks/BjD_Ek8v.js";import{c as Ve,d as xt,t as g,a as s,f as wt,b as l}from"../chunks/BKj4abRE.js";import{i as Pt}from"../chunks/BcGeeHkV.js";import{p as kt}from"../chunks/BI8UVfOg.js";import"../chunks/Bwy9gon9.js";import{A as te}from"../chunks/CBfUQGc3.js";import{D as Ie,T as Ot,a as Lt,b as je,c as De,d as Nt,e as Ge}from"../chunks/QjyFc1ib.js";import{O as w}from"../chunks/BxOtZaeI.js";import{I as y}from"../chunks/do2IaR1L.js";import{O as St}from"../chunks/RUKFRWM2.js";import{C as x}from"../chunks/CT94UoGw.js";import{L as u}from"../chunks/zjbbgf1y.js";function Jt(E,B,S,A,T){var J=E,P="",k;nt(()=>{if(P===(P=B()??"")){Te&&qe();return}k!==void 0&&($t(k),k=void 0),P!==""&&(k=dt(()=>{if(Te){Re.data;for(var b=qe(),M=b;b!==null&&(b.nodeType!==8||b.data!=="");)M=b,b=it(b);if(b===null)throw vt(),pt;Ve(Re,M),J=ct(b);return}var q=P+"",N=xt(q);Ve(ut(N),N.lastChild),J.before(N)}))})}var Mt=g("<!> <!>",1),Ct=g("<!> <!>",1),Bt=g("<!> <!>",1),Et=g('<h2 class="svelte-1on0sn0">Как устроен JSON</h2>'),At=g("<!> <!> <!> <!> <!>",1),Tt=g('<h2 class="svelte-1on0sn0">JSON-объект</h2>'),qt=g("<!> <!>",1),Rt=g("<!> <!>",1),Vt=g("<!> <!>",1),It=g("<!> <!>",1),jt=g("<!> <!>",1),Dt=g("<!> <!> <!> <!>",1),Gt=g("<!> <!> <!> <!> <!>",1),Ut=g('<h2 class="svelte-1on0sn0">JSON-массив</h2>'),zt=g("<!> <!> <!> <!> <!>",1),Ht=g('<h1 class="svelte-1on0sn0">Что такое JSON</h1> <!> <!> <p class="svelte-1on0sn0">JSON (англ. JavaScript Object Notation) — это формат данных, который в основном используется для хранения и передачи данных, в частности между сервером и веб-приложением. Он широко применяется для представления структурированных данных.</p> <!> <p class="svelte-1on0sn0">В качестве значений в JSON могут быть использованы:</p> <!> <p class="svelte-1on0sn0">Я думаю, с простыми значениями вопросов не возникнет, поэтому разберем массивы и объекты.</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <!> <h3>Как устроен</h3> <p class="svelte-1on0sn0">Возьмем пример из <!>.</p> <!> <p class="svelte-1on0sn0">И разберемся, что означает эта запись.</p> <p class="svelte-1on0sn0">Объект заключен в фигурные скобки &lbrace;&rbrace;</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">JSON-объект — это неупорядоченное множество пар «ключ:значение».</p> <p class="svelte-1on0sn0">Ключ — это название параметра, который мы передаем серверу. Он служит маркером для принимающей запрос системы: «смотри, здесь у меня значение такого-то параметра!». А иначе как система поймет, где что? Ей нужна подсказка!</p> <p class="svelte-1on0sn0">Вот, например, «Виктор Иван» — это что? Ищем описание параметра «query» в документации — ага, да это же запрос для подсказок!</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Это как если бы мы вбили строку «Виктор Иван» в GUI (графическом интерфейсе пользователя):</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Когда пользователь начинает вводить данные в формочку, то сразу видит результат — появляется список подсказок. Это значит, что разработчик прописал в коде условие — делать некое действие на каждый ввод символа в это поле. Какое действие? Можно увидеть через f12.</p> <p class="svelte-1on0sn0">Открываем вкладку Network, вбиваем «Виктор Иван» и находим запрос, который при этом уходит на сервер. Ого, да это тот самый пример, что мы разбираем!</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Клиент передает серверу запрос в JSON-формате. Внутри два параметра, две пары «ключ-значение»:</p> <!> <p class="svelte-1on0sn0">Пары «ключ-значение» разделены запятыми:</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Строки берем в кавычки, числа нет:</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Конечно, внутри может быть не только строка или число. Это может быть и другой объект! Или массив... Или объект в массиве, массив в объекте... Любое количество уровней вложенности =))</p> <p class="svelte-1on0sn0">Объект, массив, число, булево значение (true / false) — если у нас НЕ строка, кавычки не нужны. Но в любом случае это будет значение какого-то ключа:</p> ТАБЛИЦА <p class="svelte-1on0sn0">Переносы строк делать необязательно. Вообще пробелы и переносы строк нужны только человеку для читабельности, система поймет и без них:</p> ТАБЛИЦА <p class="svelte-1on0sn0">Ключ — ВСЕГДА строка, но мы все равно берем его в кавычки. В JavaScript этого можно не делать, в JSON нельзя.</p> ТАБЛИЦА <p class="svelte-1on0sn0">По крайней мере, если вы работаете с простыми значениями ключей, а несколько слов записываете в верблюжьемРегистре или в змеином_регистре. Если вы хотите написать в ключе несколько слов через пробел, ключ нужно взять в кавычки.</p> ТАБЛИЦА <p class="svelte-1on0sn0">И все же я рекомендую использовать простые названия ключей, или использовать snake_case.</p> <p class="svelte-1on0sn0">Писать ключи можно в любом порядке. Ведь JSON-объект — это <u>неупорядоченное</u> множество пар «ключ:значение».</p> <!> <p class="svelte-1on0sn0">Очень важно это понимать, и тестировать! Принимающая запрос система должна ориентировать на название ключей в запросе, а не на порядок их следования. Ключевое слово «должна» )) Хотя знаю примеры, когда от перестановки ключей местами всё ломалось, ведь «первым должен идти запрос, а не count!».</p> <h3>Ключ или свойство?</h3> <p class="svelte-1on0sn0">Вот у нас есть JSON-объект:</p> <!> <p class="svelte-1on0sn0">Что такое «query»? Если я хочу к нему обратиться, как мне это сказать? Есть 2 варианта, и оба правильные:</p> <!> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">То есть «query» можно назвать как ключом, так и свойством. А как правильно то?</p> <div style="text-align: center;  margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Правильно и так, и так! Просто есть разные определения объекта:</p> <h3>Объект</h3> <p class="svelte-1on0sn0">В JS объект — это именно объект. У которого есть набор свойств и методов:</p> <!> <p class="svelte-1on0sn0">То есть если мы хотим создать машину, есть два пути:</p> <!> <p class="svelte-1on0sn0">Аналогично с кошечкой, собачкой, другом из записной книжки...</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Объектно-ориентированное программирование (ООП) предлагает мыслить не набором переменных, а объектом. Хотя бы потому, что это логичнее. Переменных в коде будет много, как понять, какие из них взаимосвязаны?</p> <p class="svelte-1on0sn0">Вот если я создаю машину, сколько переменных мне надо заполнить? А если меняю данные? А если удаляю? Когда переменные разбросаны по коду, можно забыть про какую-то и получить ошибку в интерфейсе. А если у нас есть цельный объект, всегда можно посмотреть, какие у него есть свойства и методы.</p> <p class="svelte-1on0sn0">Например, создадим кошечку:</p> <!> <div style="text-align: center;  margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">В объекте cat есть:</p> <!> <p class="svelte-1on0sn0">По коду сразу видно, что у кошечки есть имя и возраст, она умеет спать. Если разработчик решит добавить новые свойства или методы, он дополнит этот объект, и снова всё в одном месте.</p> <p class="svelte-1on0sn0">Если потом нужно будет получить информацию по кошечке, разработчик сделает REST-метод getByID, searchKitty, или какой-то другой. А в нем будет возвращать свойства объекта.</p> <p class="svelte-1on0sn0">То есть метод вернет</p> <!> <p class="svelte-1on0sn0">И при использовании имени вполне уместно говорить «обратиться к свойству объекта». Это ведь объект (кошечка), и его свойства!</p> <h3>Объект</h3> <p class="svelte-1on0sn0">Второе определение объекта — неупорядоченное множество пар ключ:значение, заключенное в фигурные скобки &lbrace;&rbrace;.</p> <p class="svelte-1on0sn0">Оно применимо тогда, когда внутри фигурных скобок приходит не конкретный целостный объект, а просто набор полей. Они могут быть связаны между собой, а могут относится к совершенно разным объектам внутри кода:</p> <!> <p class="svelte-1on0sn0">В таком случае логично называть эти параметры именно ключами — мы хотим получить значение по ключу.</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Но в любом случае, и «ключ», и «свойство» будет правильно. Не пугайтесь, если в одной книге / статье / видео увидели одно, в другой другое... Это просто разные трактовки.</p> <h3>Итого</h3> <p class="svelte-1on0sn0">Json-объект — это неупорядоченное множество пар «ключ:значение», заключённое в фигурные скобки «&lbrace;  &rbrace;». Ключ описывается строкой, между ним и значением стоит символ «:». Пары ключ-значение отделяются друг от друга запятыми.</p> <p class="svelte-1on0sn0">Значения ключа могут быть любыми:</p> <!> <p class="svelte-1on0sn0">И только строку мы берем в кавычки!</p> <!> <p class="svelte-1on0sn0"><span class="bold svelte-1on0sn0">Как устроен</span></p> <p class="svelte-1on0sn0">Давайте снова начнем с примера. Это массив:</p> <!> <p class="svelte-1on0sn0">Массив заключен в квадратные скобки []</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Внутри квадратных скобок идет набор значений. Тут нет ключей, как в объекте, поэтому обращаться к массиву можно только по номеру элемента. И поэтому в случае массива менять местами данные внутри <u>нельзя</u>. Это упорядоченное множество значений.</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Значения разделены запятыми:</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0"><span class="bold svelte-1on0sn0">Значения внутри</span></p> <p class="svelte-1on0sn0">Внутри массива может быть все, что угодно:</p> <p class="svelte-1on0sn0"><span class="bold svelte-1on0sn0">Цифры</span></p> <!> <p class="svelte-1on0sn0"><span class="bold svelte-1on0sn0">Строки</span></p> <!> <p class="svelte-1on0sn0"><span class="bold svelte-1on0sn0">Смесь</span></p> <!> <p class="svelte-1on0sn0"><span class="bold svelte-1on0sn0">Объекты</span></p> <p class="svelte-1on0sn0">Да, а почему бы и нет:</p> <!> <p class="svelte-1on0sn0">Или даже что-то более сложное. Вот пример ответа подсказок из Дадаты:</p> <!> <p class="svelte-1on0sn0">Система возвращает массив подсказок. Сколько запросили в параметре count, столько и получили. Каждая подсказка — объект, внутри которого еще один объект. И это далеко не самая сложная структура! Уровней вложенности может быть сколько угодно — массив в массиве, который внутри объекта, который внутри массива, который внутри объекта...</p> <p class="svelte-1on0sn0">Ну и, конечно, можно и наоборот, передать массив в объекте. Вот пример запроса в подсказки:</p> <!> <h3>Итого</h3> <p class="svelte-1on0sn0">Массив — это просто набор значений, разделенных запятыми. Находится внутри квадратных скобок [].</p> <p class="svelte-1on0sn0">А вот внутри него может быть все, что угодно:</p> <!>',1);function ns(E,B){_t(B,!1);let S=kt(B,"rows",24,()=>[{id:1,name:"Тест",right:{test:123}}]);ht(()=>yt(S()),()=>{console.log("Rows:",S())}),ft(),Pt();var A=Ht(),T=e(m(A),2);Ie(T,{zebra:!0,headers:[{key:"name",value:"Name"},{key:"right",value:"Right"}],get rows(){return S()},$$slots:{"cell-right":(a,f)=>{const t=bt(()=>f.value);var v=wt(),_=m(v);Jt(_,()=>JSON.stringify(mt(t),null,2).replace(/\n/g,"<br>")),s(a,v)}}});var J=e(T,2);Ot(J,{children:(a,f)=>{var t=Bt(),v=m(t);Lt(v,{children:(n,h)=>{je(n,{children:(o,d)=>{var $=Mt(),i=m($);De(i,{children:(O,ee)=>{r();var L=l("Так правильно");s(O,L)},$$slots:{default:!0}});var Z=e(i,2);De(Z,{children:(O,ee)=>{r();var L=l("Так тоже правильно");s(O,L)},$$slots:{default:!0}}),s(o,$)},$$slots:{default:!0}})},$$slots:{default:!0}});var _=e(v,2);Nt(_,{children:(n,h)=>{je(n,{children:(o,d)=>{var $=Ct(),i=m($);Ge(i,{children:(O,ee)=>{x(O,{type:"multi",hideCopyButton:!0,children:(L,ot)=>{r();var C=l();C.nodeValue=`{
	query: "Виктор Иван",
	count: 7
}`,s(L,C)},$$slots:{default:!0}})},$$slots:{default:!0}});var Z=e(i,2);Ge(Z,{children:(O,ee)=>{x(O,{type:"multi",hideCopyButton:!0,children:(L,ot)=>{r();var C=l();C.nodeValue=`{
	count: 7,
	query: "Виктор Иван"
}`,s(L,C)},$$slots:{default:!0}})},$$slots:{default:!0}}),s(o,$)},$$slots:{default:!0}})},$$slots:{default:!0}}),s(a,t)},$$slots:{default:!0}});var P=e(J,4);te(P,{id:"JSON",children:(a,f)=>{var t=Et();s(a,t)},$$slots:{default:!0}});var k=e(P,4);w(k,{style:"margin-left: 3.5em;",children:(a,f)=>{var t=At(),v=m(t);u(v,{children:(d,$)=>{r();var i=l("JSON-объект");s(d,i)},$$slots:{default:!0}});var _=e(v,2);u(_,{children:(d,$)=>{r();var i=l("Массив");s(d,i)},$$slots:{default:!0}});var n=e(_,2);u(n,{children:(d,$)=>{r();var i=l("Число (целое или вещественное)");s(d,i)},$$slots:{default:!0}});var h=e(n,2);u(h,{children:(d,$)=>{r();var i=l("Литералы true (логическое значение «истина»), false (логическое значение «ложь») и null");s(d,i)},$$slots:{default:!0}});var o=e(h,2);u(o,{children:(d,$)=>{r();var i=l("Строка");s(d,i)},$$slots:{default:!0}}),s(a,t)},$$slots:{default:!0}});var b=e(k,4),M=p(b),q=p(M);y(q,{src:"https://images-cdn.9gag.com/photo/aGdOG6w_700b.jpg",style:"width: 100%;"}),c(M),c(b);var N=e(b,2);te(N,{id:"JSON-object",children:(a,f)=>{var t=Tt();s(a,t)},$$slots:{default:!0}});var R=e(N,4),Ue=e(p(R));St(Ue,{visited:!0,href:"https://confluence.hflabs.ru/pages/viewpage.action?pageId=204669115",children:(a,f)=>{r();var t=l("документации подсказок Дадаты по ФИО:");s(a,t)},$$slots:{default:!0}}),r(),c(R);var se=e(R,2);x(se,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(a,f)=>{r();var t=l();t.nodeValue=`{
  "query": "Виктор Иван",
  "count": 7
}`,s(a,t)},$$slots:{default:!0}});var V=e(se,6),ae=p(V),ze=p(ae);y(ze,{src:"https://habrastorage.org/getpro/habr/upload_files/acd/1a0/b3e/acd1a0b3e42086178942fcc0c0fd8d1b.png",style:"width: 100%;"}),c(ae),c(V);var I=e(V,8),re=p(I),He=p(re);y(He,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/876/d5f/5df/876d5f5df458e26a565517291b9c08f5.png",style:"width: 100%;"}),c(re),c(I);var j=e(I,4),le=p(j),Fe=p(le);y(Fe,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/bfe/c50/765/bfec507654e0e328a5260abae1a63928.png",style:"width: 100%;"}),c(le),c(j);var D=e(j,6),oe=p(D),Ke=p(oe);y(Ke,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/2db/ef1/434/2dbef14341056172d3815e69b7f0772b.png",style:"width: 100%;"}),c(oe),c(D);var ne=e(D,4);w(ne,{style:"margin-left: 3.5em;",children:(a,f)=>{var t=qt(),v=m(t);u(v,{children:(n,h)=>{r();var o=l("query — строка, по которой ищем (то, что пользователь вбил в GUI);");s(n,o)},$$slots:{default:!0}});var _=e(v,2);u(_,{children:(n,h)=>{r();var o=l("count — количество подсказок в ответе (в Дадате этот параметр зашит в форму, всегда возвращается 7 подсказок. Но если дергать подсказки напрямую, значение можно менять!)");s(n,o)},$$slots:{default:!0}}),s(a,t)},$$slots:{default:!0}});var G=e(ne,4),de=p(G),Ye=p(de);y(Ye,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/404/210/27a/40421027ad8962083a263742db86b2e2.png",style:"width: 100%;"}),c(de),c(G);var U=e(G,4),ie=p(U),Qe=p(ie);y(Qe,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/fe9/c45/523/fe9c45523dd56e5f240b7f1bdf267ecf.png",style:"width: 100%;"}),c(ie),c(U);var ve=e(U,16);Ie(ve,{zebra:!0,headers:[{key:"name",value:"Так правильно"},{key:"right",value:"Так тоже правильно"}],get rows(){return S()}});var pe=e(ve,8);x(pe,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(a,f)=>{r();var t=l();t.nodeValue=`{
  "query": "Виктор Иван",
  "count": 7
}`,s(a,t)},$$slots:{default:!0}});var ce=e(pe,4);w(ce,{style:"margin-left: 3.5em;",children:(a,f)=>{var t=Rt(),v=m(t);u(v,{children:(n,h)=>{r();var o=l("Обратиться к свойству объекта;");s(n,o)},$$slots:{default:!0}});var _=e(v,2);u(_,{children:(n,h)=>{r();var o=l("Получить значение по ключу.");s(n,o)},$$slots:{default:!0}}),s(a,t)},$$slots:{default:!0}});var z=e(ce,2),ue=p(z),We=p(ue);y(We,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/571/394/c65/571394c65e5f9992310a329cad1df6c3.png",style:"width: 100%;"}),c(ue),c(z);var H=e(z,4),$e=p(H),Xe=p($e);y(Xe,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a17/d1f/8d3/a17d1f8d358046158dc484d8490eb993.png",style:"width: 100%;"}),c($e),c(H);var _e=e(H,8);w(_e,{style:"margin-left: 3.5em;",children:(a,f)=>{var t=Vt(),v=m(t);u(v,{children:(n,h)=>{r();var o=l("Свойства — описывают, ЧТО мы создаем.");s(n,o)},$$slots:{default:!0}});var _=e(v,2);u(_,{children:(n,h)=>{r();var o=l("Методы — что объект умеет ДЕЛАТЬ.");s(n,o)},$$slots:{default:!0}}),s(a,t)},$$slots:{default:!0}});var he=e(_e,4);w(he,{style:"margin-left: 3.5em;",children:(a,f)=>{var t=It(),v=m(t);u(v,{children:(n,h)=>{r();var o=l("Перечислить 10 разных переменных — модель, номер, цвет, пробег...");s(n,o)},$$slots:{default:!0}});var _=e(v,2);u(_,{children:(n,h)=>{r();var o=l("Создать один объект, где будут все эти свойства.");s(n,o)},$$slots:{default:!0}}),s(a,t)},$$slots:{default:!0}});var F=e(he,4),fe=p(F),Ze=p(fe);y(Ze,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/74e/19e/aea/74e19eaea84e2ed0ca70a8dccd97c42b.png",style:"width: 100%;"}),c(fe),c(F);var ge=e(F,8);x(ge,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(a,f)=>{r();var t=l();t.nodeValue=`var cat = {
name: “Pussy”,
year: 1,
sleep: function() {
// sleeping code
}
}`,s(a,t)},$$slots:{default:!0}});var K=e(ge,2),ye=p(K),et=p(ye);y(et,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/e54/411/117/e54411117536be81e8adbdc73a022897.png",style:"width: 100%;"}),c(ye),c(K);var me=e(K,4);w(me,{style:"margin-left: 3.5em;",children:(a,f)=>{var t=jt(),v=m(t);u(v,{children:(n,h)=>{r();var o=l("Свойства — name, year (что это за кошечка)");s(n,o)},$$slots:{default:!0}});var _=e(v,2);u(_,{children:(n,h)=>{r();var o=l("Функции — sleep (что она умеет делать, описание поведения)");s(n,o)},$$slots:{default:!0}}),s(a,t)},$$slots:{default:!0}});var be=e(me,8);x(be,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(a,f)=>{r();var t=l();t.nodeValue=`{
name: “Pussy”,
year: 1,
}
`,s(a,t)},$$slots:{default:!0}});var xe=e(be,10);w(xe,{style:"margin-left: 3.5em;",children:(a,f)=>{var t=Dt(),v=m(t);u(v,{children:(o,d)=>{r();var $=l("client_fio (в коде это свойство fio объекта client)");s(o,$)},$$slots:{default:!0}});var _=e(v,2);u(_,{children:(o,d)=>{r();var $=l("kitty_name (в коде это свойство name объекта cat)");s(o,$)},$$slots:{default:!0}});var n=e(_,2);u(n,{children:(o,d)=>{r();var $=l("car_model (в коде это свойство model объекта car)");s(o,$)},$$slots:{default:!0}});var h=e(n,2);u(h,{children:(o,d)=>{r();var $=l("…");s(o,$)},$$slots:{default:!0}}),s(a,t)},$$slots:{default:!0}});var Y=e(xe,4),we=p(Y),tt=p(we);y(tt,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a27/55f/745/a2755f74538cb927c9117a876c44232d.png",style:"width: 100%;"}),c(we),c(Y);var Pe=e(Y,10);w(Pe,{style:"margin-left: 3.5em;",children:(a,f)=>{var t=Gt(),v=m(t);u(v,{children:(d,$)=>{r();var i=l("Число");s(d,i)},$$slots:{default:!0}});var _=e(v,2);u(_,{children:(d,$)=>{r();var i=l("строка");s(d,i)},$$slots:{default:!0}});var n=e(_,2);u(n,{children:(d,$)=>{r();var i=l("массив");s(d,i)},$$slots:{default:!0}});var h=e(n,2);u(h,{children:(d,$)=>{r();var i=l("другой объект");s(d,i)},$$slots:{default:!0}});var o=e(h,2);u(o,{children:(d,$)=>{r();var i=l("…");s(d,i)},$$slots:{default:!0}}),s(a,t)},$$slots:{default:!0}});var ke=e(Pe,4);te(ke,{id:"JSON-array",children:(a,f)=>{var t=Ut();s(a,t)},$$slots:{default:!0}});var Oe=e(ke,6);x(Oe,{code:'[ "MALE", "FEMALE" ]',hideCopyButton:!0,showMoreLess:!1});var Q=e(Oe,4),Le=p(Q),st=p(Le);y(st,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/5b1/c5f/800/5b1c5f800d9c612a1b27e87be3cc0297.png",style:"width: 100%;"}),c(Le),c(Q);var W=e(Q,4),Ne=p(W),at=p(Ne);y(at,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/f7b/4b1/af8/f7b4b1af8f617aa9ca89fe15124863ed.png",style:"width: 100%;"}),c(Ne),c(W);var X=e(W,4),Se=p(X),rt=p(Se);y(rt,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/760/c8f/f7a/760c8ff7ab4e88155efae8faeb46b689.png",style:"width: 100%;"}),c(Se),c(X);var Je=e(X,8);x(Je,{code:"[ 1, 5, 10, 33 ]",hideCopyButton:!0,showMoreLess:!1});var Me=e(Je,4);x(Me,{code:'[ "MALE", "FEMALE" ]',hideCopyButton:!0,showMoreLess:!1});var Ce=e(Me,4);x(Ce,{code:'[ 1, "Андрюшка",  10, 33 ]',hideCopyButton:!0,showMoreLess:!1});var Be=e(Ce,6);x(Be,{code:'[1, {a:1, b:2}, "такой вот массивчик"]',hideCopyButton:!0,showMoreLess:!1});var Ee=e(Be,4);x(Ee,{type:"multi",hideCopyButton:!0,children:(a,f)=>{r();var t=l();t.nodeValue=`[
        {
            "value": "Иванов Виктор",
            "unrestricted_value": "Иванов Виктор",
            "data": {
                "surname": "Иванов",
                "name": "Виктор",
                "patronymic": null,
                "gender": "MALE"
            }
        },
        {
            "value": "Иванченко Виктор",
            "unrestricted_value": "Иванченко Виктор",
            "data": {
                "surname": "Иванченко",
                "name": "Виктор",
                "patronymic": null,
                "gender": "MALE"
            }
        },
        {
            "value": "Виктор Иванович",
            "unrestricted_value": "Виктор Иванович",
            "data": {
                "surname": null,
                "name": "Виктор",
                "patronymic": "Иванович",
                "gender": "MALE"
            }
        }
]`,s(a,t)},$$slots:{default:!0}});var Ae=e(Ee,6);x(Ae,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(a,f)=>{r();var t=l();t.nodeValue=`{
"query": "Виктор Иван",
"count": 7,
"parts": ["NAME", "SURNAME"]
}`,s(a,t)},$$slots:{default:!0}});var lt=e(Ae,8);w(lt,{style:"margin-left: 3.5em;",children:(a,f)=>{var t=zt(),v=m(t);u(v,{children:(d,$)=>{r();var i=l("числа");s(d,i)},$$slots:{default:!0}});var _=e(v,2);u(_,{children:(d,$)=>{r();var i=l("строки");s(d,i)},$$slots:{default:!0}});var n=e(_,2);u(n,{children:(d,$)=>{r();var i=l("другие массивы");s(d,i)},$$slots:{default:!0}});var h=e(n,2);u(h,{children:(d,$)=>{r();var i=l("объекты");s(d,i)},$$slots:{default:!0}});var o=e(h,2);u(o,{children:(d,$)=>{r();var i=l("смесь из всего вышеназванного");s(d,i)},$$slots:{default:!0}}),s(a,t)},$$slots:{default:!0}}),s(E,A),gt()}export{ns as component};
