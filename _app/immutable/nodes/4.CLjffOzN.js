import"../chunks/Bg9kRutz.js";import"../chunks/69_IOA4Y.js";import{V as s,W as C,L as p,X as r,M as v}from"../chunks/J_uPI_2X.js";import{t as L,a as o,b as a}from"../chunks/BKDYYQra.js";import{O as n}from"../chunks/RnTPVsXl.js";import{C as l}from"../chunks/BwSacaDf.js";import{U as I}from"../chunks/BrLdt2Vd.js";import{L as D}from"../chunks/C159P-DO.js";var M=L("<!> <!>",1),X=L('<h1 class="svelte-oir1bt">Json в JavaScript</h1> <p class="svelte-oir1bt">Примечание: в Python данные JSON обычно представлены в виде строки.</p> <h2 id="parsingJavaScript" class="svelte-oir1bt">1. Парсинг JSON в JavaScript</h2> <p class="svelte-oir1bt">Парсинг JSON — это процесс преобразования строки JSON в нативный <!>. JavaScript предоставляет метод <!> для этой цели.</p> <!> <p class="svelte-oir1bt">Результат</p> <!> <!> <p class="svelte-oir1bt"><span class="bold svelte-oir1bt">Обработка исключений при парсинге JSON</span></p> <!> <p class="svelte-oir1bt">В этом примере отсутствующая фигурная скобка вызывает ошибку. Блок catch помогает вам элегантно обработать такие проблемы.</p> <h2 id="stringifyingJavaScript" class="svelte-oir1bt">2. Stringifying JavaScript объектов</h2> <p class="svelte-oir1bt">После того как вы распарсили JSON и преобразовали его в объект JavaScript, вы можете захотеть отправить его обратно в виде строки JSON. Это делается с помощью <!>.</p> <!> <p class="svelte-oir1bt">Результат</p> <!> <p class="svelte-oir1bt">Это преобразует объект user в строку, которую можно отправить по сети или сохранить в файл.</p> <h2 id="modifyingDataJavaScript" class="svelte-oir1bt">3. Модификация данных JSON</h2> <p class="svelte-oir1bt">После того как вы распарсили <!> в <!>, вы можете легко изменить его свойства или добавить новые.</p> <!> <p class="svelte-oir1bt">Результат</p> <!> <p class="svelte-oir1bt">Здесь мы добавляем новое свойство (profession) к распарсенному объекту JSON и преобразуем его обратно в строку JSON с помощью JSON.stringify().</p> <h2 id="filteringATransformationJavaScript" class="svelte-oir1bt">4. Фильтрация и преобразование данных JSON</h2> <p class="svelte-oir1bt">Вам часто может понадобиться фильтровать или преобразовывать данные, содержащиеся в объектах или массивах JSON. Методы массивов JavaScript, такие как <!> , <!> и <!>, идеально подходят для этой задачи.</p> <p class="svelte-oir1bt"><span class="bold svelte-oir1bt">Фильтрация данных JSON</span></p> <p class="svelte-oir1bt">Предположим, у вас есть массив объектов пользователей, и вы хотите отфильтровать пользователей, старше 30 лет.</p> <!> <p class="svelte-oir1bt">В этом примере метод filter() используется для создания нового массива, который включает только пользователей старше 30 лет.</p> <h2 id="SerializationJavaScript" class="svelte-oir1bt">5. Сериализация объектов в формат JSON</h2> <p class="svelte-oir1bt">Сериализация — это процесс преобразования объекта JavaScript в строку JSON. Это обычно делается при отправке данных с клиента на сервер.</p> <!> <p class="svelte-oir1bt">Результат</p> <!> <p class="svelte-oir1bt">Это делает данные готовыми для передачи в формате JSON через HTTP-запросы или сохранения в системе хранения.</p>',1);function te(T){var h=X(),c=s(C(h),6),m=s(p(c));n(m,{visited:!0,href:"https://www.geeksforgeeks.org/objects-in-javascript/",children:(t,i)=>{r();var e=a("JavaScript объект");o(t,e)},$$slots:{default:!0}});var W=s(m,2);n(W,{visited:!0,href:"https://www.geeksforgeeks.org/javascript-json-parse-method/",children:(t,i)=>{r();var e=a("JSON.parse()");o(t,e)},$$slots:{default:!0}}),r(),v(c);var S=s(c,2);l(S,{type:"multi",children:(t,i)=>{r();var e=a();e.nodeValue=`const json = '{"name": "Ravi", "age": 25}';
const obj = JSON.parse(json);
console.log(obj.name);`,o(t,e)},$$slots:{default:!0}});var J=s(S,4);l(J,{hideCopyButton:!0,code:"Ravi"});var b=s(J,2);I(b,{style:"margin-left: 3.5em;",children:(t,i)=>{var e=M(),V=C(e);D(V,{children:(f,H)=>{r();var g=a("jsonData — это строка JSON.");o(f,g)},$$slots:{default:!0}});var E=s(V,2);D(E,{children:(f,H)=>{r();var g=a("Метод JSON.parse() преобразует её в объект JavaScript, и вы можете получить доступ к свойствам, таким как name и age.");o(f,g)},$$slots:{default:!0}}),o(t,e)},$$slots:{default:!0}});var _=s(b,4);l(_,{type:"multi",children:(t,i)=>{r();var e=a();e.nodeValue=`const json = '{"name": "Ravi", "age": 25';

try {
    const obj = JSON.parse(json);
    console.log(obj.name);
} catch (error) {
    console.error("Error parsing JSON:", error);
}`,o(t,e)},$$slots:{default:!0}});var d=s(_,6),B=s(p(d));n(B,{visited:!0,href:"https://www.geeksforgeeks.org/javascript-json-stringify-method/",children:(t,i)=>{r();var e=a("JSON.stringify()");o(t,e)},$$slots:{default:!0}}),r(),v(d);var j=s(d,2);l(j,{type:"multi",children:(t,i)=>{r();var e=a();e.nodeValue=`const user = {
    name: "Ravi",
    age: 25,
    profession: "Web Developer"
};

const jsonS = JSON.stringify(user);
console.log(jsonS);`,o(t,e)},$$slots:{default:!0}});var O=s(j,4);l(O,{hideCopyButton:!0,code:'{"name":"Ravi","age":25,"profession":"Web Developer"}'});var u=s(O,6),N=s(p(u));n(N,{visited:!0,href:"https://www.geeksforgeeks.org/javascript-check-if-a-string-is-a-valid-json-string/",children:(t,i)=>{r();var e=a("JSON строку");o(t,e)},$$slots:{default:!0}});var A=s(N,2);n(A,{visited:!0,href:"https://www.geeksforgeeks.org/objects-in-javascript/",children:(t,i)=>{r();var e=a("JavaScript объект");o(t,e)},$$slots:{default:!0}}),r(),v(u);var y=s(u,2);l(y,{type:"multi",children:(t,i)=>{r();var e=a();e.nodeValue=`const json = '{"name": "Ravi", "age": 25}';
const obj = JSON.parse(json);

obj.profession = "Web Developer";
console.log(JSON.stringify(obj));`,o(t,e)},$$slots:{default:!0}});var w=s(y,4);l(w,{hideCopyButton:!0,code:'{"name":"Ravi","age":25,"profession":"Web Developer"}'});var $=s(w,6),P=s(p($));n(P,{visited:!0,href:"https://www.geeksforgeeks.org/javascript-array-filter-method/",children:(t,i)=>{r();var e=a("filter()");o(t,e)},$$slots:{default:!0}});var x=s(P,2);n(x,{visited:!0,href:"https://www.geeksforgeeks.org/javascript-array-map-method/",children:(t,i)=>{r();var e=a("map()");o(t,e)},$$slots:{default:!0}});var U=s(x,2);n(U,{visited:!0,href:"https://www.geeksforgeeks.org/javascript-array-reduce-method/",children:(t,i)=>{r();var e=a("reduce()");o(t,e)},$$slots:{default:!0}}),r(),v($);var k=s($,6);l(k,{type:"multi",children:(t,i)=>{r();var e=a();e.nodeValue=`const users = [
    { "name": "Amit", "age": 24 },
    { "name": "Rahul", "age": 45 },
    { "name": "Priya", "age": 30 }
];

const olderThan30 = users.filter(user => user.age > 30);
console.log(olderThan30);`,o(t,e)},$$slots:{default:!0}});var R=s(k,8);l(R,{type:"multi",children:(t,i)=>{r();var e=a();e.nodeValue=`const user = {
    name: "Simran",
    age: 29
};

const jsonS = JSON.stringify(user);
console.log(jsonS);`,o(t,e)},$$slots:{default:!0}});var z=s(R,4);l(z,{hideCopyButton:!0,code:'{"name":"Simran","age":29}'}),r(2),o(T,h)}export{te as component};
