import"../chunks/Bg9kRutz.js";import"../chunks/69_IOA4Y.js";import{b as We,h as Je,a as Me,j as Xe,e as Ce,y as Ze,$ as es,a0 as ss,s as ts,z as as,v as rs,Y as ls,a1 as os,a2 as ns,T as e,U as b,_ as ds,J as i,R as is,V as r,K as v,g as vs,d as ps}from"../chunks/BjD_Ek8v.js";import{c as Ee,d as cs,t as y,a as t,f as us,b as l}from"../chunks/BKj4abRE.js";import{i as _s}from"../chunks/BcGeeHkV.js";import{p as hs}from"../chunks/BI8UVfOg.js";import"../chunks/DQLHG22Z.js";import{A as H}from"../chunks/CBfUQGc3.js";import{D as Ae}from"../chunks/ET9jEhIZ.js";import{O as x}from"../chunks/BxOtZaeI.js";import{I as g}from"../chunks/do2IaR1L.js";import{O as $s}from"../chunks/RUKFRWM2.js";import{C as w}from"../chunks/CT94UoGw.js";import{L as u}from"../chunks/zjbbgf1y.js";function fs(C,S,L,E,A){var N=C,k="",P;We(()=>{if(k===(k=S()??"")){Je&&Me();return}P!==void 0&&(rs(P),P=void 0),k!==""&&(P=Xe(()=>{if(Je){Ce.data;for(var m=Me(),J=m;m!==null&&(m.nodeType!==8||m.data!=="");)J=m,m=Ze(m);if(m===null)throw es(),ss;Ee(Ce,J),N=ts(m);return}var M=k+"",O=cs(M);Ee(as(O),O.lastChild),N.before(O)}))})}var gs=y('<h2 class="svelte-1on0sn0">Как устроен JSON</h2>'),ys=y("<!> <!> <!> <!> <!>",1),ms=y('<h2 class="svelte-1on0sn0">JSON-объект</h2>'),bs=y("<!> <!>",1),ws=y("<!> <!>",1),xs=y("<!> <!>",1),Ps=y("<!> <!>",1),ks=y("<!> <!>",1),Os=y("<!> <!> <!> <!>",1),Ls=y("<!> <!> <!> <!> <!>",1),Ns=y('<h2 class="svelte-1on0sn0">JSON-массив</h2>'),Ss=y("<!> <!> <!> <!> <!>",1),Js=y('<h1 class="svelte-1on0sn0">Что такое JSON</h1> <!> <p class="svelte-1on0sn0">JSON (англ. JavaScript Object Notation) — это формат данных, который в основном используется для хранения и передачи данных, в частности между сервером и веб-приложением. Он широко применяется для представления структурированных данных.</p> <!> <p class="svelte-1on0sn0">В качестве значений в JSON могут быть использованы:</p> <!> <p class="svelte-1on0sn0">Я думаю, с простыми значениями вопросов не возникнет, поэтому разберем массивы и объекты.</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <!> <h3>Как устроен</h3> <p class="svelte-1on0sn0">Возьмем пример из <!>.</p> <!> <p class="svelte-1on0sn0">И разберемся, что означает эта запись.</p> <p class="svelte-1on0sn0">Объект заключен в фигурные скобки &lbrace;&rbrace;</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">JSON-объект — это неупорядоченное множество пар «ключ:значение».</p> <p class="svelte-1on0sn0">Ключ — это название параметра, который мы передаем серверу. Он служит маркером для принимающей запрос системы: «смотри, здесь у меня значение такого-то параметра!». А иначе как система поймет, где что? Ей нужна подсказка!</p> <p class="svelte-1on0sn0">Вот, например, «Виктор Иван» — это что? Ищем описание параметра «query» в документации — ага, да это же запрос для подсказок!</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Это как если бы мы вбили строку «Виктор Иван» в GUI (графическом интерфейсе пользователя):</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Когда пользователь начинает вводить данные в формочку, то сразу видит результат — появляется список подсказок. Это значит, что разработчик прописал в коде условие — делать некое действие на каждый ввод символа в это поле. Какое действие? Можно увидеть через f12.</p> <p class="svelte-1on0sn0">Открываем вкладку Network, вбиваем «Виктор Иван» и находим запрос, который при этом уходит на сервер. Ого, да это тот самый пример, что мы разбираем!</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Клиент передает серверу запрос в JSON-формате. Внутри два параметра, две пары «ключ-значение»:</p> <!> <p class="svelte-1on0sn0">Пары «ключ-значение» разделены запятыми:</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Строки берем в кавычки, числа нет:</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Конечно, внутри может быть не только строка или число. Это может быть и другой объект! Или массив... Или объект в массиве, массив в объекте... Любое количество уровней вложенности =))</p> <p class="svelte-1on0sn0">Объект, массив, число, булево значение (true / false) — если у нас НЕ строка, кавычки не нужны. Но в любом случае это будет значение какого-то ключа:</p> ТАБЛИЦА <p class="svelte-1on0sn0">Переносы строк делать необязательно. Вообще пробелы и переносы строк нужны только человеку для читабельности, система поймет и без них:</p> ТАБЛИЦА <p class="svelte-1on0sn0">Ключ — ВСЕГДА строка, но мы все равно берем его в кавычки. В JavaScript этого можно не делать, в JSON нельзя.</p> ТАБЛИЦА <p class="svelte-1on0sn0">По крайней мере, если вы работаете с простыми значениями ключей, а несколько слов записываете в верблюжьемРегистре или в змеином_регистре. Если вы хотите написать в ключе несколько слов через пробел, ключ нужно взять в кавычки.</p> ТАБЛИЦА <p class="svelte-1on0sn0">И все же я рекомендую использовать простые названия ключей, или использовать snake_case.</p> <p class="svelte-1on0sn0">Писать ключи можно в любом порядке. Ведь JSON-объект — это <u>неупорядоченное</u> множество пар «ключ:значение».</p> <!> <p class="svelte-1on0sn0">Очень важно это понимать, и тестировать! Принимающая запрос система должна ориентировать на название ключей в запросе, а не на порядок их следования. Ключевое слово «должна» )) Хотя знаю примеры, когда от перестановки ключей местами всё ломалось, ведь «первым должен идти запрос, а не count!».</p> <h3>Ключ или свойство?</h3> <p class="svelte-1on0sn0">Вот у нас есть JSON-объект:</p> <!> <p class="svelte-1on0sn0">Что такое «query»? Если я хочу к нему обратиться, как мне это сказать? Есть 2 варианта, и оба правильные:</p> <!> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">То есть «query» можно назвать как ключом, так и свойством. А как правильно то?</p> <div style="text-align: center;  margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Правильно и так, и так! Просто есть разные определения объекта:</p> <h3>Объект</h3> <p class="svelte-1on0sn0">В JS объект — это именно объект. У которого есть набор свойств и методов:</p> <!> <p class="svelte-1on0sn0">То есть если мы хотим создать машину, есть два пути:</p> <!> <p class="svelte-1on0sn0">Аналогично с кошечкой, собачкой, другом из записной книжки...</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Объектно-ориентированное программирование (ООП) предлагает мыслить не набором переменных, а объектом. Хотя бы потому, что это логичнее. Переменных в коде будет много, как понять, какие из них взаимосвязаны?</p> <p class="svelte-1on0sn0">Вот если я создаю машину, сколько переменных мне надо заполнить? А если меняю данные? А если удаляю? Когда переменные разбросаны по коду, можно забыть про какую-то и получить ошибку в интерфейсе. А если у нас есть цельный объект, всегда можно посмотреть, какие у него есть свойства и методы.</p> <p class="svelte-1on0sn0">Например, создадим кошечку:</p> <!> <div style="text-align: center;  margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">В объекте cat есть:</p> <!> <p class="svelte-1on0sn0">По коду сразу видно, что у кошечки есть имя и возраст, она умеет спать. Если разработчик решит добавить новые свойства или методы, он дополнит этот объект, и снова всё в одном месте.</p> <p class="svelte-1on0sn0">Если потом нужно будет получить информацию по кошечке, разработчик сделает REST-метод getByID, searchKitty, или какой-то другой. А в нем будет возвращать свойства объекта.</p> <p class="svelte-1on0sn0">То есть метод вернет</p> <!> <p class="svelte-1on0sn0">И при использовании имени вполне уместно говорить «обратиться к свойству объекта». Это ведь объект (кошечка), и его свойства!</p> <h3>Объект</h3> <p class="svelte-1on0sn0">Второе определение объекта — неупорядоченное множество пар ключ:значение, заключенное в фигурные скобки &lbrace;&rbrace;.</p> <p class="svelte-1on0sn0">Оно применимо тогда, когда внутри фигурных скобок приходит не конкретный целостный объект, а просто набор полей. Они могут быть связаны между собой, а могут относится к совершенно разным объектам внутри кода:</p> <!> <p class="svelte-1on0sn0">В таком случае логично называть эти параметры именно ключами — мы хотим получить значение по ключу.</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Но в любом случае, и «ключ», и «свойство» будет правильно. Не пугайтесь, если в одной книге / статье / видео увидели одно, в другой другое... Это просто разные трактовки.</p> <h3>Итого</h3> <p class="svelte-1on0sn0">Json-объект — это неупорядоченное множество пар «ключ:значение», заключённое в фигурные скобки «&lbrace;  &rbrace;». Ключ описывается строкой, между ним и значением стоит символ «:». Пары ключ-значение отделяются друг от друга запятыми.</p> <p class="svelte-1on0sn0">Значения ключа могут быть любыми:</p> <!> <p class="svelte-1on0sn0">И только строку мы берем в кавычки!</p> <!> <p class="svelte-1on0sn0"><span class="bold svelte-1on0sn0">Как устроен</span></p> <p class="svelte-1on0sn0">Давайте снова начнем с примера. Это массив:</p> <!> <p class="svelte-1on0sn0">Массив заключен в квадратные скобки []</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Внутри квадратных скобок идет набор значений. Тут нет ключей, как в объекте, поэтому обращаться к массиву можно только по номеру элемента. И поэтому в случае массива менять местами данные внутри <u>нельзя</u>. Это упорядоченное множество значений.</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Значения разделены запятыми:</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0"><span class="bold svelte-1on0sn0">Значения внутри</span></p> <p class="svelte-1on0sn0">Внутри массива может быть все, что угодно:</p> <p class="svelte-1on0sn0"><span class="bold svelte-1on0sn0">Цифры</span></p> <!> <p class="svelte-1on0sn0"><span class="bold svelte-1on0sn0">Строки</span></p> <!> <p class="svelte-1on0sn0"><span class="bold svelte-1on0sn0">Смесь</span></p> <!> <p class="svelte-1on0sn0"><span class="bold svelte-1on0sn0">Объекты</span></p> <p class="svelte-1on0sn0">Да, а почему бы и нет:</p> <!> <p class="svelte-1on0sn0">Или даже что-то более сложное. Вот пример ответа подсказок из Дадаты:</p> <!> <p class="svelte-1on0sn0">Система возвращает массив подсказок. Сколько запросили в параметре count, столько и получили. Каждая подсказка — объект, внутри которого еще один объект. И это далеко не самая сложная структура! Уровней вложенности может быть сколько угодно — массив в массиве, который внутри объекта, который внутри массива, который внутри объекта...</p> <p class="svelte-1on0sn0">Ну и, конечно, можно и наоборот, передать массив в объекте. Вот пример запроса в подсказки:</p> <!> <h3>Итого</h3> <p class="svelte-1on0sn0">Массив — это просто набор значений, разделенных запятыми. Находится внутри квадратных скобок [].</p> <p class="svelte-1on0sn0">А вот внутри него может быть все, что угодно:</p> <!>',1);function zs(C,S){ls(S,!1);let L=hs(S,"rows",24,()=>[{id:1,name:"Тест",right:{test:123}}]);os(()=>is(L()),()=>{console.log("Rows:",L())}),ns(),_s();var E=Js(),A=e(b(E),2);Ae(A,{zebra:!0,headers:[{key:"name",value:"Name"},{key:"right",value:"Right"}],get rows(){return L()},$$slots:{"cell-right":(a,$)=>{const s=ps(()=>$.value);var p=us(),_=b(p);fs(_,()=>JSON.stringify(vs(s),null,2).replace(/\n/g,"<br>")),t(a,p)}}});var N=e(A,4);H(N,{id:"JSON",children:(a,$)=>{var s=gs();t(a,s)},$$slots:{default:!0}});var k=e(N,4);x(k,{style:"margin-left: 3.5em;",children:(a,$)=>{var s=ys(),p=b(s);u(p,{children:(n,h)=>{r();var c=l("JSON-объект");t(n,c)},$$slots:{default:!0}});var _=e(p,2);u(_,{children:(n,h)=>{r();var c=l("Массив");t(n,c)},$$slots:{default:!0}});var d=e(_,2);u(d,{children:(n,h)=>{r();var c=l("Число (целое или вещественное)");t(n,c)},$$slots:{default:!0}});var f=e(d,2);u(f,{children:(n,h)=>{r();var c=l("Литералы true (логическое значение «истина»), false (логическое значение «ложь») и null");t(n,c)},$$slots:{default:!0}});var o=e(f,2);u(o,{children:(n,h)=>{r();var c=l("Строка");t(n,c)},$$slots:{default:!0}}),t(a,s)},$$slots:{default:!0}});var P=e(k,4),m=i(P),J=i(m);g(J,{src:"https://images-cdn.9gag.com/photo/aGdOG6w_700b.jpg",style:"width: 100%;"}),v(m),v(P);var M=e(P,2);H(M,{id:"JSON-object",children:(a,$)=>{var s=ms();t(a,s)},$$slots:{default:!0}});var O=e(M,4),Be=e(i(O));$s(Be,{visited:!0,href:"https://confluence.hflabs.ru/pages/viewpage.action?pageId=204669115",children:(a,$)=>{r();var s=l("документации подсказок Дадаты по ФИО:");t(a,s)},$$slots:{default:!0}}),r(),v(O);var Q=e(O,2);w(Q,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(a,$)=>{r();var s=l();s.nodeValue=`{
  "query": "Виктор Иван",
  "count": 7
}`,t(a,s)},$$slots:{default:!0}});var B=e(Q,6),W=i(B),Re=i(W);g(Re,{src:"https://habrastorage.org/getpro/habr/upload_files/acd/1a0/b3e/acd1a0b3e42086178942fcc0c0fd8d1b.png",style:"width: 100%;"}),v(W),v(B);var R=e(B,8),X=i(R),qe=i(X);g(qe,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/876/d5f/5df/876d5f5df458e26a565517291b9c08f5.png",style:"width: 100%;"}),v(X),v(R);var q=e(R,4),Z=i(q),Ie=i(Z);g(Ie,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/bfe/c50/765/bfec507654e0e328a5260abae1a63928.png",style:"width: 100%;"}),v(Z),v(q);var I=e(q,6),ee=i(I),Ve=i(ee);g(Ve,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/2db/ef1/434/2dbef14341056172d3815e69b7f0772b.png",style:"width: 100%;"}),v(ee),v(I);var se=e(I,4);x(se,{style:"margin-left: 3.5em;",children:(a,$)=>{var s=bs(),p=b(s);u(p,{children:(d,f)=>{r();var o=l("query — строка, по которой ищем (то, что пользователь вбил в GUI);");t(d,o)},$$slots:{default:!0}});var _=e(p,2);u(_,{children:(d,f)=>{r();var o=l("count — количество подсказок в ответе (в Дадате этот параметр зашит в форму, всегда возвращается 7 подсказок. Но если дергать подсказки напрямую, значение можно менять!)");t(d,o)},$$slots:{default:!0}}),t(a,s)},$$slots:{default:!0}});var V=e(se,4),te=i(V),Te=i(te);g(Te,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/404/210/27a/40421027ad8962083a263742db86b2e2.png",style:"width: 100%;"}),v(te),v(V);var T=e(V,4),ae=i(T),je=i(ae);g(je,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/fe9/c45/523/fe9c45523dd56e5f240b7f1bdf267ecf.png",style:"width: 100%;"}),v(ae),v(T);var re=e(T,16);Ae(re,{zebra:!0,headers:[{key:"name",value:"Так правильно"},{key:"right",value:"Так тоже правильно"}],get rows(){return L()}});var le=e(re,8);w(le,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(a,$)=>{r();var s=l();s.nodeValue=`{
  "query": "Виктор Иван",
  "count": 7
}`,t(a,s)},$$slots:{default:!0}});var oe=e(le,4);x(oe,{style:"margin-left: 3.5em;",children:(a,$)=>{var s=ws(),p=b(s);u(p,{children:(d,f)=>{r();var o=l("Обратиться к свойству объекта;");t(d,o)},$$slots:{default:!0}});var _=e(p,2);u(_,{children:(d,f)=>{r();var o=l("Получить значение по ключу.");t(d,o)},$$slots:{default:!0}}),t(a,s)},$$slots:{default:!0}});var j=e(oe,2),ne=i(j),De=i(ne);g(De,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/571/394/c65/571394c65e5f9992310a329cad1df6c3.png",style:"width: 100%;"}),v(ne),v(j);var D=e(j,4),de=i(D),Ge=i(de);g(Ge,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a17/d1f/8d3/a17d1f8d358046158dc484d8490eb993.png",style:"width: 100%;"}),v(de),v(D);var ie=e(D,8);x(ie,{style:"margin-left: 3.5em;",children:(a,$)=>{var s=xs(),p=b(s);u(p,{children:(d,f)=>{r();var o=l("Свойства — описывают, ЧТО мы создаем.");t(d,o)},$$slots:{default:!0}});var _=e(p,2);u(_,{children:(d,f)=>{r();var o=l("Методы — что объект умеет ДЕЛАТЬ.");t(d,o)},$$slots:{default:!0}}),t(a,s)},$$slots:{default:!0}});var ve=e(ie,4);x(ve,{style:"margin-left: 3.5em;",children:(a,$)=>{var s=Ps(),p=b(s);u(p,{children:(d,f)=>{r();var o=l("Перечислить 10 разных переменных — модель, номер, цвет, пробег...");t(d,o)},$$slots:{default:!0}});var _=e(p,2);u(_,{children:(d,f)=>{r();var o=l("Создать один объект, где будут все эти свойства.");t(d,o)},$$slots:{default:!0}}),t(a,s)},$$slots:{default:!0}});var G=e(ve,4),pe=i(G),Ue=i(pe);g(Ue,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/74e/19e/aea/74e19eaea84e2ed0ca70a8dccd97c42b.png",style:"width: 100%;"}),v(pe),v(G);var ce=e(G,8);w(ce,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(a,$)=>{r();var s=l();s.nodeValue=`var cat = {
name: “Pussy”,
year: 1,
sleep: function() {
// sleeping code
}
}`,t(a,s)},$$slots:{default:!0}});var U=e(ce,2),ue=i(U),ze=i(ue);g(ze,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/e54/411/117/e54411117536be81e8adbdc73a022897.png",style:"width: 100%;"}),v(ue),v(U);var _e=e(U,4);x(_e,{style:"margin-left: 3.5em;",children:(a,$)=>{var s=ks(),p=b(s);u(p,{children:(d,f)=>{r();var o=l("Свойства — name, year (что это за кошечка)");t(d,o)},$$slots:{default:!0}});var _=e(p,2);u(_,{children:(d,f)=>{r();var o=l("Функции — sleep (что она умеет делать, описание поведения)");t(d,o)},$$slots:{default:!0}}),t(a,s)},$$slots:{default:!0}});var he=e(_e,8);w(he,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(a,$)=>{r();var s=l();s.nodeValue=`{
name: “Pussy”,
year: 1,
}
`,t(a,s)},$$slots:{default:!0}});var $e=e(he,10);x($e,{style:"margin-left: 3.5em;",children:(a,$)=>{var s=Os(),p=b(s);u(p,{children:(o,n)=>{r();var h=l("client_fio (в коде это свойство fio объекта client)");t(o,h)},$$slots:{default:!0}});var _=e(p,2);u(_,{children:(o,n)=>{r();var h=l("kitty_name (в коде это свойство name объекта cat)");t(o,h)},$$slots:{default:!0}});var d=e(_,2);u(d,{children:(o,n)=>{r();var h=l("car_model (в коде это свойство model объекта car)");t(o,h)},$$slots:{default:!0}});var f=e(d,2);u(f,{children:(o,n)=>{r();var h=l("…");t(o,h)},$$slots:{default:!0}}),t(a,s)},$$slots:{default:!0}});var z=e($e,4),fe=i(z),Fe=i(fe);g(Fe,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a27/55f/745/a2755f74538cb927c9117a876c44232d.png",style:"width: 100%;"}),v(fe),v(z);var ge=e(z,10);x(ge,{style:"margin-left: 3.5em;",children:(a,$)=>{var s=Ls(),p=b(s);u(p,{children:(n,h)=>{r();var c=l("Число");t(n,c)},$$slots:{default:!0}});var _=e(p,2);u(_,{children:(n,h)=>{r();var c=l("строка");t(n,c)},$$slots:{default:!0}});var d=e(_,2);u(d,{children:(n,h)=>{r();var c=l("массив");t(n,c)},$$slots:{default:!0}});var f=e(d,2);u(f,{children:(n,h)=>{r();var c=l("другой объект");t(n,c)},$$slots:{default:!0}});var o=e(f,2);u(o,{children:(n,h)=>{r();var c=l("…");t(n,c)},$$slots:{default:!0}}),t(a,s)},$$slots:{default:!0}});var ye=e(ge,4);H(ye,{id:"JSON-array",children:(a,$)=>{var s=Ns();t(a,s)},$$slots:{default:!0}});var me=e(ye,6);w(me,{code:'[ "MALE", "FEMALE" ]',hideCopyButton:!0,showMoreLess:!1});var F=e(me,4),be=i(F),Ke=i(be);g(Ke,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/5b1/c5f/800/5b1c5f800d9c612a1b27e87be3cc0297.png",style:"width: 100%;"}),v(be),v(F);var K=e(F,4),we=i(K),Ye=i(we);g(Ye,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/f7b/4b1/af8/f7b4b1af8f617aa9ca89fe15124863ed.png",style:"width: 100%;"}),v(we),v(K);var Y=e(K,4),xe=i(Y),He=i(xe);g(He,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/760/c8f/f7a/760c8ff7ab4e88155efae8faeb46b689.png",style:"width: 100%;"}),v(xe),v(Y);var Pe=e(Y,8);w(Pe,{code:"[ 1, 5, 10, 33 ]",hideCopyButton:!0,showMoreLess:!1});var ke=e(Pe,4);w(ke,{code:'[ "MALE", "FEMALE" ]',hideCopyButton:!0,showMoreLess:!1});var Oe=e(ke,4);w(Oe,{code:'[ 1, "Андрюшка",  10, 33 ]',hideCopyButton:!0,showMoreLess:!1});var Le=e(Oe,6);w(Le,{code:'[1, {a:1, b:2}, "такой вот массивчик"]',hideCopyButton:!0,showMoreLess:!1});var Ne=e(Le,4);w(Ne,{type:"multi",hideCopyButton:!0,children:(a,$)=>{r();var s=l();s.nodeValue=`[
        {
            "value": "Иванов Виктор",
            "unrestricted_value": "Иванов Виктор",
            "data": {
                "surname": "Иванов",
                "name": "Виктор",
                "patronymic": null,
                "gender": "MALE"
            }
        },
        {
            "value": "Иванченко Виктор",
            "unrestricted_value": "Иванченко Виктор",
            "data": {
                "surname": "Иванченко",
                "name": "Виктор",
                "patronymic": null,
                "gender": "MALE"
            }
        },
        {
            "value": "Виктор Иванович",
            "unrestricted_value": "Виктор Иванович",
            "data": {
                "surname": null,
                "name": "Виктор",
                "patronymic": "Иванович",
                "gender": "MALE"
            }
        }
]`,t(a,s)},$$slots:{default:!0}});var Se=e(Ne,6);w(Se,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(a,$)=>{r();var s=l();s.nodeValue=`{
"query": "Виктор Иван",
"count": 7,
"parts": ["NAME", "SURNAME"]
}`,t(a,s)},$$slots:{default:!0}});var Qe=e(Se,8);x(Qe,{style:"margin-left: 3.5em;",children:(a,$)=>{var s=Ss(),p=b(s);u(p,{children:(n,h)=>{r();var c=l("числа");t(n,c)},$$slots:{default:!0}});var _=e(p,2);u(_,{children:(n,h)=>{r();var c=l("строки");t(n,c)},$$slots:{default:!0}});var d=e(_,2);u(d,{children:(n,h)=>{r();var c=l("другие массивы");t(n,c)},$$slots:{default:!0}});var f=e(d,2);u(f,{children:(n,h)=>{r();var c=l("объекты");t(n,c)},$$slots:{default:!0}});var o=e(f,2);u(o,{children:(n,h)=>{r();var c=l("смесь из всего вышеназванного");t(n,c)},$$slots:{default:!0}}),t(a,s)},$$slots:{default:!0}}),t(C,E),ds()}export{zs as component};
