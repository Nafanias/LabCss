import{t as f,a as t,s as P,c as Me,b as o}from"../chunks/qGGmyE-U.js";import"../chunks/9Ud8F66T.js";import{L as s,M as y,J as i,K as n,G as k,g as x,d as O,N as d}from"../chunks/TTrIPi8I.js";import{i as Ce}from"../chunks/F-Xwb0I_.js";import"../chunks/48hupNV0.js";import{A as z}from"../chunks/5ZNi9sMP.js";import{D as qe}from"../chunks/D1iOQp2k.js";import{O as w}from"../chunks/Btiysd1D.js";import{I as g}from"../chunks/bTJzNCin.js";import{O as ts}from"../chunks/-XsP_0nH.js";import{C as m}from"../chunks/DTaq0LnW.js";import{L as _}from"../chunks/DF7_RIey.js";var rs=f('<pre class="json-block svelte-1vbvr3s"> </pre>'),as=f('<span class="header-text svelte-1vbvr3s"> </span>'),ls=f('<h2 class="svelte-1vbvr3s">Как устроен JSON</h2>'),vs=f("<!> <!> <!> <!> <!>",1),os=f('<h2 class="svelte-1vbvr3s">JSON-объект</h2>'),ds=f("<!> <!>",1),ps=f('<pre class="json-block svelte-1vbvr3s"> </pre>'),is=f('<span class="header-text svelte-1vbvr3s"> </span>'),ns=f("<!> <!>",1),cs=f("<!> <!>",1),us=f("<!> <!>",1),_s=f("<!> <!>",1),$s=f("<!> <!> <!> <!>",1),hs=f("<!> <!> <!> <!> <!>",1),bs=f('<h2 class="svelte-1vbvr3s">JSON-массив</h2>'),fs=f("<!> <!> <!> <!> <!>",1),gs=f('<h1 class="svelte-1vbvr3s">Что такое JSON</h1> <!> <p class="svelte-1vbvr3s">JSON (англ. JavaScript Object Notation) — это формат данных, который в основном используется для хранения и передачи данных, в частности между сервером и веб-приложением. Он широко применяется для представления структурированных данных.</p> <!> <p class="svelte-1vbvr3s">В качестве значений в JSON могут быть использованы:</p> <!> <p class="svelte-1vbvr3s">Я думаю, с простыми значениями вопросов не возникнет, поэтому разберем массивы и объекты.</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <!> <h3>Как устроен</h3> <p class="svelte-1vbvr3s">Возьмем пример из <!>.</p> <!> <p class="svelte-1vbvr3s">И разберемся, что означает эта запись.</p> <p class="svelte-1vbvr3s">Объект заключен в фигурные скобки &lbrace;&rbrace;</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1vbvr3s">JSON-объект — это неупорядоченное множество пар «ключ:значение».</p> <p class="svelte-1vbvr3s">Ключ — это название параметра, который мы передаем серверу. Он служит маркером для принимающей запрос системы: «смотри, здесь у меня значение такого-то параметра!». А иначе как система поймет, где что? Ей нужна подсказка!</p> <p class="svelte-1vbvr3s">Вот, например, «Виктор Иван» — это что? Ищем описание параметра «query» в документации — ага, да это же запрос для подсказок!</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1vbvr3s">Это как если бы мы вбили строку «Виктор Иван» в GUI (графическом интерфейсе пользователя):</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1vbvr3s">Когда пользователь начинает вводить данные в формочку, то сразу видит результат — появляется список подсказок. Это значит, что разработчик прописал в коде условие — делать некое действие на каждый ввод символа в это поле. Какое действие? Можно увидеть через f12.</p> <p class="svelte-1vbvr3s">Открываем вкладку Network, вбиваем «Виктор Иван» и находим запрос, который при этом уходит на сервер. Ого, да это тот самый пример, что мы разбираем!</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1vbvr3s">Клиент передает серверу запрос в JSON-формате. Внутри два параметра, две пары «ключ-значение»:</p> <!> <p class="svelte-1vbvr3s">Пары «ключ-значение» разделены запятыми:</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1vbvr3s">Строки берем в кавычки, числа нет:</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1vbvr3s">Конечно, внутри может быть не только строка или число. Это может быть и другой объект! Или массив... Или объект в массиве, массив в объекте... Любое количество уровней вложенности =))</p> <p class="svelte-1vbvr3s">Объект, массив, число, булево значение (true / false) — если у нас НЕ строка, кавычки не нужны. Но в любом случае это будет значение какого-то ключа:</p> ТАБЛИЦА <p class="svelte-1vbvr3s">Переносы строк делать необязательно. Вообще пробелы и переносы строк нужны только человеку для читабельности, система поймет и без них:</p> ТАБЛИЦА <p class="svelte-1vbvr3s">Ключ — ВСЕГДА строка, но мы все равно берем его в кавычки. В JavaScript этого можно не делать, в JSON нельзя.</p> <p class="svelte-1vbvr3s">По крайней мере, если вы работаете с простыми значениями ключей, а несколько слов записываете в верблюжьемРегистре или в змеином_регистре. Если вы хотите написать в ключе несколько слов через пробел, ключ нужно взять в кавычки.</p> ТАБЛИЦА <p class="svelte-1vbvr3s">И все же я рекомендую использовать простые названия ключей, или использовать snake_case.</p> <p class="svelte-1vbvr3s">Писать ключи можно в любом порядке. Ведь JSON-объект — это <u>неупорядоченное</u> множество пар «ключ:значение».</p> <!> <p class="svelte-1vbvr3s">Очень важно это понимать, и тестировать! Принимающая запрос система должна ориентировать на название ключей в запросе, а не на порядок их следования. Ключевое слово «должна» )) Хотя знаю примеры, когда от перестановки ключей местами всё ломалось, ведь «первым должен идти запрос, а не count!».</p> <h3>Ключ или свойство?</h3> <p class="svelte-1vbvr3s">Вот у нас есть JSON-объект:</p> <!> <p class="svelte-1vbvr3s">Что такое «query»? Если я хочу к нему обратиться, как мне это сказать? Есть 2 варианта, и оба правильные:</p> <!> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1vbvr3s">То есть «query» можно назвать как ключом, так и свойством. А как правильно то?</p> <div style="text-align: center;  margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1vbvr3s">Правильно и так, и так! Просто есть разные определения объекта:</p> <h3>Объект</h3> <p class="svelte-1vbvr3s">В JS объект — это именно объект. У которого есть набор свойств и методов:</p> <!> <p class="svelte-1vbvr3s">То есть если мы хотим создать машину, есть два пути:</p> <!> <p class="svelte-1vbvr3s">Аналогично с кошечкой, собачкой, другом из записной книжки...</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1vbvr3s">Объектно-ориентированное программирование (ООП) предлагает мыслить не набором переменных, а объектом. Хотя бы потому, что это логичнее. Переменных в коде будет много, как понять, какие из них взаимосвязаны?</p> <p class="svelte-1vbvr3s">Вот если я создаю машину, сколько переменных мне надо заполнить? А если меняю данные? А если удаляю? Когда переменные разбросаны по коду, можно забыть про какую-то и получить ошибку в интерфейсе. А если у нас есть цельный объект, всегда можно посмотреть, какие у него есть свойства и методы.</p> <p class="svelte-1vbvr3s">Например, создадим кошечку:</p> <!> <div style="text-align: center;  margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1vbvr3s">В объекте cat есть:</p> <!> <p class="svelte-1vbvr3s">По коду сразу видно, что у кошечки есть имя и возраст, она умеет спать. Если разработчик решит добавить новые свойства или методы, он дополнит этот объект, и снова всё в одном месте.</p> <p class="svelte-1vbvr3s">Если потом нужно будет получить информацию по кошечке, разработчик сделает REST-метод getByID, searchKitty, или какой-то другой. А в нем будет возвращать свойства объекта.</p> <p class="svelte-1vbvr3s">То есть метод вернет</p> <!> <p class="svelte-1vbvr3s">И при использовании имени вполне уместно говорить «обратиться к свойству объекта». Это ведь объект (кошечка), и его свойства!</p> <h3>Объект</h3> <p class="svelte-1vbvr3s">Второе определение объекта — неупорядоченное множество пар ключ:значение, заключенное в фигурные скобки &lbrace;&rbrace;.</p> <p class="svelte-1vbvr3s">Оно применимо тогда, когда внутри фигурных скобок приходит не конкретный целостный объект, а просто набор полей. Они могут быть связаны между собой, а могут относится к совершенно разным объектам внутри кода:</p> <!> <p class="svelte-1vbvr3s">В таком случае логично называть эти параметры именно ключами — мы хотим получить значение по ключу.</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1vbvr3s">Но в любом случае, и «ключ», и «свойство» будет правильно. Не пугайтесь, если в одной книге / статье / видео увидели одно, в другой другое... Это просто разные трактовки.</p> <h3>Итого</h3> <p class="svelte-1vbvr3s">Json-объект — это неупорядоченное множество пар «ключ:значение», заключённое в фигурные скобки «&lbrace;  &rbrace;». Ключ описывается строкой, между ним и значением стоит символ «:». Пары ключ-значение отделяются друг от друга запятыми.</p> <p class="svelte-1vbvr3s">Значения ключа могут быть любыми:</p> <!> <p class="svelte-1vbvr3s">И только строку мы берем в кавычки!</p> <!> <p class="svelte-1vbvr3s"><span class="bold svelte-1vbvr3s">Как устроен</span></p> <p class="svelte-1vbvr3s">Давайте снова начнем с примера. Это массив:</p> <!> <p class="svelte-1vbvr3s">Массив заключен в квадратные скобки []</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1vbvr3s">Внутри квадратных скобок идет набор значений. Тут нет ключей, как в объекте, поэтому обращаться к массиву можно только по номеру элемента. И поэтому в случае массива менять местами данные внутри <u>нельзя</u>. Это упорядоченное множество значений.</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1vbvr3s">Значения разделены запятыми:</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1vbvr3s"><span class="bold svelte-1vbvr3s">Значения внутри</span></p> <p class="svelte-1vbvr3s">Внутри массива может быть все, что угодно:</p> <p class="svelte-1vbvr3s"><span class="bold svelte-1vbvr3s">Цифры</span></p> <!> <p class="svelte-1vbvr3s"><span class="bold svelte-1vbvr3s">Строки</span></p> <!> <p class="svelte-1vbvr3s"><span class="bold svelte-1vbvr3s">Смесь</span></p> <!> <p class="svelte-1vbvr3s"><span class="bold svelte-1vbvr3s">Объекты</span></p> <p class="svelte-1vbvr3s">Да, а почему бы и нет:</p> <!> <p class="svelte-1vbvr3s">Или даже что-то более сложное. Вот пример ответа подсказок из Дадаты:</p> <!> <p class="svelte-1vbvr3s">Система возвращает массив подсказок. Сколько запросили в параметре count, столько и получили. Каждая подсказка — объект, внутри которого еще один объект. И это далеко не самая сложная структура! Уровней вложенности может быть сколько угодно — массив в массиве, который внутри объекта, который внутри массива, который внутри объекта...</p> <p class="svelte-1vbvr3s">Ну и, конечно, можно и наоборот, передать массив в объекте. Вот пример запроса в подсказки:</p> <!> <h3>Итого</h3> <p class="svelte-1vbvr3s">Массив — это просто набор значений, разделенных запятыми. Находится внутри квадратных скобок [].</p> <p class="svelte-1vbvr3s">А вот внутри него может быть все, что угодно:</p> <!>',1);function Cs(Be){const Ee=[{key:"left",value:"Так правильно"},{key:"right",value:"Так тоже правильно"}],Ae=[{id:1,left:{query:"Виктор Иван",count:7},right:{count:7,query:"Виктор Иван"}}],je=[{key:"description",value:"Так правильно"},{key:"json",value:"Так неправильно в JSON"}],Ie=[{id:2,description:"Так правильно",json:{query:"Виктор Иван",count:7}},{id:3,description:"Так неправильно в JSON",json:{query:"Виктор Иван",count:7}}],F=r=>JSON.stringify(r,null,2);var K=gs(),R=s(y(K),2);qe(R,{headers2:je,rows2:Ie,zebra:!0,$$slots:{cell:(r,$)=>{const e=O(()=>$.cell);var v=Me(),u=y(v);{var p=a=>{var l=rs(),h=i(l);n(l),k(c=>P(h,`        ${c??""}
      `),[()=>F(x(e).value)],O),t(a,l)},b=a=>{var l=o();k(()=>P(l,x(e).value)),t(a,l)};Ce(u,a=>{x(e).key==="json"?a(p):a(b,!1)})}t(r,v)},"cell-header":(r,$)=>{const e=O(()=>$.header);var v=as(),u=i(v,!0);n(v),k(()=>P(u,x(e).value)),t(r,v)}}});var T=s(R,4);z(T,{id:"JSON",children:(r,$)=>{var e=ls();t(r,e)},$$slots:{default:!0}});var H=s(T,4);w(H,{style:"margin-left: 3.5em;",children:(r,$)=>{var e=vs(),v=y(e);_(v,{children:(l,h)=>{d();var c=o("JSON-объект");t(l,c)},$$slots:{default:!0}});var u=s(v,2);_(u,{children:(l,h)=>{d();var c=o("Массив");t(l,c)},$$slots:{default:!0}});var p=s(u,2);_(p,{children:(l,h)=>{d();var c=o("Число (целое или вещественное)");t(l,c)},$$slots:{default:!0}});var b=s(p,2);_(b,{children:(l,h)=>{d();var c=o("Литералы true (логическое значение «истина»), false (логическое значение «ложь») и null");t(l,c)},$$slots:{default:!0}});var a=s(b,2);_(a,{children:(l,h)=>{d();var c=o("Строка");t(l,c)},$$slots:{default:!0}}),t(r,e)},$$slots:{default:!0}});var S=s(H,4),Q=i(S),Ve=i(Q);g(Ve,{src:"https://images-cdn.9gag.com/photo/aGdOG6w_700b.jpg",style:"width: 100%;"}),n(Q),n(S);var W=s(S,2);z(W,{id:"JSON-object",children:(r,$)=>{var e=os();t(r,e)},$$slots:{default:!0}});var J=s(W,4),Ge=s(i(J));ts(Ge,{visited:!0,href:"https://confluence.hflabs.ru/pages/viewpage.action?pageId=204669115",children:(r,$)=>{d();var e=o("документации подсказок Дадаты по ФИО:");t(r,e)},$$slots:{default:!0}}),d(),n(J);var X=s(J,2);m(X,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(r,$)=>{d();var e=o();e.nodeValue=`{
  "query": "Виктор Иван",
  "count": 7
}`,t(r,e)},$$slots:{default:!0}});var N=s(X,6),Y=i(N),De=i(Y);g(De,{src:"https://habrastorage.org/getpro/habr/upload_files/acd/1a0/b3e/acd1a0b3e42086178942fcc0c0fd8d1b.png",style:"width: 100%;"}),n(Y),n(N);var L=s(N,8),Z=i(L),Ue=i(Z);g(Ue,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/876/d5f/5df/876d5f5df458e26a565517291b9c08f5.png",style:"width: 100%;"}),n(Z),n(L);var M=s(L,4),ee=i(M),ze=i(ee);g(ze,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/bfe/c50/765/bfec507654e0e328a5260abae1a63928.png",style:"width: 100%;"}),n(ee),n(M);var C=s(M,6),se=i(C),Fe=i(se);g(Fe,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/2db/ef1/434/2dbef14341056172d3815e69b7f0772b.png",style:"width: 100%;"}),n(se),n(C);var te=s(C,4);w(te,{style:"margin-left: 3.5em;",children:(r,$)=>{var e=ds(),v=y(e);_(v,{children:(p,b)=>{d();var a=o("query — строка, по которой ищем (то, что пользователь вбил в GUI);");t(p,a)},$$slots:{default:!0}});var u=s(v,2);_(u,{children:(p,b)=>{d();var a=o("count — количество подсказок в ответе (в Дадате этот параметр зашит в форму, всегда возвращается 7 подсказок. Но если дергать подсказки напрямую, значение можно менять!)");t(p,a)},$$slots:{default:!0}}),t(r,e)},$$slots:{default:!0}});var q=s(te,4),re=i(q),Ke=i(re);g(Ke,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/404/210/27a/40421027ad8962083a263742db86b2e2.png",style:"width: 100%;"}),n(re),n(q);var B=s(q,4),ae=i(B),Re=i(ae);g(Re,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/fe9/c45/523/fe9c45523dd56e5f240b7f1bdf267ecf.png",style:"width: 100%;"}),n(ae),n(B);var le=s(B,16);qe(le,{headers:Ee,rows:Ae,zebra:!0,$$slots:{cell:(r,$)=>{const e=O(()=>$.cell);var v=Me(),u=y(v);{var p=a=>{var l=ps(),h=i(l);n(l),k(c=>P(h,`        ${c??""}
      `),[()=>F(x(e).value)],O),t(a,l)},b=a=>{var l=o();k(()=>P(l,x(e).value)),t(a,l)};Ce(u,a=>{x(e).key==="left"||x(e).key==="right"?a(p):a(b,!1)})}t(r,v)},"cell-header":(r,$)=>{const e=O(()=>$.header);var v=is(),u=i(v,!0);n(v),k(()=>P(u,x(e).value)),t(r,v)}}});var ve=s(le,8);m(ve,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(r,$)=>{d();var e=o();e.nodeValue=`{
  "query": "Виктор Иван",
  "count": 7
}`,t(r,e)},$$slots:{default:!0}});var oe=s(ve,4);w(oe,{style:"margin-left: 3.5em;",children:(r,$)=>{var e=ns(),v=y(e);_(v,{children:(p,b)=>{d();var a=o("Обратиться к свойству объекта;");t(p,a)},$$slots:{default:!0}});var u=s(v,2);_(u,{children:(p,b)=>{d();var a=o("Получить значение по ключу.");t(p,a)},$$slots:{default:!0}}),t(r,e)},$$slots:{default:!0}});var E=s(oe,2),de=i(E),Te=i(de);g(Te,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/571/394/c65/571394c65e5f9992310a329cad1df6c3.png",style:"width: 100%;"}),n(de),n(E);var A=s(E,4),pe=i(A),He=i(pe);g(He,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a17/d1f/8d3/a17d1f8d358046158dc484d8490eb993.png",style:"width: 100%;"}),n(pe),n(A);var ie=s(A,8);w(ie,{style:"margin-left: 3.5em;",children:(r,$)=>{var e=cs(),v=y(e);_(v,{children:(p,b)=>{d();var a=o("Свойства — описывают, ЧТО мы создаем.");t(p,a)},$$slots:{default:!0}});var u=s(v,2);_(u,{children:(p,b)=>{d();var a=o("Методы — что объект умеет ДЕЛАТЬ.");t(p,a)},$$slots:{default:!0}}),t(r,e)},$$slots:{default:!0}});var ne=s(ie,4);w(ne,{style:"margin-left: 3.5em;",children:(r,$)=>{var e=us(),v=y(e);_(v,{children:(p,b)=>{d();var a=o("Перечислить 10 разных переменных — модель, номер, цвет, пробег...");t(p,a)},$$slots:{default:!0}});var u=s(v,2);_(u,{children:(p,b)=>{d();var a=o("Создать один объект, где будут все эти свойства.");t(p,a)},$$slots:{default:!0}}),t(r,e)},$$slots:{default:!0}});var j=s(ne,4),ce=i(j),Qe=i(ce);g(Qe,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/74e/19e/aea/74e19eaea84e2ed0ca70a8dccd97c42b.png",style:"width: 100%;"}),n(ce),n(j);var ue=s(j,8);m(ue,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(r,$)=>{d();var e=o();e.nodeValue=`var cat = {
name: “Pussy”,
year: 1,
sleep: function() {
// sleeping code
}
}`,t(r,e)},$$slots:{default:!0}});var I=s(ue,2),_e=i(I),We=i(_e);g(We,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/e54/411/117/e54411117536be81e8adbdc73a022897.png",style:"width: 100%;"}),n(_e),n(I);var $e=s(I,4);w($e,{style:"margin-left: 3.5em;",children:(r,$)=>{var e=_s(),v=y(e);_(v,{children:(p,b)=>{d();var a=o("Свойства — name, year (что это за кошечка)");t(p,a)},$$slots:{default:!0}});var u=s(v,2);_(u,{children:(p,b)=>{d();var a=o("Функции — sleep (что она умеет делать, описание поведения)");t(p,a)},$$slots:{default:!0}}),t(r,e)},$$slots:{default:!0}});var he=s($e,8);m(he,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(r,$)=>{d();var e=o();e.nodeValue=`{
name: “Pussy”,
year: 1,
}
`,t(r,e)},$$slots:{default:!0}});var be=s(he,10);w(be,{style:"margin-left: 3.5em;",children:(r,$)=>{var e=$s(),v=y(e);_(v,{children:(a,l)=>{d();var h=o("client_fio (в коде это свойство fio объекта client)");t(a,h)},$$slots:{default:!0}});var u=s(v,2);_(u,{children:(a,l)=>{d();var h=o("kitty_name (в коде это свойство name объекта cat)");t(a,h)},$$slots:{default:!0}});var p=s(u,2);_(p,{children:(a,l)=>{d();var h=o("car_model (в коде это свойство model объекта car)");t(a,h)},$$slots:{default:!0}});var b=s(p,2);_(b,{children:(a,l)=>{d();var h=o("…");t(a,h)},$$slots:{default:!0}}),t(r,e)},$$slots:{default:!0}});var V=s(be,4),fe=i(V),Xe=i(fe);g(Xe,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a27/55f/745/a2755f74538cb927c9117a876c44232d.png",style:"width: 100%;"}),n(fe),n(V);var ge=s(V,10);w(ge,{style:"margin-left: 3.5em;",children:(r,$)=>{var e=hs(),v=y(e);_(v,{children:(l,h)=>{d();var c=o("Число");t(l,c)},$$slots:{default:!0}});var u=s(v,2);_(u,{children:(l,h)=>{d();var c=o("строка");t(l,c)},$$slots:{default:!0}});var p=s(u,2);_(p,{children:(l,h)=>{d();var c=o("массив");t(l,c)},$$slots:{default:!0}});var b=s(p,2);_(b,{children:(l,h)=>{d();var c=o("другой объект");t(l,c)},$$slots:{default:!0}});var a=s(b,2);_(a,{children:(l,h)=>{d();var c=o("…");t(l,c)},$$slots:{default:!0}}),t(r,e)},$$slots:{default:!0}});var ye=s(ge,4);z(ye,{id:"JSON-array",children:(r,$)=>{var e=bs();t(r,e)},$$slots:{default:!0}});var me=s(ye,6);m(me,{code:'[ "MALE", "FEMALE" ]',hideCopyButton:!0,showMoreLess:!1});var G=s(me,4),xe=i(G),Ye=i(xe);g(Ye,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/5b1/c5f/800/5b1c5f800d9c612a1b27e87be3cc0297.png",style:"width: 100%;"}),n(xe),n(G);var D=s(G,4),we=i(D),Ze=i(we);g(Ze,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/f7b/4b1/af8/f7b4b1af8f617aa9ca89fe15124863ed.png",style:"width: 100%;"}),n(we),n(D);var U=s(D,4),Pe=i(U),es=i(Pe);g(es,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/760/c8f/f7a/760c8ff7ab4e88155efae8faeb46b689.png",style:"width: 100%;"}),n(Pe),n(U);var ke=s(U,8);m(ke,{code:"[ 1, 5, 10, 33 ]",hideCopyButton:!0,showMoreLess:!1});var Oe=s(ke,4);m(Oe,{code:'[ "MALE", "FEMALE" ]',hideCopyButton:!0,showMoreLess:!1});var Se=s(Oe,4);m(Se,{code:'[ 1, "Андрюшка",  10, 33 ]',hideCopyButton:!0,showMoreLess:!1});var Je=s(Se,6);m(Je,{code:'[1, {a:1, b:2}, "такой вот массивчик"]',hideCopyButton:!0,showMoreLess:!1});var Ne=s(Je,4);m(Ne,{type:"multi",hideCopyButton:!0,children:(r,$)=>{d();var e=o();e.nodeValue=`
[
	{
		"value": "Иванов Виктор",
		"unrestricted_value": "Иванов Виктор",
		"data": {
			"surname": "Иванов",
			"name": "Виктор",
			"patronymic": null,
			"gender": "MALE"
			}
	},
	{
		"value": "Иванченко Виктор",
		"unrestricted_value": "Иванченко Виктор",
		"data": {
			"surname": "Иванченко",
			"name": "Виктор",
			"patronymic": null,
			"gender": "MALE"
		}
	},
	{
		"value": "Виктор Иванович",
		"unrestricted_value": "Виктор Иванович",
		"data": {
			"surname": null,
			"name": "Виктор",
			"patronymic": "Иванович",
			"gender": "MALE"
		}
	}
]`,t(r,e)},$$slots:{default:!0}});var Le=s(Ne,6);m(Le,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(r,$)=>{d();var e=o();e.nodeValue=`
{
	"query": "Виктор Иван",
	"count": 7,
	"parts": ["NAME", "SURNAME"]
}`,t(r,e)},$$slots:{default:!0}});var ss=s(Le,8);w(ss,{style:"margin-left: 3.5em;",children:(r,$)=>{var e=fs(),v=y(e);_(v,{children:(l,h)=>{d();var c=o("числа");t(l,c)},$$slots:{default:!0}});var u=s(v,2);_(u,{children:(l,h)=>{d();var c=o("строки");t(l,c)},$$slots:{default:!0}});var p=s(u,2);_(p,{children:(l,h)=>{d();var c=o("другие массивы");t(l,c)},$$slots:{default:!0}});var b=s(p,2);_(b,{children:(l,h)=>{d();var c=o("объекты");t(l,c)},$$slots:{default:!0}});var a=s(b,2);_(a,{children:(l,h)=>{d();var c=o("смесь из всего вышеназванного");t(l,c)},$$slots:{default:!0}}),t(r,e)},$$slots:{default:!0}}),t(Be,K)}export{Cs as component};
