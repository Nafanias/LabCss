import"../chunks/Bg9kRutz.js";import"../chunks/69_IOA4Y.js";import{T as t,U as k,J as p,K as i,G as w,g as x,d as P,V as d}from"../chunks/DwB3qp1y.js";import{t as f,a as s,s as O,c as Ze,b as v}from"../chunks/DhYkO-ht.js";import{i as et}from"../chunks/DzUmUmhz.js";import"../chunks/Cukbttz_.js";import{A as D}from"../chunks/C8x85miN.js";import{D as T}from"../chunks/BD47vfnQ.js";import{O as m}from"../chunks/DkdKJtbA.js";import{I as y}from"../chunks/DnjDcRZx.js";import{O as tt}from"../chunks/DKnAL-hi.js";import{C as b}from"../chunks/CGardy9S.js";import{L as g}from"../chunks/DF4CoHH5.js";var st=f('<pre class="json-block svelte-171gk20"> </pre>'),at=f('<span class="header-text"> </span>'),rt=f('<pre class="json-block svelte-171gk20"> </pre>'),lt=f('<pre class="json-block svelte-171gk20"> </pre>'),ot=f('<h2 class="svelte-171gk20">Как устроен JSON</h2>'),dt=f("<!> <!> <!> <!> <!>",1),vt=f('<h2 class="svelte-171gk20">JSON-объект</h2>'),pt=f("<!> <!>",1),it=f("<!> <!>",1),nt=f("<!> <!>",1),ct=f("<!> <!>",1),ut=f("<!> <!>",1),gt=f("<!> <!> <!> <!>",1),_t=f("<!> <!> <!> <!> <!>",1),$t=f('<h2 class="svelte-171gk20">JSON-массив</h2>'),ht=f("<!> <!> <!> <!> <!>",1),ft=f('<h1 class="svelte-171gk20">Что такое JSON</h1> <!> <p class="svelte-171gk20">df</p> <!> <p class="svelte-171gk20">JSON (англ. JavaScript Object Notation) — это формат данных, который в основном используется для хранения и передачи данных, в частности между сервером и веб-приложением. Он широко применяется для представления структурированных данных.</p> <!> <p class="svelte-171gk20">В качестве значений в JSON могут быть использованы:</p> <!> <p class="svelte-171gk20">Я думаю, с простыми значениями вопросов не возникнет, поэтому разберем массивы и объекты.</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <!> <h3>Как устроен</h3> <p class="svelte-171gk20">Возьмем пример из <!>.</p> <!> <p class="svelte-171gk20">И разберемся, что означает эта запись.</p> <p class="svelte-171gk20">Объект заключен в фигурные скобки &lbrace;&rbrace;</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-171gk20">JSON-объект — это неупорядоченное множество пар «ключ:значение».</p> <p class="svelte-171gk20">Ключ — это название параметра, который мы передаем серверу. Он служит маркером для принимающей запрос системы: «смотри, здесь у меня значение такого-то параметра!». А иначе как система поймет, где что? Ей нужна подсказка!</p> <p class="svelte-171gk20">Вот, например, «Виктор Иван» — это что? Ищем описание параметра «query» в документации — ага, да это же запрос для подсказок!</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-171gk20">Это как если бы мы вбили строку «Виктор Иван» в GUI (графическом интерфейсе пользователя):</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-171gk20">Когда пользователь начинает вводить данные в формочку, то сразу видит результат — появляется список подсказок. Это значит, что разработчик прописал в коде условие — делать некое действие на каждый ввод символа в это поле. Какое действие? Можно увидеть через f12.</p> <p class="svelte-171gk20">Открываем вкладку Network, вбиваем «Виктор Иван» и находим запрос, который при этом уходит на сервер. Ого, да это тот самый пример, что мы разбираем!</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-171gk20">Клиент передает серверу запрос в JSON-формате. Внутри два параметра, две пары «ключ-значение»:</p> <!> <p class="svelte-171gk20">Пары «ключ-значение» разделены запятыми:</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-171gk20">Строки берем в кавычки, числа нет:</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-171gk20">Конечно, внутри может быть не только строка или число. Это может быть и другой объект! Или массив... Или объект в массиве, массив в объекте... Любое количество уровней вложенности =))</p> <p class="svelte-171gk20">Объект, массив, число, булево значение (true / false) — если у нас НЕ строка, кавычки не нужны. Но в любом случае это будет значение какого-то ключа:</p> ТАБЛИЦА <p class="svelte-171gk20">Переносы строк делать необязательно. Вообще пробелы и переносы строк нужны только человеку для читабельности, система поймет и без них:</p> ТАБЛИЦА <p class="svelte-171gk20">Ключ — ВСЕГДА строка, но мы все равно берем его в кавычки. В JavaScript этого можно не делать, в JSON нельзя.</p> ТАБЛИЦА <p class="svelte-171gk20">По крайней мере, если вы работаете с простыми значениями ключей, а несколько слов записываете в верблюжьемРегистре или в змеином_регистре. Если вы хотите написать в ключе несколько слов через пробел, ключ нужно взять в кавычки.</p> ТАБЛИЦА <p class="svelte-171gk20">И все же я рекомендую использовать простые названия ключей, или использовать snake_case.</p> <p class="svelte-171gk20">Писать ключи можно в любом порядке. Ведь JSON-объект — это <u>неупорядоченное</u> множество пар «ключ:значение».</p> <!> <p class="svelte-171gk20">Очень важно это понимать, и тестировать! Принимающая запрос система должна ориентировать на название ключей в запросе, а не на порядок их следования. Ключевое слово «должна» )) Хотя знаю примеры, когда от перестановки ключей местами всё ломалось, ведь «первым должен идти запрос, а не count!».</p> <h3>Ключ или свойство?</h3> <p class="svelte-171gk20">Вот у нас есть JSON-объект:</p> <!> <p class="svelte-171gk20">Что такое «query»? Если я хочу к нему обратиться, как мне это сказать? Есть 2 варианта, и оба правильные:</p> <!> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-171gk20">То есть «query» можно назвать как ключом, так и свойством. А как правильно то?</p> <div style="text-align: center;  margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-171gk20">Правильно и так, и так! Просто есть разные определения объекта:</p> <h3>Объект</h3> <p class="svelte-171gk20">В JS объект — это именно объект. У которого есть набор свойств и методов:</p> <!> <p class="svelte-171gk20">То есть если мы хотим создать машину, есть два пути:</p> <!> <p class="svelte-171gk20">Аналогично с кошечкой, собачкой, другом из записной книжки...</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-171gk20">Объектно-ориентированное программирование (ООП) предлагает мыслить не набором переменных, а объектом. Хотя бы потому, что это логичнее. Переменных в коде будет много, как понять, какие из них взаимосвязаны?</p> <p class="svelte-171gk20">Вот если я создаю машину, сколько переменных мне надо заполнить? А если меняю данные? А если удаляю? Когда переменные разбросаны по коду, можно забыть про какую-то и получить ошибку в интерфейсе. А если у нас есть цельный объект, всегда можно посмотреть, какие у него есть свойства и методы.</p> <p class="svelte-171gk20">Например, создадим кошечку:</p> <!> <div style="text-align: center;  margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-171gk20">В объекте cat есть:</p> <!> <p class="svelte-171gk20">По коду сразу видно, что у кошечки есть имя и возраст, она умеет спать. Если разработчик решит добавить новые свойства или методы, он дополнит этот объект, и снова всё в одном месте.</p> <p class="svelte-171gk20">Если потом нужно будет получить информацию по кошечке, разработчик сделает REST-метод getByID, searchKitty, или какой-то другой. А в нем будет возвращать свойства объекта.</p> <p class="svelte-171gk20">То есть метод вернет</p> <!> <p class="svelte-171gk20">И при использовании имени вполне уместно говорить «обратиться к свойству объекта». Это ведь объект (кошечка), и его свойства!</p> <h3>Объект</h3> <p class="svelte-171gk20">Второе определение объекта — неупорядоченное множество пар ключ:значение, заключенное в фигурные скобки &lbrace;&rbrace;.</p> <p class="svelte-171gk20">Оно применимо тогда, когда внутри фигурных скобок приходит не конкретный целостный объект, а просто набор полей. Они могут быть связаны между собой, а могут относится к совершенно разным объектам внутри кода:</p> <!> <p class="svelte-171gk20">В таком случае логично называть эти параметры именно ключами — мы хотим получить значение по ключу.</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-171gk20">Но в любом случае, и «ключ», и «свойство» будет правильно. Не пугайтесь, если в одной книге / статье / видео увидели одно, в другой другое... Это просто разные трактовки.</p> <h3>Итого</h3> <p class="svelte-171gk20">Json-объект — это неупорядоченное множество пар «ключ:значение», заключённое в фигурные скобки «&lbrace;  &rbrace;». Ключ описывается строкой, между ним и значением стоит символ «:». Пары ключ-значение отделяются друг от друга запятыми.</p> <p class="svelte-171gk20">Значения ключа могут быть любыми:</p> <!> <p class="svelte-171gk20">И только строку мы берем в кавычки!</p> <!> <p class="svelte-171gk20"><span class="bold svelte-171gk20">Как устроен</span></p> <p class="svelte-171gk20">Давайте снова начнем с примера. Это массив:</p> <!> <p class="svelte-171gk20">Массив заключен в квадратные скобки []</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-171gk20">Внутри квадратных скобок идет набор значений. Тут нет ключей, как в объекте, поэтому обращаться к массиву можно только по номеру элемента. И поэтому в случае массива менять местами данные внутри <u>нельзя</u>. Это упорядоченное множество значений.</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-171gk20">Значения разделены запятыми:</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-171gk20"><span class="bold svelte-171gk20">Значения внутри</span></p> <p class="svelte-171gk20">Внутри массива может быть все, что угодно:</p> <p class="svelte-171gk20"><span class="bold svelte-171gk20">Цифры</span></p> <!> <p class="svelte-171gk20"><span class="bold svelte-171gk20">Строки</span></p> <!> <p class="svelte-171gk20"><span class="bold svelte-171gk20">Смесь</span></p> <!> <p class="svelte-171gk20"><span class="bold svelte-171gk20">Объекты</span></p> <p class="svelte-171gk20">Да, а почему бы и нет:</p> <!> <p class="svelte-171gk20">Или даже что-то более сложное. Вот пример ответа подсказок из Дадаты:</p> <!> <p class="svelte-171gk20">Система возвращает массив подсказок. Сколько запросили в параметре count, столько и получили. Каждая подсказка — объект, внутри которого еще один объект. И это далеко не самая сложная структура! Уровней вложенности может быть сколько угодно — массив в массиве, который внутри объекта, который внутри массива, который внутри объекта...</p> <p class="svelte-171gk20">Ну и, конечно, можно и наоборот, передать массив в объекте. Вот пример запроса в подсказки:</p> <!> <h3>Итого</h3> <p class="svelte-171gk20">Массив — это просто набор значений, разделенных запятыми. Находится внутри квадратных скобок [].</p> <p class="svelte-171gk20">А вот внутри него может быть все, что угодно:</p> <!>',1);function Ct(qe){const Be=[{key:"left",value:"Так правильно"},{key:"right",value:"Так тоже правильно"}],F=[{id:1,left:{query:"Виктор Иван",count:7},right:{count:7,query:"Виктор Иван"}}],Ee=a=>JSON.stringify(a,null,2);var K=ft(),R=t(k(K),2);T(R,{headers:Be,rows:F,zebra:!0,$$slots:{cell:(a,_)=>{const e=P(()=>_.cell);var r=Ze(),u=k(r);{var n=l=>{var o=st(),$=p(o);i(o),w(c=>O($,`        ${c??""}
      `),[()=>Ee(x(e).value)],P),s(l,o)},h=l=>{var o=v();w(()=>O(o,x(e).value)),s(l,o)};et(u,l=>{x(e).key==="left"||x(e).key==="right"?l(n):l(h,!1)})}s(a,r)},"cell-header":(a,_)=>{const e=P(()=>_.header);var r=at(),u=p(r,!0);i(r),w(()=>O(u,x(e).value)),s(a,r)}}});var H=t(R,4);T(H,{zebra:!0,headers:[{key:"left",value:"Так правильно"},{key:"right",value:"Так тоже правильно"}],rows:[{id:1,left:`{
  query: "Виктор Иван",
  count: 7
}`,right:`{
  count: 7,
  query: "Виктор Иван"
}`}],$$slots:{"cell-left":(a,_)=>{const e=P(()=>_.value);var r=rt(),u=p(r,!0);i(r),w(()=>O(u,x(e))),s(a,r)},"cell-right":(a,_)=>{const e=P(()=>_.value);var r=lt(),u=p(r,!0);i(r),w(()=>O(u,x(e))),s(a,r)}}});var Q=t(H,4);D(Q,{id:"JSON",children:(a,_)=>{var e=ot();s(a,e)},$$slots:{default:!0}});var W=t(Q,4);m(W,{style:"margin-left: 3.5em;",children:(a,_)=>{var e=dt(),r=k(e);g(r,{children:(o,$)=>{d();var c=v("JSON-объект");s(o,c)},$$slots:{default:!0}});var u=t(r,2);g(u,{children:(o,$)=>{d();var c=v("Массив");s(o,c)},$$slots:{default:!0}});var n=t(u,2);g(n,{children:(o,$)=>{d();var c=v("Число (целое или вещественное)");s(o,c)},$$slots:{default:!0}});var h=t(n,2);g(h,{children:(o,$)=>{d();var c=v("Литералы true (логическое значение «истина»), false (логическое значение «ложь») и null");s(o,c)},$$slots:{default:!0}});var l=t(h,2);g(l,{children:(o,$)=>{d();var c=v("Строка");s(o,c)},$$slots:{default:!0}}),s(a,e)},$$slots:{default:!0}});var S=t(W,4),X=p(S),Ae=p(X);y(Ae,{src:"https://images-cdn.9gag.com/photo/aGdOG6w_700b.jpg",style:"width: 100%;"}),i(X),i(S);var Y=t(S,2);D(Y,{id:"JSON-object",children:(a,_)=>{var e=vt();s(a,e)},$$slots:{default:!0}});var J=t(Y,4),Ie=t(p(J));tt(Ie,{visited:!0,href:"https://confluence.hflabs.ru/pages/viewpage.action?pageId=204669115",children:(a,_)=>{d();var e=v("документации подсказок Дадаты по ФИО:");s(a,e)},$$slots:{default:!0}}),d(),i(J);var Z=t(J,2);b(Z,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(a,_)=>{d();var e=v();e.nodeValue=`{
  "query": "Виктор Иван",
  "count": 7
}`,s(a,e)},$$slots:{default:!0}});var L=t(Z,6),ee=p(L),Ve=p(ee);y(Ve,{src:"https://habrastorage.org/getpro/habr/upload_files/acd/1a0/b3e/acd1a0b3e42086178942fcc0c0fd8d1b.png",style:"width: 100%;"}),i(ee),i(L);var N=t(L,8),te=p(N),je=p(te);y(je,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/876/d5f/5df/876d5f5df458e26a565517291b9c08f5.png",style:"width: 100%;"}),i(te),i(N);var M=t(N,4),se=p(M),Ge=p(se);y(Ge,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/bfe/c50/765/bfec507654e0e328a5260abae1a63928.png",style:"width: 100%;"}),i(se),i(M);var C=t(M,6),ae=p(C),Ue=p(ae);y(Ue,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/2db/ef1/434/2dbef14341056172d3815e69b7f0772b.png",style:"width: 100%;"}),i(ae),i(C);var re=t(C,4);m(re,{style:"margin-left: 3.5em;",children:(a,_)=>{var e=pt(),r=k(e);g(r,{children:(n,h)=>{d();var l=v("query — строка, по которой ищем (то, что пользователь вбил в GUI);");s(n,l)},$$slots:{default:!0}});var u=t(r,2);g(u,{children:(n,h)=>{d();var l=v("count — количество подсказок в ответе (в Дадате этот параметр зашит в форму, всегда возвращается 7 подсказок. Но если дергать подсказки напрямую, значение можно менять!)");s(n,l)},$$slots:{default:!0}}),s(a,e)},$$slots:{default:!0}});var q=t(re,4),le=p(q),ze=p(le);y(ze,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/404/210/27a/40421027ad8962083a263742db86b2e2.png",style:"width: 100%;"}),i(le),i(q);var B=t(q,4),oe=p(B),De=p(oe);y(De,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/fe9/c45/523/fe9c45523dd56e5f240b7f1bdf267ecf.png",style:"width: 100%;"}),i(oe),i(B);var de=t(B,16);T(de,{zebra:!0,headers:[{key:"name",value:"Так правильно"},{key:"right",value:"Так тоже правильно"}],rows:F});var ve=t(de,8);b(ve,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(a,_)=>{d();var e=v();e.nodeValue=`{
  "query": "Виктор Иван",
  "count": 7
}`,s(a,e)},$$slots:{default:!0}});var pe=t(ve,4);m(pe,{style:"margin-left: 3.5em;",children:(a,_)=>{var e=it(),r=k(e);g(r,{children:(n,h)=>{d();var l=v("Обратиться к свойству объекта;");s(n,l)},$$slots:{default:!0}});var u=t(r,2);g(u,{children:(n,h)=>{d();var l=v("Получить значение по ключу.");s(n,l)},$$slots:{default:!0}}),s(a,e)},$$slots:{default:!0}});var E=t(pe,2),ie=p(E),Te=p(ie);y(Te,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/571/394/c65/571394c65e5f9992310a329cad1df6c3.png",style:"width: 100%;"}),i(ie),i(E);var A=t(E,4),ne=p(A),Fe=p(ne);y(Fe,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a17/d1f/8d3/a17d1f8d358046158dc484d8490eb993.png",style:"width: 100%;"}),i(ne),i(A);var ce=t(A,8);m(ce,{style:"margin-left: 3.5em;",children:(a,_)=>{var e=nt(),r=k(e);g(r,{children:(n,h)=>{d();var l=v("Свойства — описывают, ЧТО мы создаем.");s(n,l)},$$slots:{default:!0}});var u=t(r,2);g(u,{children:(n,h)=>{d();var l=v("Методы — что объект умеет ДЕЛАТЬ.");s(n,l)},$$slots:{default:!0}}),s(a,e)},$$slots:{default:!0}});var ue=t(ce,4);m(ue,{style:"margin-left: 3.5em;",children:(a,_)=>{var e=ct(),r=k(e);g(r,{children:(n,h)=>{d();var l=v("Перечислить 10 разных переменных — модель, номер, цвет, пробег...");s(n,l)},$$slots:{default:!0}});var u=t(r,2);g(u,{children:(n,h)=>{d();var l=v("Создать один объект, где будут все эти свойства.");s(n,l)},$$slots:{default:!0}}),s(a,e)},$$slots:{default:!0}});var I=t(ue,4),ge=p(I),Ke=p(ge);y(Ke,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/74e/19e/aea/74e19eaea84e2ed0ca70a8dccd97c42b.png",style:"width: 100%;"}),i(ge),i(I);var _e=t(I,8);b(_e,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(a,_)=>{d();var e=v();e.nodeValue=`var cat = {
name: “Pussy”,
year: 1,
sleep: function() {
// sleeping code
}
}`,s(a,e)},$$slots:{default:!0}});var V=t(_e,2),$e=p(V),Re=p($e);y(Re,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/e54/411/117/e54411117536be81e8adbdc73a022897.png",style:"width: 100%;"}),i($e),i(V);var he=t(V,4);m(he,{style:"margin-left: 3.5em;",children:(a,_)=>{var e=ut(),r=k(e);g(r,{children:(n,h)=>{d();var l=v("Свойства — name, year (что это за кошечка)");s(n,l)},$$slots:{default:!0}});var u=t(r,2);g(u,{children:(n,h)=>{d();var l=v("Функции — sleep (что она умеет делать, описание поведения)");s(n,l)},$$slots:{default:!0}}),s(a,e)},$$slots:{default:!0}});var fe=t(he,8);b(fe,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(a,_)=>{d();var e=v();e.nodeValue=`{
name: “Pussy”,
year: 1,
}
`,s(a,e)},$$slots:{default:!0}});var ye=t(fe,10);m(ye,{style:"margin-left: 3.5em;",children:(a,_)=>{var e=gt(),r=k(e);g(r,{children:(l,o)=>{d();var $=v("client_fio (в коде это свойство fio объекта client)");s(l,$)},$$slots:{default:!0}});var u=t(r,2);g(u,{children:(l,o)=>{d();var $=v("kitty_name (в коде это свойство name объекта cat)");s(l,$)},$$slots:{default:!0}});var n=t(u,2);g(n,{children:(l,o)=>{d();var $=v("car_model (в коде это свойство model объекта car)");s(l,$)},$$slots:{default:!0}});var h=t(n,2);g(h,{children:(l,o)=>{d();var $=v("…");s(l,$)},$$slots:{default:!0}}),s(a,e)},$$slots:{default:!0}});var j=t(ye,4),ke=p(j),He=p(ke);y(He,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a27/55f/745/a2755f74538cb927c9117a876c44232d.png",style:"width: 100%;"}),i(ke),i(j);var be=t(j,10);m(be,{style:"margin-left: 3.5em;",children:(a,_)=>{var e=_t(),r=k(e);g(r,{children:(o,$)=>{d();var c=v("Число");s(o,c)},$$slots:{default:!0}});var u=t(r,2);g(u,{children:(o,$)=>{d();var c=v("строка");s(o,c)},$$slots:{default:!0}});var n=t(u,2);g(n,{children:(o,$)=>{d();var c=v("массив");s(o,c)},$$slots:{default:!0}});var h=t(n,2);g(h,{children:(o,$)=>{d();var c=v("другой объект");s(o,c)},$$slots:{default:!0}});var l=t(h,2);g(l,{children:(o,$)=>{d();var c=v("…");s(o,c)},$$slots:{default:!0}}),s(a,e)},$$slots:{default:!0}});var me=t(be,4);D(me,{id:"JSON-array",children:(a,_)=>{var e=$t();s(a,e)},$$slots:{default:!0}});var xe=t(me,6);b(xe,{code:'[ "MALE", "FEMALE" ]',hideCopyButton:!0,showMoreLess:!1});var G=t(xe,4),we=p(G),Qe=p(we);y(Qe,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/5b1/c5f/800/5b1c5f800d9c612a1b27e87be3cc0297.png",style:"width: 100%;"}),i(we),i(G);var U=t(G,4),Pe=p(U),We=p(Pe);y(We,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/f7b/4b1/af8/f7b4b1af8f617aa9ca89fe15124863ed.png",style:"width: 100%;"}),i(Pe),i(U);var z=t(U,4),Oe=p(z),Xe=p(Oe);y(Xe,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/760/c8f/f7a/760c8ff7ab4e88155efae8faeb46b689.png",style:"width: 100%;"}),i(Oe),i(z);var Se=t(z,8);b(Se,{code:"[ 1, 5, 10, 33 ]",hideCopyButton:!0,showMoreLess:!1});var Je=t(Se,4);b(Je,{code:'[ "MALE", "FEMALE" ]',hideCopyButton:!0,showMoreLess:!1});var Le=t(Je,4);b(Le,{code:'[ 1, "Андрюшка",  10, 33 ]',hideCopyButton:!0,showMoreLess:!1});var Ne=t(Le,6);b(Ne,{code:'[1, {a:1, b:2}, "такой вот массивчик"]',hideCopyButton:!0,showMoreLess:!1});var Me=t(Ne,4);b(Me,{type:"multi",hideCopyButton:!0,children:(a,_)=>{d();var e=v();e.nodeValue=`[
        {
            "value": "Иванов Виктор",
            "unrestricted_value": "Иванов Виктор",
            "data": {
                "surname": "Иванов",
                "name": "Виктор",
                "patronymic": null,
                "gender": "MALE"
            }
        },
        {
            "value": "Иванченко Виктор",
            "unrestricted_value": "Иванченко Виктор",
            "data": {
                "surname": "Иванченко",
                "name": "Виктор",
                "patronymic": null,
                "gender": "MALE"
            }
        },
        {
            "value": "Виктор Иванович",
            "unrestricted_value": "Виктор Иванович",
            "data": {
                "surname": null,
                "name": "Виктор",
                "patronymic": "Иванович",
                "gender": "MALE"
            }
        }
]`,s(a,e)},$$slots:{default:!0}});var Ce=t(Me,6);b(Ce,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(a,_)=>{d();var e=v();e.nodeValue=`{
"query": "Виктор Иван",
"count": 7,
"parts": ["NAME", "SURNAME"]
}`,s(a,e)},$$slots:{default:!0}});var Ye=t(Ce,8);m(Ye,{style:"margin-left: 3.5em;",children:(a,_)=>{var e=ht(),r=k(e);g(r,{children:(o,$)=>{d();var c=v("числа");s(o,c)},$$slots:{default:!0}});var u=t(r,2);g(u,{children:(o,$)=>{d();var c=v("строки");s(o,c)},$$slots:{default:!0}});var n=t(u,2);g(n,{children:(o,$)=>{d();var c=v("другие массивы");s(o,c)},$$slots:{default:!0}});var h=t(n,2);g(h,{children:(o,$)=>{d();var c=v("объекты");s(o,c)},$$slots:{default:!0}});var l=t(h,2);g(l,{children:(o,$)=>{d();var c=v("смесь из всего вышеназванного");s(o,c)},$$slots:{default:!0}}),s(a,e)},$$slots:{default:!0}}),s(qe,K)}export{Ct as component};
