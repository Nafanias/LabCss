import"../chunks/Bg9kRutz.js";import"../chunks/69_IOA4Y.js";import{b as Ps,h as ze,a as He,j as ks,e as Fe,y as Os,$ as Ns,a0 as Ss,s as Js,z as Ls,v as Ms,Y as Cs,a1 as Bs,a2 as Es,T as e,U as m,_ as Rs,J as v,R as As,V as r,K as p,g as oe,d as Ke,G as Ye}from"../chunks/BjD_Ek8v.js";import{c as Qe,d as Ts,t as g,a as s,f as We,b as l,s as Xe}from"../chunks/BKj4abRE.js";import{e as qs,i as Is}from"../chunks/BZb15E8V.js";import{i as Gs}from"../chunks/BcGeeHkV.js";import{p as Vs}from"../chunks/BI8UVfOg.js";import"../chunks/9wtFbnPm.js";import{A as ne}from"../chunks/CBfUQGc3.js";import{D as Ze,T as js,a as Ds,b as es,c as ss,d as Us,e as ts}from"../chunks/QjyFc1ib.js";import{G as zs,R as Hs,C as Fs}from"../chunks/COUS4P7g.js";import{O as w}from"../chunks/BxOtZaeI.js";import{I as y}from"../chunks/do2IaR1L.js";import{O as Ks}from"../chunks/RUKFRWM2.js";import{C as x}from"../chunks/CT94UoGw.js";import{L as $}from"../chunks/zjbbgf1y.js";function Ys(q,C,O,I,G){var J=q,P="",k;Ps(()=>{if(P===(P=C()??"")){ze&&He();return}k!==void 0&&(Ms(k),k=void 0),P!==""&&(k=ks(()=>{if(ze){Fe.data;for(var b=He(),L=b;b!==null&&(b.nodeType!==8||b.data!=="");)L=b,b=Os(b);if(b===null)throw Ns(),Ss;Qe(Fe,L),J=Js(b);return}var V=P+"",N=Ts(V);Qe(Ls(N),N.lastChild),J.before(N)}))})}var Qs=g("<!> <!>",1),Ws=g("<!> <!>",1),Xs=g("<!> <!>",1),Zs=g('<div class="bx--data-table-header"><h4>Таблица</h4></div> <!>',1),et=g('<h2 class="svelte-1on0sn0">Как устроен JSON</h2>'),st=g("<!> <!> <!> <!> <!>",1),tt=g('<h2 class="svelte-1on0sn0">JSON-объект</h2>'),at=g("<!> <!>",1),rt=g("<!> <!>",1),lt=g("<!> <!>",1),ot=g("<!> <!>",1),nt=g("<!> <!>",1),dt=g("<!> <!> <!> <!>",1),it=g("<!> <!> <!> <!> <!>",1),vt=g('<h2 class="svelte-1on0sn0">JSON-массив</h2>'),pt=g("<!> <!> <!> <!> <!>",1),ct=g('<h1 class="svelte-1on0sn0">Что такое JSON</h1> <!> <!> <p class="svelte-1on0sn0">JSON (англ. JavaScript Object Notation) — это формат данных, который в основном используется для хранения и передачи данных, в частности между сервером и веб-приложением. Он широко применяется для представления структурированных данных.</p> <!> <p class="svelte-1on0sn0">В качестве значений в JSON могут быть использованы:</p> <!> <p class="svelte-1on0sn0">Я думаю, с простыми значениями вопросов не возникнет, поэтому разберем массивы и объекты.</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <!> <h3>Как устроен</h3> <p class="svelte-1on0sn0">Возьмем пример из <!>.</p> <!> <p class="svelte-1on0sn0">И разберемся, что означает эта запись.</p> <p class="svelte-1on0sn0">Объект заключен в фигурные скобки &lbrace;&rbrace;</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">JSON-объект — это неупорядоченное множество пар «ключ:значение».</p> <p class="svelte-1on0sn0">Ключ — это название параметра, который мы передаем серверу. Он служит маркером для принимающей запрос системы: «смотри, здесь у меня значение такого-то параметра!». А иначе как система поймет, где что? Ей нужна подсказка!</p> <p class="svelte-1on0sn0">Вот, например, «Виктор Иван» — это что? Ищем описание параметра «query» в документации — ага, да это же запрос для подсказок!</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Это как если бы мы вбили строку «Виктор Иван» в GUI (графическом интерфейсе пользователя):</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Когда пользователь начинает вводить данные в формочку, то сразу видит результат — появляется список подсказок. Это значит, что разработчик прописал в коде условие — делать некое действие на каждый ввод символа в это поле. Какое действие? Можно увидеть через f12.</p> <p class="svelte-1on0sn0">Открываем вкладку Network, вбиваем «Виктор Иван» и находим запрос, который при этом уходит на сервер. Ого, да это тот самый пример, что мы разбираем!</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Клиент передает серверу запрос в JSON-формате. Внутри два параметра, две пары «ключ-значение»:</p> <!> <p class="svelte-1on0sn0">Пары «ключ-значение» разделены запятыми:</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Строки берем в кавычки, числа нет:</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Конечно, внутри может быть не только строка или число. Это может быть и другой объект! Или массив... Или объект в массиве, массив в объекте... Любое количество уровней вложенности =))</p> <p class="svelte-1on0sn0">Объект, массив, число, булево значение (true / false) — если у нас НЕ строка, кавычки не нужны. Но в любом случае это будет значение какого-то ключа:</p> ТАБЛИЦА <p class="svelte-1on0sn0">Переносы строк делать необязательно. Вообще пробелы и переносы строк нужны только человеку для читабельности, система поймет и без них:</p> ТАБЛИЦА <p class="svelte-1on0sn0">Ключ — ВСЕГДА строка, но мы все равно берем его в кавычки. В JavaScript этого можно не делать, в JSON нельзя.</p> ТАБЛИЦА <p class="svelte-1on0sn0">По крайней мере, если вы работаете с простыми значениями ключей, а несколько слов записываете в верблюжьемРегистре или в змеином_регистре. Если вы хотите написать в ключе несколько слов через пробел, ключ нужно взять в кавычки.</p> ТАБЛИЦА <p class="svelte-1on0sn0">И все же я рекомендую использовать простые названия ключей, или использовать snake_case.</p> <p class="svelte-1on0sn0">Писать ключи можно в любом порядке. Ведь JSON-объект — это <u>неупорядоченное</u> множество пар «ключ:значение».</p> <!> <p class="svelte-1on0sn0">Очень важно это понимать, и тестировать! Принимающая запрос система должна ориентировать на название ключей в запросе, а не на порядок их следования. Ключевое слово «должна» )) Хотя знаю примеры, когда от перестановки ключей местами всё ломалось, ведь «первым должен идти запрос, а не count!».</p> <h3>Ключ или свойство?</h3> <p class="svelte-1on0sn0">Вот у нас есть JSON-объект:</p> <!> <p class="svelte-1on0sn0">Что такое «query»? Если я хочу к нему обратиться, как мне это сказать? Есть 2 варианта, и оба правильные:</p> <!> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">То есть «query» можно назвать как ключом, так и свойством. А как правильно то?</p> <div style="text-align: center;  margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Правильно и так, и так! Просто есть разные определения объекта:</p> <h3>Объект</h3> <p class="svelte-1on0sn0">В JS объект — это именно объект. У которого есть набор свойств и методов:</p> <!> <p class="svelte-1on0sn0">То есть если мы хотим создать машину, есть два пути:</p> <!> <p class="svelte-1on0sn0">Аналогично с кошечкой, собачкой, другом из записной книжки...</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Объектно-ориентированное программирование (ООП) предлагает мыслить не набором переменных, а объектом. Хотя бы потому, что это логичнее. Переменных в коде будет много, как понять, какие из них взаимосвязаны?</p> <p class="svelte-1on0sn0">Вот если я создаю машину, сколько переменных мне надо заполнить? А если меняю данные? А если удаляю? Когда переменные разбросаны по коду, можно забыть про какую-то и получить ошибку в интерфейсе. А если у нас есть цельный объект, всегда можно посмотреть, какие у него есть свойства и методы.</p> <p class="svelte-1on0sn0">Например, создадим кошечку:</p> <!> <div style="text-align: center;  margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">В объекте cat есть:</p> <!> <p class="svelte-1on0sn0">По коду сразу видно, что у кошечки есть имя и возраст, она умеет спать. Если разработчик решит добавить новые свойства или методы, он дополнит этот объект, и снова всё в одном месте.</p> <p class="svelte-1on0sn0">Если потом нужно будет получить информацию по кошечке, разработчик сделает REST-метод getByID, searchKitty, или какой-то другой. А в нем будет возвращать свойства объекта.</p> <p class="svelte-1on0sn0">То есть метод вернет</p> <!> <p class="svelte-1on0sn0">И при использовании имени вполне уместно говорить «обратиться к свойству объекта». Это ведь объект (кошечка), и его свойства!</p> <h3>Объект</h3> <p class="svelte-1on0sn0">Второе определение объекта — неупорядоченное множество пар ключ:значение, заключенное в фигурные скобки &lbrace;&rbrace;.</p> <p class="svelte-1on0sn0">Оно применимо тогда, когда внутри фигурных скобок приходит не конкретный целостный объект, а просто набор полей. Они могут быть связаны между собой, а могут относится к совершенно разным объектам внутри кода:</p> <!> <p class="svelte-1on0sn0">В таком случае логично называть эти параметры именно ключами — мы хотим получить значение по ключу.</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Но в любом случае, и «ключ», и «свойство» будет правильно. Не пугайтесь, если в одной книге / статье / видео увидели одно, в другой другое... Это просто разные трактовки.</p> <h3>Итого</h3> <p class="svelte-1on0sn0">Json-объект — это неупорядоченное множество пар «ключ:значение», заключённое в фигурные скобки «&lbrace;  &rbrace;». Ключ описывается строкой, между ним и значением стоит символ «:». Пары ключ-значение отделяются друг от друга запятыми.</p> <p class="svelte-1on0sn0">Значения ключа могут быть любыми:</p> <!> <p class="svelte-1on0sn0">И только строку мы берем в кавычки!</p> <!> <p class="svelte-1on0sn0"><span class="bold svelte-1on0sn0">Как устроен</span></p> <p class="svelte-1on0sn0">Давайте снова начнем с примера. Это массив:</p> <!> <p class="svelte-1on0sn0">Массив заключен в квадратные скобки []</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Внутри квадратных скобок идет набор значений. Тут нет ключей, как в объекте, поэтому обращаться к массиву можно только по номеру элемента. И поэтому в случае массива менять местами данные внутри <u>нельзя</u>. Это упорядоченное множество значений.</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Значения разделены запятыми:</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0"><span class="bold svelte-1on0sn0">Значения внутри</span></p> <p class="svelte-1on0sn0">Внутри массива может быть все, что угодно:</p> <p class="svelte-1on0sn0"><span class="bold svelte-1on0sn0">Цифры</span></p> <!> <p class="svelte-1on0sn0"><span class="bold svelte-1on0sn0">Строки</span></p> <!> <p class="svelte-1on0sn0"><span class="bold svelte-1on0sn0">Смесь</span></p> <!> <p class="svelte-1on0sn0"><span class="bold svelte-1on0sn0">Объекты</span></p> <p class="svelte-1on0sn0">Да, а почему бы и нет:</p> <!> <p class="svelte-1on0sn0">Или даже что-то более сложное. Вот пример ответа подсказок из Дадаты:</p> <!> <p class="svelte-1on0sn0">Система возвращает массив подсказок. Сколько запросили в параметре count, столько и получили. Каждая подсказка — объект, внутри которого еще один объект. И это далеко не самая сложная структура! Уровней вложенности может быть сколько угодно — массив в массиве, который внутри объекта, который внутри массива, который внутри объекта...</p> <p class="svelte-1on0sn0">Ну и, конечно, можно и наоборот, передать массив в объекте. Вот пример запроса в подсказки:</p> <!> <h3>Итого</h3> <p class="svelte-1on0sn0">Массив — это просто набор значений, разделенных запятыми. Находится внутри квадратных скобок [].</p> <p class="svelte-1on0sn0">А вот внутри него может быть все, что угодно:</p> <!>',1);function Lt(q,C){Cs(C,!1);let O=Vs(C,"rows",24,()=>[{id:1,name:"Тест",right:{test:123}}]);Bs(()=>As(O()),()=>{console.log("Rows:",O())}),Es(),Gs();var I=ct(),G=e(m(I),2);Ze(G,{zebra:!0,headers:[{key:"name",value:"Name"},{key:"right",value:"Right"}],get rows(){return O()},$$slots:{"cell-right":(a,f)=>{const t=Ke(()=>f.value);var c=We(),u=m(c);Ys(u,()=>JSON.stringify(oe(t),null,2).replace(/\n/g,"<br>")),s(a,c)}}});var J=e(G,2);zs(J,{children:(a,f)=>{Hs(a,{children:(t,c)=>{Fs(t,{sm:4,md:8,lg:12,children:(u,d)=>{var _=Zs(),o=e(m(_),2);js(o,{children:(n,h)=>{var i=Xs(),je=m(i);Ds(je,{children:(ae,ys)=>{es(ae,{children:(B,De)=>{var E=Qs(),M=m(E);ss(M,{children:(R,A)=>{r();var S=l("Name");s(R,S)},$$slots:{default:!0}});var re=e(M,2);ss(re,{children:(R,A)=>{r();var S=l("Right");s(R,S)},$$slots:{default:!0}}),s(B,E)},$$slots:{default:!0}})},$$slots:{default:!0}});var ms=e(je,2);Us(ms,{children:(ae,ys)=>{var B=We(),De=m(B);qs(De,1,O,Is,(E,M)=>{es(E,{children:(re,R)=>{var A=Ws(),S=m(A);ts(S,{children:(le,xs)=>{r();var T=l();Ye(()=>Xe(T,oe(M).name)),s(le,T)},$$slots:{default:!0}});var bs=e(S,2);ts(bs,{children:(le,xs)=>{x(le,{type:"multi",hideCopyButton:!0,children:(T,$t)=>{r();var Ue=l();Ye(ws=>Xe(Ue,ws),[()=>JSON.stringify(oe(M).right,null,2)],Ke),s(T,Ue)},$$slots:{default:!0}})},$$slots:{default:!0}}),s(re,A)},$$slots:{default:!0}})}),s(ae,B)},$$slots:{default:!0}}),s(n,i)},$$slots:{default:!0}}),s(u,_)},$$slots:{default:!0}})},$$slots:{default:!0}})},$$slots:{default:!0}});var P=e(J,4);ne(P,{id:"JSON",children:(a,f)=>{var t=et();s(a,t)},$$slots:{default:!0}});var k=e(P,4);w(k,{style:"margin-left: 3.5em;",children:(a,f)=>{var t=st(),c=m(t);$(c,{children:(n,h)=>{r();var i=l("JSON-объект");s(n,i)},$$slots:{default:!0}});var u=e(c,2);$(u,{children:(n,h)=>{r();var i=l("Массив");s(n,i)},$$slots:{default:!0}});var d=e(u,2);$(d,{children:(n,h)=>{r();var i=l("Число (целое или вещественное)");s(n,i)},$$slots:{default:!0}});var _=e(d,2);$(_,{children:(n,h)=>{r();var i=l("Литералы true (логическое значение «истина»), false (логическое значение «ложь») и null");s(n,i)},$$slots:{default:!0}});var o=e(_,2);$(o,{children:(n,h)=>{r();var i=l("Строка");s(n,i)},$$slots:{default:!0}}),s(a,t)},$$slots:{default:!0}});var b=e(k,4),L=v(b),V=v(L);y(V,{src:"https://images-cdn.9gag.com/photo/aGdOG6w_700b.jpg",style:"width: 100%;"}),p(L),p(b);var N=e(b,2);ne(N,{id:"JSON-object",children:(a,f)=>{var t=tt();s(a,t)},$$slots:{default:!0}});var j=e(N,4),as=e(v(j));Ks(as,{visited:!0,href:"https://confluence.hflabs.ru/pages/viewpage.action?pageId=204669115",children:(a,f)=>{r();var t=l("документации подсказок Дадаты по ФИО:");s(a,t)},$$slots:{default:!0}}),r(),p(j);var de=e(j,2);x(de,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(a,f)=>{r();var t=l();t.nodeValue=`{
  "query": "Виктор Иван",
  "count": 7
}`,s(a,t)},$$slots:{default:!0}});var D=e(de,6),ie=v(D),rs=v(ie);y(rs,{src:"https://habrastorage.org/getpro/habr/upload_files/acd/1a0/b3e/acd1a0b3e42086178942fcc0c0fd8d1b.png",style:"width: 100%;"}),p(ie),p(D);var U=e(D,8),ve=v(U),ls=v(ve);y(ls,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/876/d5f/5df/876d5f5df458e26a565517291b9c08f5.png",style:"width: 100%;"}),p(ve),p(U);var z=e(U,4),pe=v(z),os=v(pe);y(os,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/bfe/c50/765/bfec507654e0e328a5260abae1a63928.png",style:"width: 100%;"}),p(pe),p(z);var H=e(z,6),ce=v(H),ns=v(ce);y(ns,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/2db/ef1/434/2dbef14341056172d3815e69b7f0772b.png",style:"width: 100%;"}),p(ce),p(H);var $e=e(H,4);w($e,{style:"margin-left: 3.5em;",children:(a,f)=>{var t=at(),c=m(t);$(c,{children:(d,_)=>{r();var o=l("query — строка, по которой ищем (то, что пользователь вбил в GUI);");s(d,o)},$$slots:{default:!0}});var u=e(c,2);$(u,{children:(d,_)=>{r();var o=l("count — количество подсказок в ответе (в Дадате этот параметр зашит в форму, всегда возвращается 7 подсказок. Но если дергать подсказки напрямую, значение можно менять!)");s(d,o)},$$slots:{default:!0}}),s(a,t)},$$slots:{default:!0}});var F=e($e,4),ue=v(F),ds=v(ue);y(ds,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/404/210/27a/40421027ad8962083a263742db86b2e2.png",style:"width: 100%;"}),p(ue),p(F);var K=e(F,4),_e=v(K),is=v(_e);y(is,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/fe9/c45/523/fe9c45523dd56e5f240b7f1bdf267ecf.png",style:"width: 100%;"}),p(_e),p(K);var he=e(K,16);Ze(he,{zebra:!0,headers:[{key:"name",value:"Так правильно"},{key:"right",value:"Так тоже правильно"}],get rows(){return O()}});var fe=e(he,8);x(fe,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(a,f)=>{r();var t=l();t.nodeValue=`{
  "query": "Виктор Иван",
  "count": 7
}`,s(a,t)},$$slots:{default:!0}});var ge=e(fe,4);w(ge,{style:"margin-left: 3.5em;",children:(a,f)=>{var t=rt(),c=m(t);$(c,{children:(d,_)=>{r();var o=l("Обратиться к свойству объекта;");s(d,o)},$$slots:{default:!0}});var u=e(c,2);$(u,{children:(d,_)=>{r();var o=l("Получить значение по ключу.");s(d,o)},$$slots:{default:!0}}),s(a,t)},$$slots:{default:!0}});var Y=e(ge,2),me=v(Y),vs=v(me);y(vs,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/571/394/c65/571394c65e5f9992310a329cad1df6c3.png",style:"width: 100%;"}),p(me),p(Y);var Q=e(Y,4),ye=v(Q),ps=v(ye);y(ps,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a17/d1f/8d3/a17d1f8d358046158dc484d8490eb993.png",style:"width: 100%;"}),p(ye),p(Q);var be=e(Q,8);w(be,{style:"margin-left: 3.5em;",children:(a,f)=>{var t=lt(),c=m(t);$(c,{children:(d,_)=>{r();var o=l("Свойства — описывают, ЧТО мы создаем.");s(d,o)},$$slots:{default:!0}});var u=e(c,2);$(u,{children:(d,_)=>{r();var o=l("Методы — что объект умеет ДЕЛАТЬ.");s(d,o)},$$slots:{default:!0}}),s(a,t)},$$slots:{default:!0}});var xe=e(be,4);w(xe,{style:"margin-left: 3.5em;",children:(a,f)=>{var t=ot(),c=m(t);$(c,{children:(d,_)=>{r();var o=l("Перечислить 10 разных переменных — модель, номер, цвет, пробег...");s(d,o)},$$slots:{default:!0}});var u=e(c,2);$(u,{children:(d,_)=>{r();var o=l("Создать один объект, где будут все эти свойства.");s(d,o)},$$slots:{default:!0}}),s(a,t)},$$slots:{default:!0}});var W=e(xe,4),we=v(W),cs=v(we);y(cs,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/74e/19e/aea/74e19eaea84e2ed0ca70a8dccd97c42b.png",style:"width: 100%;"}),p(we),p(W);var Pe=e(W,8);x(Pe,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(a,f)=>{r();var t=l();t.nodeValue=`var cat = {
name: “Pussy”,
year: 1,
sleep: function() {
// sleeping code
}
}`,s(a,t)},$$slots:{default:!0}});var X=e(Pe,2),ke=v(X),$s=v(ke);y($s,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/e54/411/117/e54411117536be81e8adbdc73a022897.png",style:"width: 100%;"}),p(ke),p(X);var Oe=e(X,4);w(Oe,{style:"margin-left: 3.5em;",children:(a,f)=>{var t=nt(),c=m(t);$(c,{children:(d,_)=>{r();var o=l("Свойства — name, year (что это за кошечка)");s(d,o)},$$slots:{default:!0}});var u=e(c,2);$(u,{children:(d,_)=>{r();var o=l("Функции — sleep (что она умеет делать, описание поведения)");s(d,o)},$$slots:{default:!0}}),s(a,t)},$$slots:{default:!0}});var Ne=e(Oe,8);x(Ne,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(a,f)=>{r();var t=l();t.nodeValue=`{
name: “Pussy”,
year: 1,
}
`,s(a,t)},$$slots:{default:!0}});var Se=e(Ne,10);w(Se,{style:"margin-left: 3.5em;",children:(a,f)=>{var t=dt(),c=m(t);$(c,{children:(o,n)=>{r();var h=l("client_fio (в коде это свойство fio объекта client)");s(o,h)},$$slots:{default:!0}});var u=e(c,2);$(u,{children:(o,n)=>{r();var h=l("kitty_name (в коде это свойство name объекта cat)");s(o,h)},$$slots:{default:!0}});var d=e(u,2);$(d,{children:(o,n)=>{r();var h=l("car_model (в коде это свойство model объекта car)");s(o,h)},$$slots:{default:!0}});var _=e(d,2);$(_,{children:(o,n)=>{r();var h=l("…");s(o,h)},$$slots:{default:!0}}),s(a,t)},$$slots:{default:!0}});var Z=e(Se,4),Je=v(Z),us=v(Je);y(us,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a27/55f/745/a2755f74538cb927c9117a876c44232d.png",style:"width: 100%;"}),p(Je),p(Z);var Le=e(Z,10);w(Le,{style:"margin-left: 3.5em;",children:(a,f)=>{var t=it(),c=m(t);$(c,{children:(n,h)=>{r();var i=l("Число");s(n,i)},$$slots:{default:!0}});var u=e(c,2);$(u,{children:(n,h)=>{r();var i=l("строка");s(n,i)},$$slots:{default:!0}});var d=e(u,2);$(d,{children:(n,h)=>{r();var i=l("массив");s(n,i)},$$slots:{default:!0}});var _=e(d,2);$(_,{children:(n,h)=>{r();var i=l("другой объект");s(n,i)},$$slots:{default:!0}});var o=e(_,2);$(o,{children:(n,h)=>{r();var i=l("…");s(n,i)},$$slots:{default:!0}}),s(a,t)},$$slots:{default:!0}});var Me=e(Le,4);ne(Me,{id:"JSON-array",children:(a,f)=>{var t=vt();s(a,t)},$$slots:{default:!0}});var Ce=e(Me,6);x(Ce,{code:'[ "MALE", "FEMALE" ]',hideCopyButton:!0,showMoreLess:!1});var ee=e(Ce,4),Be=v(ee),_s=v(Be);y(_s,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/5b1/c5f/800/5b1c5f800d9c612a1b27e87be3cc0297.png",style:"width: 100%;"}),p(Be),p(ee);var se=e(ee,4),Ee=v(se),hs=v(Ee);y(hs,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/f7b/4b1/af8/f7b4b1af8f617aa9ca89fe15124863ed.png",style:"width: 100%;"}),p(Ee),p(se);var te=e(se,4),Re=v(te),fs=v(Re);y(fs,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/760/c8f/f7a/760c8ff7ab4e88155efae8faeb46b689.png",style:"width: 100%;"}),p(Re),p(te);var Ae=e(te,8);x(Ae,{code:"[ 1, 5, 10, 33 ]",hideCopyButton:!0,showMoreLess:!1});var Te=e(Ae,4);x(Te,{code:'[ "MALE", "FEMALE" ]',hideCopyButton:!0,showMoreLess:!1});var qe=e(Te,4);x(qe,{code:'[ 1, "Андрюшка",  10, 33 ]',hideCopyButton:!0,showMoreLess:!1});var Ie=e(qe,6);x(Ie,{code:'[1, {a:1, b:2}, "такой вот массивчик"]',hideCopyButton:!0,showMoreLess:!1});var Ge=e(Ie,4);x(Ge,{type:"multi",hideCopyButton:!0,children:(a,f)=>{r();var t=l();t.nodeValue=`[
        {
            "value": "Иванов Виктор",
            "unrestricted_value": "Иванов Виктор",
            "data": {
                "surname": "Иванов",
                "name": "Виктор",
                "patronymic": null,
                "gender": "MALE"
            }
        },
        {
            "value": "Иванченко Виктор",
            "unrestricted_value": "Иванченко Виктор",
            "data": {
                "surname": "Иванченко",
                "name": "Виктор",
                "patronymic": null,
                "gender": "MALE"
            }
        },
        {
            "value": "Виктор Иванович",
            "unrestricted_value": "Виктор Иванович",
            "data": {
                "surname": null,
                "name": "Виктор",
                "patronymic": "Иванович",
                "gender": "MALE"
            }
        }
]`,s(a,t)},$$slots:{default:!0}});var Ve=e(Ge,6);x(Ve,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(a,f)=>{r();var t=l();t.nodeValue=`{
"query": "Виктор Иван",
"count": 7,
"parts": ["NAME", "SURNAME"]
}`,s(a,t)},$$slots:{default:!0}});var gs=e(Ve,8);w(gs,{style:"margin-left: 3.5em;",children:(a,f)=>{var t=pt(),c=m(t);$(c,{children:(n,h)=>{r();var i=l("числа");s(n,i)},$$slots:{default:!0}});var u=e(c,2);$(u,{children:(n,h)=>{r();var i=l("строки");s(n,i)},$$slots:{default:!0}});var d=e(u,2);$(d,{children:(n,h)=>{r();var i=l("другие массивы");s(n,i)},$$slots:{default:!0}});var _=e(d,2);$(_,{children:(n,h)=>{r();var i=l("объекты");s(n,i)},$$slots:{default:!0}});var o=e(_,2);$(o,{children:(n,h)=>{r();var i=l("смесь из всего вышеназванного");s(n,i)},$$slots:{default:!0}}),s(a,t)},$$slots:{default:!0}}),s(q,I),Rs()}export{Lt as component};
