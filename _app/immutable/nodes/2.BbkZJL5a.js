import{t as g,a as t,b as d,s as J,c as De}from"../chunks/B-96c0ZL.js";import"../chunks/CX3icYW4.js";import{L as r,M as y,J as c,N as i,K as u,G as N,g as w,d as L}from"../chunks/DiTQ-BH6.js";import{i as Re}from"../chunks/CNuZa2cV.js";import"../chunks/ChVewC7_.js";import{A as Y}from"../chunks/DHO6R4Si.js";import{T as Ue,D as ze,a as Fe,b as M,c as C,d as He,e as B}from"../chunks/C2EL3iLe.js";import{O as k}from"../chunks/D9nP5vxX.js";import{I as x}from"../chunks/BqXu4MJm.js";import{O as _t}from"../chunks/DP8bmU_-.js";import{C as j}from"../chunks/BuPaSWsu.js";import{L as f}from"../chunks/0BGh6RKk.js";var ht=g("<!> <!>",1),gt=g("<!> <!>",1),yt=g("<!> <!>",1),bt=g("<!> <!>",1),mt=g("<!> <!>",1),xt=g("<!> <!>",1),jt=g('<pre class="json-block svelte-ronfji"> </pre>'),Pt=g('<span class="header-text svelte-ronfji"> </span>'),wt=g('<h2 class="svelte-ronfji">Как устроен JSON</h2>'),kt=g("<!> <!> <!> <!> <!>",1),Ot=g('<h2 class="svelte-ronfji">JSON-объект</h2>'),St=g("<!> <!>",1),Jt=g('<pre class="json-block svelte-ronfji"> </pre>'),Nt=g('<span class="header-text svelte-ronfji"> </span>'),Lt=g("<!> <!>",1),Mt=g("<!> <!>",1),Ct=g("<!> <!>",1),Bt=g("<!> <!>",1),qt=g("<!> <!> <!> <!>",1),Et=g("<!> <!> <!> <!> <!>",1),At=g('<h2 class="svelte-ronfji">JSON-массив</h2>'),Vt=g("<!> <!> <!> <!> <!>",1),Tt=g('<p class="svelte-ronfji">s</p> <!> <p class="svelte-ronfji">s</p> <!> <h1 class="svelte-ronfji">Что такое JSON</h1> <!> <p class="svelte-ronfji">JSON (англ. JavaScript Object Notation) — это формат данных, который в основном используется для хранения и передачи данных, в частности между сервером и веб-приложением. Он широко применяется для представления структурированных данных.</p> <!> <p class="svelte-ronfji">В качестве значений в JSON могут быть использованы:</p> <!> <p class="svelte-ronfji">Я думаю, с простыми значениями вопросов не возникнет, поэтому разберем массивы и объекты.</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <!> <h3>Как устроен</h3> <p class="svelte-ronfji">Возьмем пример из <!>.</p> <!> <p class="svelte-ronfji">И разберемся, что означает эта запись.</p> <p class="svelte-ronfji">Объект заключен в фигурные скобки &lbrace;&rbrace;</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-ronfji">JSON-объект — это неупорядоченное множество пар «ключ:значение».</p> <p class="svelte-ronfji">Ключ — это название параметра, который мы передаем серверу. Он служит маркером для принимающей запрос системы: «смотри, здесь у меня значение такого-то параметра!». А иначе как система поймет, где что? Ей нужна подсказка!</p> <p class="svelte-ronfji">Вот, например, «Виктор Иван» — это что? Ищем описание параметра «query» в документации — ага, да это же запрос для подсказок!</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-ronfji">Это как если бы мы вбили строку «Виктор Иван» в GUI (графическом интерфейсе пользователя):</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-ronfji">Когда пользователь начинает вводить данные в формочку, то сразу видит результат — появляется список подсказок. Это значит, что разработчик прописал в коде условие — делать некое действие на каждый ввод символа в это поле. Какое действие? Можно увидеть через f12.</p> <p class="svelte-ronfji">Открываем вкладку Network, вбиваем «Виктор Иван» и находим запрос, который при этом уходит на сервер. Ого, да это тот самый пример, что мы разбираем!</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-ronfji">Клиент передает серверу запрос в JSON-формате. Внутри два параметра, две пары «ключ-значение»:</p> <!> <p class="svelte-ronfji">Пары «ключ-значение» разделены запятыми:</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-ronfji">Строки берем в кавычки, числа нет:</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-ronfji">Конечно, внутри может быть не только строка или число. Это может быть и другой объект! Или массив... Или объект в массиве, массив в объекте... Любое количество уровней вложенности =))</p> <p class="svelte-ronfji">Объект, массив, число, булево значение (true / false) — если у нас НЕ строка, кавычки не нужны. Но в любом случае это будет значение какого-то ключа:</p> ТАБЛИЦА <p class="svelte-ronfji">Переносы строк делать необязательно. Вообще пробелы и переносы строк нужны только человеку для читабельности, система поймет и без них:</p> ТАБЛИЦА <p class="svelte-ronfji">Ключ — ВСЕГДА строка, но мы все равно берем его в кавычки. В JavaScript этого можно не делать, в JSON нельзя.</p> <p class="svelte-ronfji">По крайней мере, если вы работаете с простыми значениями ключей, а несколько слов записываете в верблюжьемРегистре или в змеином_регистре. Если вы хотите написать в ключе несколько слов через пробел, ключ нужно взять в кавычки.</p> ТАБЛИЦА <p class="svelte-ronfji">И все же я рекомендую использовать простые названия ключей, или использовать snake_case.</p> <p class="svelte-ronfji">Писать ключи можно в любом порядке. Ведь JSON-объект — это <u>неупорядоченное</u> множество пар «ключ:значение».</p> <!> <p class="svelte-ronfji">Очень важно это понимать, и тестировать! Принимающая запрос система должна ориентировать на название ключей в запросе, а не на порядок их следования. Ключевое слово «должна» )) Хотя знаю примеры, когда от перестановки ключей местами всё ломалось, ведь «первым должен идти запрос, а не count!».</p> <h3>Ключ или свойство?</h3> <p class="svelte-ronfji">Вот у нас есть JSON-объект:</p> <!> <p class="svelte-ronfji">Что такое «query»? Если я хочу к нему обратиться, как мне это сказать? Есть 2 варианта, и оба правильные:</p> <!> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-ronfji">То есть «query» можно назвать как ключом, так и свойством. А как правильно то?</p> <div style="text-align: center;  margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-ronfji">Правильно и так, и так! Просто есть разные определения объекта:</p> <h3>Объект</h3> <p class="svelte-ronfji">В JS объект — это именно объект. У которого есть набор свойств и методов:</p> <!> <p class="svelte-ronfji">То есть если мы хотим создать машину, есть два пути:</p> <!> <p class="svelte-ronfji">Аналогично с кошечкой, собачкой, другом из записной книжки...</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-ronfji">Объектно-ориентированное программирование (ООП) предлагает мыслить не набором переменных, а объектом. Хотя бы потому, что это логичнее. Переменных в коде будет много, как понять, какие из них взаимосвязаны?</p> <p class="svelte-ronfji">Вот если я создаю машину, сколько переменных мне надо заполнить? А если меняю данные? А если удаляю? Когда переменные разбросаны по коду, можно забыть про какую-то и получить ошибку в интерфейсе. А если у нас есть цельный объект, всегда можно посмотреть, какие у него есть свойства и методы.</p> <p class="svelte-ronfji">Например, создадим кошечку:</p> <!> <div style="text-align: center;  margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-ronfji">В объекте cat есть:</p> <!> <p class="svelte-ronfji">По коду сразу видно, что у кошечки есть имя и возраст, она умеет спать. Если разработчик решит добавить новые свойства или методы, он дополнит этот объект, и снова всё в одном месте.</p> <p class="svelte-ronfji">Если потом нужно будет получить информацию по кошечке, разработчик сделает REST-метод getByID, searchKitty, или какой-то другой. А в нем будет возвращать свойства объекта.</p> <p class="svelte-ronfji">То есть метод вернет</p> <!> <p class="svelte-ronfji">И при использовании имени вполне уместно говорить «обратиться к свойству объекта». Это ведь объект (кошечка), и его свойства!</p> <h3>Объект</h3> <p class="svelte-ronfji">Второе определение объекта — неупорядоченное множество пар ключ:значение, заключенное в фигурные скобки &lbrace;&rbrace;.</p> <p class="svelte-ronfji">Оно применимо тогда, когда внутри фигурных скобок приходит не конкретный целостный объект, а просто набор полей. Они могут быть связаны между собой, а могут относится к совершенно разным объектам внутри кода:</p> <!> <p class="svelte-ronfji">В таком случае логично называть эти параметры именно ключами — мы хотим получить значение по ключу.</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-ronfji">Но в любом случае, и «ключ», и «свойство» будет правильно. Не пугайтесь, если в одной книге / статье / видео увидели одно, в другой другое... Это просто разные трактовки.</p> <h3>Итого</h3> <p class="svelte-ronfji">Json-объект — это неупорядоченное множество пар «ключ:значение», заключённое в фигурные скобки «&lbrace;  &rbrace;». Ключ описывается строкой, между ним и значением стоит символ «:». Пары ключ-значение отделяются друг от друга запятыми.</p> <p class="svelte-ronfji">Значения ключа могут быть любыми:</p> <!> <p class="svelte-ronfji">И только строку мы берем в кавычки!</p> <!> <p class="svelte-ronfji"><span class="bold svelte-ronfji">Как устроен</span></p> <p class="svelte-ronfji">Давайте снова начнем с примера. Это массив:</p> <!> <p class="svelte-ronfji">Массив заключен в квадратные скобки []</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-ronfji">Внутри квадратных скобок идет набор значений. Тут нет ключей, как в объекте, поэтому обращаться к массиву можно только по номеру элемента. И поэтому в случае массива менять местами данные внутри <u>нельзя</u>. Это упорядоченное множество значений.</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-ronfji">Значения разделены запятыми:</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-ronfji"><span class="bold svelte-ronfji">Значения внутри</span></p> <p class="svelte-ronfji">Внутри массива может быть все, что угодно:</p> <p class="svelte-ronfji"><span class="bold svelte-ronfji">Цифры</span></p> <!> <p class="svelte-ronfji"><span class="bold svelte-ronfji">Строки</span></p> <!> <p class="svelte-ronfji"><span class="bold svelte-ronfji">Смесь</span></p> <!> <p class="svelte-ronfji"><span class="bold svelte-ronfji">Объекты</span></p> <p class="svelte-ronfji">Да, а почему бы и нет:</p> <!> <p class="svelte-ronfji">Или даже что-то более сложное. Вот пример ответа подсказок из Дадаты:</p> <!> <p class="svelte-ronfji">Система возвращает массив подсказок. Сколько запросили в параметре count, столько и получили. Каждая подсказка — объект, внутри которого еще один объект. И это далеко не самая сложная структура! Уровней вложенности может быть сколько угодно — массив в массиве, который внутри объекта, который внутри массива, который внутри объекта...</p> <p class="svelte-ronfji">Ну и, конечно, можно и наоборот, передать массив в объекте. Вот пример запроса в подсказки:</p> <!> <h3>Итого</h3> <p class="svelte-ronfji">Массив — это просто набор значений, разделенных запятыми. Находится внутри квадратных скобок [].</p> <p class="svelte-ronfji">А вот внутри него может быть все, что угодно:</p> <!>',1);function Yt(Ke){const Qe=[{key:"left",value:"Так правильно"},{key:"right",value:"Так тоже правильно"}],We=[{id:1,left:{query:"Виктор Иван",count:7},right:{count:7,query:"Виктор Иван"}}],Xe=[{key:"description",value:"Так правильно"},{key:"json",value:"Так неправильно в JSON"}],Ye=[{id:2,description:"Так правильно",json:{query:"Виктор Иван",count:7}},{id:3,description:"Так неправильно в JSON",json:{query:"Виктор Иван",count:7}}],Z=a=>JSON.stringify(a,null,2);var ee=Tt(),te=r(y(ee),2);Ue(te,{children:(a,_)=>{var e=yt(),o=y(e);Fe(o,{children:(v,h)=>{M(v,{children:(s,l)=>{var p=ht(),n=y(p);C(n,{children:(b,S)=>{i();var m=d("Так правильно");t(b,m)},$$slots:{default:!0}});var O=r(n,2);C(O,{children:(b,S)=>{i();var m=d("Так тоже правильно");t(b,m)},$$slots:{default:!0}}),t(s,p)},$$slots:{default:!0}})},$$slots:{default:!0}});var $=r(o,2);He($,{children:(v,h)=>{M(v,{children:(s,l)=>{var p=gt(),n=y(p);B(n,{children:(b,S)=>{j(b,{type:"multi",hideCopyButton:!0,children:(m,X)=>{i();var P=d();P.nodeValue=`{
	query: "Виктор Иван",
	count: 7
}`,t(m,P)},$$slots:{default:!0}})},$$slots:{default:!0}});var O=r(n,2);B(O,{children:(b,S)=>{j(b,{type:"multi",hideCopyButton:!0,children:(m,X)=>{i();var P=d();P.nodeValue=`{
	count: 7,
	query: "Виктор Иван"
}`,t(m,P)},$$slots:{default:!0}})},$$slots:{default:!0}}),t(s,p)},$$slots:{default:!0}})},$$slots:{default:!0}}),t(a,e)},$$slots:{default:!0}});var re=r(te,4);Ue(re,{style:"margin: 0.5rem 0; border: 1px solid var(--cds-border-subtle);",children:(a,_)=>{var e=xt(),o=y(e);Fe(o,{children:(v,h)=>{M(v,{style:"border-bottom: 1px solid var(--cds-border-subtle);",children:(s,l)=>{var p=bt(),n=y(p);C(n,{style:"padding: 0.5rem 1rem; border-right: 1px solid var(--cds-border-subtle);",children:(b,S)=>{i();var m=d("Так правильно");t(b,m)},$$slots:{default:!0}});var O=r(n,2);C(O,{style:"padding: 0.5rem 1rem;",children:(b,S)=>{i();var m=d("Так тоже правильно");t(b,m)},$$slots:{default:!0}}),t(s,p)},$$slots:{default:!0}})},$$slots:{default:!0}});var $=r(o,2);He($,{children:(v,h)=>{M(v,{children:(s,l)=>{var p=mt(),n=y(p);B(n,{style:"padding: 0.5rem; border-right: 1px solid var(--cds-border-subtle);",children:(b,S)=>{j(b,{type:"multi",hideCopyButton:!0,style:"padding: 0.25rem; margin: 0; border: none;",children:(m,X)=>{i();var P=d();P.nodeValue=`{
  query: "Виктор Иван",
  count: 7
}`,t(m,P)},$$slots:{default:!0}})},$$slots:{default:!0}});var O=r(n,2);B(O,{style:"padding: 0.5rem;",children:(b,S)=>{j(b,{type:"multi",hideCopyButton:!0,style:"padding: 0.25rem; margin: 0; border: none;",children:(m,X)=>{i();var P=d();P.nodeValue=`{
  count: 7,
  query: "Виктор Иван"
}`,t(m,P)},$$slots:{default:!0}})},$$slots:{default:!0}}),t(s,p)},$$slots:{default:!0}})},$$slots:{default:!0}}),t(a,e)},$$slots:{default:!0}});var se=r(re,4);ze(se,{headers2:Xe,rows2:Ye,zebra:!0,$$slots:{cell:(a,_)=>{const e=L(()=>_.cell);var o=De(),$=y(o);{var v=s=>{var l=jt(),p=c(l);u(l),N(n=>J(p,`        ${n??""}
      `),[()=>Z(w(e).value)],L),t(s,l)},h=s=>{var l=d();N(()=>J(l,w(e).value)),t(s,l)};Re($,s=>{w(e).key==="json"?s(v):s(h,!1)})}t(a,o)},"cell-header":(a,_)=>{const e=L(()=>_.header);var o=Pt(),$=c(o,!0);u(o),N(()=>J($,w(e).value)),t(a,o)}}});var ae=r(se,4);Y(ae,{id:"JSON",children:(a,_)=>{var e=wt();t(a,e)},$$slots:{default:!0}});var le=r(ae,4);k(le,{style:"margin-left: 3.5em;",children:(a,_)=>{var e=kt(),o=y(e);f(o,{children:(l,p)=>{i();var n=d("JSON-объект");t(l,n)},$$slots:{default:!0}});var $=r(o,2);f($,{children:(l,p)=>{i();var n=d("Массив");t(l,n)},$$slots:{default:!0}});var v=r($,2);f(v,{children:(l,p)=>{i();var n=d("Число (целое или вещественное)");t(l,n)},$$slots:{default:!0}});var h=r(v,2);f(h,{children:(l,p)=>{i();var n=d("Литералы true (логическое значение «истина»), false (логическое значение «ложь») и null");t(l,n)},$$slots:{default:!0}});var s=r(h,2);f(s,{children:(l,p)=>{i();var n=d("Строка");t(l,n)},$$slots:{default:!0}}),t(a,e)},$$slots:{default:!0}});var q=r(le,4),oe=c(q),Ze=c(oe);x(Ze,{src:"https://images-cdn.9gag.com/photo/aGdOG6w_700b.jpg",style:"width: 100%;"}),u(oe),u(q);var de=r(q,2);Y(de,{id:"JSON-object",children:(a,_)=>{var e=Ot();t(a,e)},$$slots:{default:!0}});var E=r(de,4),et=r(c(E));_t(et,{visited:!0,href:"https://confluence.hflabs.ru/pages/viewpage.action?pageId=204669115",children:(a,_)=>{i();var e=d("документации подсказок Дадаты по ФИО:");t(a,e)},$$slots:{default:!0}}),i(),u(E);var ne=r(E,2);j(ne,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(a,_)=>{i();var e=d();e.nodeValue=`{
  "query": "Виктор Иван",
  "count": 7
}`,t(a,e)},$$slots:{default:!0}});var A=r(ne,6),ie=c(A),tt=c(ie);x(tt,{src:"https://habrastorage.org/getpro/habr/upload_files/acd/1a0/b3e/acd1a0b3e42086178942fcc0c0fd8d1b.png",style:"width: 100%;"}),u(ie),u(A);var V=r(A,8),ve=c(V),rt=c(ve);x(rt,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/876/d5f/5df/876d5f5df458e26a565517291b9c08f5.png",style:"width: 100%;"}),u(ve),u(V);var T=r(V,4),pe=c(T),st=c(pe);x(st,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/bfe/c50/765/bfec507654e0e328a5260abae1a63928.png",style:"width: 100%;"}),u(pe),u(T);var I=r(T,6),ce=c(I),at=c(ce);x(at,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/2db/ef1/434/2dbef14341056172d3815e69b7f0772b.png",style:"width: 100%;"}),u(ce),u(I);var ue=r(I,4);k(ue,{style:"margin-left: 3.5em;",children:(a,_)=>{var e=St(),o=y(e);f(o,{children:(v,h)=>{i();var s=d("query — строка, по которой ищем (то, что пользователь вбил в GUI);");t(v,s)},$$slots:{default:!0}});var $=r(o,2);f($,{children:(v,h)=>{i();var s=d("count — количество подсказок в ответе (в Дадате этот параметр зашит в форму, всегда возвращается 7 подсказок. Но если дергать подсказки напрямую, значение можно менять!)");t(v,s)},$$slots:{default:!0}}),t(a,e)},$$slots:{default:!0}});var G=r(ue,4),$e=c(G),lt=c($e);x(lt,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/404/210/27a/40421027ad8962083a263742db86b2e2.png",style:"width: 100%;"}),u($e),u(G);var D=r(G,4),fe=c(D),ot=c(fe);x(ot,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/fe9/c45/523/fe9c45523dd56e5f240b7f1bdf267ecf.png",style:"width: 100%;"}),u(fe),u(D);var _e=r(D,16);ze(_e,{headers:Qe,rows:We,zebra:!0,$$slots:{cell:(a,_)=>{const e=L(()=>_.cell);var o=De(),$=y(o);{var v=s=>{var l=Jt(),p=c(l);u(l),N(n=>J(p,`        ${n??""}
      `),[()=>Z(w(e).value)],L),t(s,l)},h=s=>{var l=d();N(()=>J(l,w(e).value)),t(s,l)};Re($,s=>{w(e).key==="left"||w(e).key==="right"?s(v):s(h,!1)})}t(a,o)},"cell-header":(a,_)=>{const e=L(()=>_.header);var o=Nt(),$=c(o,!0);u(o),N(()=>J($,w(e).value)),t(a,o)}}});var he=r(_e,8);j(he,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(a,_)=>{i();var e=d();e.nodeValue=`{
  "query": "Виктор Иван",
  "count": 7
}`,t(a,e)},$$slots:{default:!0}});var ge=r(he,4);k(ge,{style:"margin-left: 3.5em;",children:(a,_)=>{var e=Lt(),o=y(e);f(o,{children:(v,h)=>{i();var s=d("Обратиться к свойству объекта;");t(v,s)},$$slots:{default:!0}});var $=r(o,2);f($,{children:(v,h)=>{i();var s=d("Получить значение по ключу.");t(v,s)},$$slots:{default:!0}}),t(a,e)},$$slots:{default:!0}});var R=r(ge,2),ye=c(R),dt=c(ye);x(dt,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/571/394/c65/571394c65e5f9992310a329cad1df6c3.png",style:"width: 100%;"}),u(ye),u(R);var U=r(R,4),be=c(U),nt=c(be);x(nt,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a17/d1f/8d3/a17d1f8d358046158dc484d8490eb993.png",style:"width: 100%;"}),u(be),u(U);var me=r(U,8);k(me,{style:"margin-left: 3.5em;",children:(a,_)=>{var e=Mt(),o=y(e);f(o,{children:(v,h)=>{i();var s=d("Свойства — описывают, ЧТО мы создаем.");t(v,s)},$$slots:{default:!0}});var $=r(o,2);f($,{children:(v,h)=>{i();var s=d("Методы — что объект умеет ДЕЛАТЬ.");t(v,s)},$$slots:{default:!0}}),t(a,e)},$$slots:{default:!0}});var xe=r(me,4);k(xe,{style:"margin-left: 3.5em;",children:(a,_)=>{var e=Ct(),o=y(e);f(o,{children:(v,h)=>{i();var s=d("Перечислить 10 разных переменных — модель, номер, цвет, пробег...");t(v,s)},$$slots:{default:!0}});var $=r(o,2);f($,{children:(v,h)=>{i();var s=d("Создать один объект, где будут все эти свойства.");t(v,s)},$$slots:{default:!0}}),t(a,e)},$$slots:{default:!0}});var z=r(xe,4),je=c(z),it=c(je);x(it,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/74e/19e/aea/74e19eaea84e2ed0ca70a8dccd97c42b.png",style:"width: 100%;"}),u(je),u(z);var Pe=r(z,8);j(Pe,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(a,_)=>{i();var e=d();e.nodeValue=`var cat = {
name: “Pussy”,
year: 1,
sleep: function() {
// sleeping code
}
}`,t(a,e)},$$slots:{default:!0}});var F=r(Pe,2),we=c(F),vt=c(we);x(vt,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/e54/411/117/e54411117536be81e8adbdc73a022897.png",style:"width: 100%;"}),u(we),u(F);var ke=r(F,4);k(ke,{style:"margin-left: 3.5em;",children:(a,_)=>{var e=Bt(),o=y(e);f(o,{children:(v,h)=>{i();var s=d("Свойства — name, year (что это за кошечка)");t(v,s)},$$slots:{default:!0}});var $=r(o,2);f($,{children:(v,h)=>{i();var s=d("Функции — sleep (что она умеет делать, описание поведения)");t(v,s)},$$slots:{default:!0}}),t(a,e)},$$slots:{default:!0}});var Oe=r(ke,8);j(Oe,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(a,_)=>{i();var e=d();e.nodeValue=`{
name: “Pussy”,
year: 1,
}
`,t(a,e)},$$slots:{default:!0}});var Se=r(Oe,10);k(Se,{style:"margin-left: 3.5em;",children:(a,_)=>{var e=qt(),o=y(e);f(o,{children:(s,l)=>{i();var p=d("client_fio (в коде это свойство fio объекта client)");t(s,p)},$$slots:{default:!0}});var $=r(o,2);f($,{children:(s,l)=>{i();var p=d("kitty_name (в коде это свойство name объекта cat)");t(s,p)},$$slots:{default:!0}});var v=r($,2);f(v,{children:(s,l)=>{i();var p=d("car_model (в коде это свойство model объекта car)");t(s,p)},$$slots:{default:!0}});var h=r(v,2);f(h,{children:(s,l)=>{i();var p=d("…");t(s,p)},$$slots:{default:!0}}),t(a,e)},$$slots:{default:!0}});var H=r(Se,4),Je=c(H),pt=c(Je);x(pt,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a27/55f/745/a2755f74538cb927c9117a876c44232d.png",style:"width: 100%;"}),u(Je),u(H);var Ne=r(H,10);k(Ne,{style:"margin-left: 3.5em;",children:(a,_)=>{var e=Et(),o=y(e);f(o,{children:(l,p)=>{i();var n=d("Число");t(l,n)},$$slots:{default:!0}});var $=r(o,2);f($,{children:(l,p)=>{i();var n=d("строка");t(l,n)},$$slots:{default:!0}});var v=r($,2);f(v,{children:(l,p)=>{i();var n=d("массив");t(l,n)},$$slots:{default:!0}});var h=r(v,2);f(h,{children:(l,p)=>{i();var n=d("другой объект");t(l,n)},$$slots:{default:!0}});var s=r(h,2);f(s,{children:(l,p)=>{i();var n=d("…");t(l,n)},$$slots:{default:!0}}),t(a,e)},$$slots:{default:!0}});var Le=r(Ne,4);Y(Le,{id:"JSON-array",children:(a,_)=>{var e=At();t(a,e)},$$slots:{default:!0}});var Me=r(Le,6);j(Me,{code:'[ "MALE", "FEMALE" ]',hideCopyButton:!0,showMoreLess:!1});var K=r(Me,4),Ce=c(K),ct=c(Ce);x(ct,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/5b1/c5f/800/5b1c5f800d9c612a1b27e87be3cc0297.png",style:"width: 100%;"}),u(Ce),u(K);var Q=r(K,4),Be=c(Q),ut=c(Be);x(ut,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/f7b/4b1/af8/f7b4b1af8f617aa9ca89fe15124863ed.png",style:"width: 100%;"}),u(Be),u(Q);var W=r(Q,4),qe=c(W),$t=c(qe);x($t,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/760/c8f/f7a/760c8ff7ab4e88155efae8faeb46b689.png",style:"width: 100%;"}),u(qe),u(W);var Ee=r(W,8);j(Ee,{code:"[ 1, 5, 10, 33 ]",hideCopyButton:!0,showMoreLess:!1});var Ae=r(Ee,4);j(Ae,{code:'[ "MALE", "FEMALE" ]',hideCopyButton:!0,showMoreLess:!1});var Ve=r(Ae,4);j(Ve,{code:'[ 1, "Андрюшка",  10, 33 ]',hideCopyButton:!0,showMoreLess:!1});var Te=r(Ve,6);j(Te,{code:'[1, {a:1, b:2}, "такой вот массивчик"]',hideCopyButton:!0,showMoreLess:!1});var Ie=r(Te,4);j(Ie,{type:"multi",hideCopyButton:!0,children:(a,_)=>{i();var e=d();e.nodeValue=`
[
	{
		"value": "Иванов Виктор",
		"unrestricted_value": "Иванов Виктор",
		"data": {
			"surname": "Иванов",
			"name": "Виктор",
			"patronymic": null,
			"gender": "MALE"
			}
	},
	{
		"value": "Иванченко Виктор",
		"unrestricted_value": "Иванченко Виктор",
		"data": {
			"surname": "Иванченко",
			"name": "Виктор",
			"patronymic": null,
			"gender": "MALE"
		}
	},
	{
		"value": "Виктор Иванович",
		"unrestricted_value": "Виктор Иванович",
		"data": {
			"surname": null,
			"name": "Виктор",
			"patronymic": "Иванович",
			"gender": "MALE"
		}
	}
]`,t(a,e)},$$slots:{default:!0}});var Ge=r(Ie,6);j(Ge,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(a,_)=>{i();var e=d();e.nodeValue=`
{
	"query": "Виктор Иван",
	"count": 7,
	"parts": ["NAME", "SURNAME"]
}`,t(a,e)},$$slots:{default:!0}});var ft=r(Ge,8);k(ft,{style:"margin-left: 3.5em;",children:(a,_)=>{var e=Vt(),o=y(e);f(o,{children:(l,p)=>{i();var n=d("числа");t(l,n)},$$slots:{default:!0}});var $=r(o,2);f($,{children:(l,p)=>{i();var n=d("строки");t(l,n)},$$slots:{default:!0}});var v=r($,2);f(v,{children:(l,p)=>{i();var n=d("другие массивы");t(l,n)},$$slots:{default:!0}});var h=r(v,2);f(h,{children:(l,p)=>{i();var n=d("объекты");t(l,n)},$$slots:{default:!0}});var s=r(h,2);f(s,{children:(l,p)=>{i();var n=d("смесь из всего вышеназванного");t(l,n)},$$slots:{default:!0}}),t(a,e)},$$slots:{default:!0}}),t(Ke,ee)}export{Yt as component};
