import"../chunks/Bg9kRutz.js";import"../chunks/69_IOA4Y.js";import{T as e,U as y,J as i,g as Oe,d as Se,V as o,K as p,G as He}from"../chunks/DwB3qp1y.js";import{t as g,a as r,c as Qe,b as d,s as We}from"../chunks/DhYkO-ht.js";import{i as Xe}from"../chunks/DzUmUmhz.js";import"../chunks/BI5LQFUO.js";import{A as G}from"../chunks/C8x85miN.js";import{D as Je}from"../chunks/BD47vfnQ.js";import{O as b}from"../chunks/DkdKJtbA.js";import{I as f}from"../chunks/DnjDcRZx.js";import{O as Ye}from"../chunks/DKnAL-hi.js";import{C as m}from"../chunks/CGardy9S.js";import{L as w}from"../chunks/DF4CoHH5.js";var Ze=g('<pre style="white-space: pre-wrap; margin: 0; font-family: monospace; background: var(--cds-layer-01); padding: 0.5rem; border-radius: 4px;" class="svelte-r01tww"> </pre>'),et=g('<h2 class="svelte-r01tww">Как устроен JSON</h2>'),tt=g("<!> <!> <!> <!> <!>",1),rt=g('<h2 class="svelte-r01tww">JSON-объект</h2>'),st=g("<!> <!>",1),at=g("<!> <!>",1),lt=g("<!> <!>",1),ot=g("<!> <!>",1),dt=g("<!> <!>",1),vt=g("<!> <!> <!> <!>",1),it=g("<!> <!> <!> <!> <!>",1),pt=g('<h2 class="svelte-r01tww">JSON-массив</h2>'),nt=g("<!> <!> <!> <!> <!>",1),ct=g('<h1 class="svelte-r01tww">Что такое JSON</h1> <!> <p class="svelte-r01tww">JSON (англ. JavaScript Object Notation) — это формат данных, который в основном используется для хранения и передачи данных, в частности между сервером и веб-приложением. Он широко применяется для представления структурированных данных.</p> <!> <p class="svelte-r01tww">В качестве значений в JSON могут быть использованы:</p> <!> <p class="svelte-r01tww">Я думаю, с простыми значениями вопросов не возникнет, поэтому разберем массивы и объекты.</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <!> <h3>Как устроен</h3> <p class="svelte-r01tww">Возьмем пример из <!>.</p> <!> <p class="svelte-r01tww">И разберемся, что означает эта запись.</p> <p class="svelte-r01tww">Объект заключен в фигурные скобки &lbrace;&rbrace;</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-r01tww">JSON-объект — это неупорядоченное множество пар «ключ:значение».</p> <p class="svelte-r01tww">Ключ — это название параметра, который мы передаем серверу. Он служит маркером для принимающей запрос системы: «смотри, здесь у меня значение такого-то параметра!». А иначе как система поймет, где что? Ей нужна подсказка!</p> <p class="svelte-r01tww">Вот, например, «Виктор Иван» — это что? Ищем описание параметра «query» в документации — ага, да это же запрос для подсказок!</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-r01tww">Это как если бы мы вбили строку «Виктор Иван» в GUI (графическом интерфейсе пользователя):</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-r01tww">Когда пользователь начинает вводить данные в формочку, то сразу видит результат — появляется список подсказок. Это значит, что разработчик прописал в коде условие — делать некое действие на каждый ввод символа в это поле. Какое действие? Можно увидеть через f12.</p> <p class="svelte-r01tww">Открываем вкладку Network, вбиваем «Виктор Иван» и находим запрос, который при этом уходит на сервер. Ого, да это тот самый пример, что мы разбираем!</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-r01tww">Клиент передает серверу запрос в JSON-формате. Внутри два параметра, две пары «ключ-значение»:</p> <!> <p class="svelte-r01tww">Пары «ключ-значение» разделены запятыми:</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-r01tww">Строки берем в кавычки, числа нет:</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-r01tww">Конечно, внутри может быть не только строка или число. Это может быть и другой объект! Или массив... Или объект в массиве, массив в объекте... Любое количество уровней вложенности =))</p> <p class="svelte-r01tww">Объект, массив, число, булево значение (true / false) — если у нас НЕ строка, кавычки не нужны. Но в любом случае это будет значение какого-то ключа:</p> ТАБЛИЦА <p class="svelte-r01tww">Переносы строк делать необязательно. Вообще пробелы и переносы строк нужны только человеку для читабельности, система поймет и без них:</p> ТАБЛИЦА <p class="svelte-r01tww">Ключ — ВСЕГДА строка, но мы все равно берем его в кавычки. В JavaScript этого можно не делать, в JSON нельзя.</p> ТАБЛИЦА <p class="svelte-r01tww">По крайней мере, если вы работаете с простыми значениями ключей, а несколько слов записываете в верблюжьемРегистре или в змеином_регистре. Если вы хотите написать в ключе несколько слов через пробел, ключ нужно взять в кавычки.</p> ТАБЛИЦА <p class="svelte-r01tww">И все же я рекомендую использовать простые названия ключей, или использовать snake_case.</p> <p class="svelte-r01tww">Писать ключи можно в любом порядке. Ведь JSON-объект — это <u>неупорядоченное</u> множество пар «ключ:значение».</p> <!> <p class="svelte-r01tww">Очень важно это понимать, и тестировать! Принимающая запрос система должна ориентировать на название ключей в запросе, а не на порядок их следования. Ключевое слово «должна» )) Хотя знаю примеры, когда от перестановки ключей местами всё ломалось, ведь «первым должен идти запрос, а не count!».</p> <h3>Ключ или свойство?</h3> <p class="svelte-r01tww">Вот у нас есть JSON-объект:</p> <!> <p class="svelte-r01tww">Что такое «query»? Если я хочу к нему обратиться, как мне это сказать? Есть 2 варианта, и оба правильные:</p> <!> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-r01tww">То есть «query» можно назвать как ключом, так и свойством. А как правильно то?</p> <div style="text-align: center;  margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-r01tww">Правильно и так, и так! Просто есть разные определения объекта:</p> <h3>Объект</h3> <p class="svelte-r01tww">В JS объект — это именно объект. У которого есть набор свойств и методов:</p> <!> <p class="svelte-r01tww">То есть если мы хотим создать машину, есть два пути:</p> <!> <p class="svelte-r01tww">Аналогично с кошечкой, собачкой, другом из записной книжки...</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-r01tww">Объектно-ориентированное программирование (ООП) предлагает мыслить не набором переменных, а объектом. Хотя бы потому, что это логичнее. Переменных в коде будет много, как понять, какие из них взаимосвязаны?</p> <p class="svelte-r01tww">Вот если я создаю машину, сколько переменных мне надо заполнить? А если меняю данные? А если удаляю? Когда переменные разбросаны по коду, можно забыть про какую-то и получить ошибку в интерфейсе. А если у нас есть цельный объект, всегда можно посмотреть, какие у него есть свойства и методы.</p> <p class="svelte-r01tww">Например, создадим кошечку:</p> <!> <div style="text-align: center;  margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-r01tww">В объекте cat есть:</p> <!> <p class="svelte-r01tww">По коду сразу видно, что у кошечки есть имя и возраст, она умеет спать. Если разработчик решит добавить новые свойства или методы, он дополнит этот объект, и снова всё в одном месте.</p> <p class="svelte-r01tww">Если потом нужно будет получить информацию по кошечке, разработчик сделает REST-метод getByID, searchKitty, или какой-то другой. А в нем будет возвращать свойства объекта.</p> <p class="svelte-r01tww">То есть метод вернет</p> <!> <p class="svelte-r01tww">И при использовании имени вполне уместно говорить «обратиться к свойству объекта». Это ведь объект (кошечка), и его свойства!</p> <h3>Объект</h3> <p class="svelte-r01tww">Второе определение объекта — неупорядоченное множество пар ключ:значение, заключенное в фигурные скобки &lbrace;&rbrace;.</p> <p class="svelte-r01tww">Оно применимо тогда, когда внутри фигурных скобок приходит не конкретный целостный объект, а просто набор полей. Они могут быть связаны между собой, а могут относится к совершенно разным объектам внутри кода:</p> <!> <p class="svelte-r01tww">В таком случае логично называть эти параметры именно ключами — мы хотим получить значение по ключу.</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-r01tww">Но в любом случае, и «ключ», и «свойство» будет правильно. Не пугайтесь, если в одной книге / статье / видео увидели одно, в другой другое... Это просто разные трактовки.</p> <h3>Итого</h3> <p class="svelte-r01tww">Json-объект — это неупорядоченное множество пар «ключ:значение», заключённое в фигурные скобки «&lbrace;  &rbrace;». Ключ описывается строкой, между ним и значением стоит символ «:». Пары ключ-значение отделяются друг от друга запятыми.</p> <p class="svelte-r01tww">Значения ключа могут быть любыми:</p> <!> <p class="svelte-r01tww">И только строку мы берем в кавычки!</p> <!> <p class="svelte-r01tww"><span class="bold svelte-r01tww">Как устроен</span></p> <p class="svelte-r01tww">Давайте снова начнем с примера. Это массив:</p> <!> <p class="svelte-r01tww">Массив заключен в квадратные скобки []</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-r01tww">Внутри квадратных скобок идет набор значений. Тут нет ключей, как в объекте, поэтому обращаться к массиву можно только по номеру элемента. И поэтому в случае массива менять местами данные внутри <u>нельзя</u>. Это упорядоченное множество значений.</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-r01tww">Значения разделены запятыми:</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-r01tww"><span class="bold svelte-r01tww">Значения внутри</span></p> <p class="svelte-r01tww">Внутри массива может быть все, что угодно:</p> <p class="svelte-r01tww"><span class="bold svelte-r01tww">Цифры</span></p> <!> <p class="svelte-r01tww"><span class="bold svelte-r01tww">Строки</span></p> <!> <p class="svelte-r01tww"><span class="bold svelte-r01tww">Смесь</span></p> <!> <p class="svelte-r01tww"><span class="bold svelte-r01tww">Объекты</span></p> <p class="svelte-r01tww">Да, а почему бы и нет:</p> <!> <p class="svelte-r01tww">Или даже что-то более сложное. Вот пример ответа подсказок из Дадаты:</p> <!> <p class="svelte-r01tww">Система возвращает массив подсказок. Сколько запросили в параметре count, столько и получили. Каждая подсказка — объект, внутри которого еще один объект. И это далеко не самая сложная структура! Уровней вложенности может быть сколько угодно — массив в массиве, который внутри объекта, который внутри массива, который внутри объекта...</p> <p class="svelte-r01tww">Ну и, конечно, можно и наоборот, передать массив в объекте. Вот пример запроса в подсказки:</p> <!> <h3>Итого</h3> <p class="svelte-r01tww">Массив — это просто набор значений, разделенных запятыми. Находится внутри квадратных скобок [].</p> <p class="svelte-r01tww">А вот внутри него может быть все, что угодно:</p> <!>',1);function Lt(Ne){const U=[{id:"a",name:"Простой пример",right:{query:"Виктор Иван",count:7}},{id:"b",name:"Сложный объект",right:{user:{name:"Андрей",roles:["admin","user"]},stats:{visits:42,lastLogin:"2023-10-05"}}}];var j=ct(),D=e(y(j),2);Je(D,{zebra:!0,headers:[{key:"name",value:"Пример"},{key:"right",value:"JSON-представление"}],rows:U,$$slots:{"cell-right":(a,h)=>{const t=Se(()=>h.cell);var c=Qe(),$=y(c);{var v=s=>{var l=Ze(),u=i(l);p(l),He(n=>We(u,`                ${n??""}
            `),[()=>JSON.stringify(Oe(t).value,null,2)],Se),r(s,l)},_=s=>{var l=d("—");r(s,l)};Xe($,s=>{Oe(t).value?s(v):s(_,!1)})}r(a,c)}}});var T=e(D,4);G(T,{id:"JSON",children:(a,h)=>{var t=et();r(a,t)},$$slots:{default:!0}});var z=e(T,4);b(z,{style:"margin-left: 3.5em;",children:(a,h)=>{var t=tt(),c=y(t);w(c,{children:(l,u)=>{o();var n=d("JSON-объект");r(l,n)},$$slots:{default:!0}});var $=e(c,2);w($,{children:(l,u)=>{o();var n=d("Массив");r(l,n)},$$slots:{default:!0}});var v=e($,2);w(v,{children:(l,u)=>{o();var n=d("Число (целое или вещественное)");r(l,n)},$$slots:{default:!0}});var _=e(v,2);w(_,{children:(l,u)=>{o();var n=d("Литералы true (логическое значение «истина»), false (логическое значение «ложь») и null");r(l,n)},$$slots:{default:!0}});var s=e(_,2);w(s,{children:(l,u)=>{o();var n=d("Строка");r(l,n)},$$slots:{default:!0}}),r(a,t)},$$slots:{default:!0}});var x=e(z,4),F=i(x),Me=i(F);f(Me,{src:"https://images-cdn.9gag.com/photo/aGdOG6w_700b.jpg",style:"width: 100%;"}),p(F),p(x);var K=e(x,2);G(K,{id:"JSON-object",children:(a,h)=>{var t=rt();r(a,t)},$$slots:{default:!0}});var P=e(K,4),Ce=e(i(P));Ye(Ce,{visited:!0,href:"https://confluence.hflabs.ru/pages/viewpage.action?pageId=204669115",children:(a,h)=>{o();var t=d("документации подсказок Дадаты по ФИО:");r(a,t)},$$slots:{default:!0}}),o(),p(P);var R=e(P,2);m(R,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(a,h)=>{o();var t=d();t.nodeValue=`{
  "query": "Виктор Иван",
  "count": 7
}`,r(a,t)},$$slots:{default:!0}});var k=e(R,6),H=i(k),Be=i(H);f(Be,{src:"https://habrastorage.org/getpro/habr/upload_files/acd/1a0/b3e/acd1a0b3e42086178942fcc0c0fd8d1b.png",style:"width: 100%;"}),p(H),p(k);var L=e(k,8),Q=i(L),Ee=i(Q);f(Ee,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/876/d5f/5df/876d5f5df458e26a565517291b9c08f5.png",style:"width: 100%;"}),p(Q),p(L);var O=e(L,4),W=i(O),Ae=i(W);f(Ae,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/bfe/c50/765/bfec507654e0e328a5260abae1a63928.png",style:"width: 100%;"}),p(W),p(O);var S=e(O,6),X=i(S),qe=i(X);f(qe,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/2db/ef1/434/2dbef14341056172d3815e69b7f0772b.png",style:"width: 100%;"}),p(X),p(S);var Y=e(S,4);b(Y,{style:"margin-left: 3.5em;",children:(a,h)=>{var t=st(),c=y(t);w(c,{children:(v,_)=>{o();var s=d("query — строка, по которой ищем (то, что пользователь вбил в GUI);");r(v,s)},$$slots:{default:!0}});var $=e(c,2);w($,{children:(v,_)=>{o();var s=d("count — количество подсказок в ответе (в Дадате этот параметр зашит в форму, всегда возвращается 7 подсказок. Но если дергать подсказки напрямую, значение можно менять!)");r(v,s)},$$slots:{default:!0}}),r(a,t)},$$slots:{default:!0}});var J=e(Y,4),Z=i(J),Ie=i(Z);f(Ie,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/404/210/27a/40421027ad8962083a263742db86b2e2.png",style:"width: 100%;"}),p(Z),p(J);var N=e(J,4),ee=i(N),Ve=i(ee);f(Ve,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/fe9/c45/523/fe9c45523dd56e5f240b7f1bdf267ecf.png",style:"width: 100%;"}),p(ee),p(N);var te=e(N,16);Je(te,{zebra:!0,headers:[{key:"name",value:"Так правильно"},{key:"right",value:"Так тоже правильно"}],rows:U});var re=e(te,8);m(re,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(a,h)=>{o();var t=d();t.nodeValue=`{
  "query": "Виктор Иван",
  "count": 7
}`,r(a,t)},$$slots:{default:!0}});var se=e(re,4);b(se,{style:"margin-left: 3.5em;",children:(a,h)=>{var t=at(),c=y(t);w(c,{children:(v,_)=>{o();var s=d("Обратиться к свойству объекта;");r(v,s)},$$slots:{default:!0}});var $=e(c,2);w($,{children:(v,_)=>{o();var s=d("Получить значение по ключу.");r(v,s)},$$slots:{default:!0}}),r(a,t)},$$slots:{default:!0}});var M=e(se,2),ae=i(M),Ge=i(ae);f(Ge,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/571/394/c65/571394c65e5f9992310a329cad1df6c3.png",style:"width: 100%;"}),p(ae),p(M);var C=e(M,4),le=i(C),Ue=i(le);f(Ue,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a17/d1f/8d3/a17d1f8d358046158dc484d8490eb993.png",style:"width: 100%;"}),p(le),p(C);var oe=e(C,8);b(oe,{style:"margin-left: 3.5em;",children:(a,h)=>{var t=lt(),c=y(t);w(c,{children:(v,_)=>{o();var s=d("Свойства — описывают, ЧТО мы создаем.");r(v,s)},$$slots:{default:!0}});var $=e(c,2);w($,{children:(v,_)=>{o();var s=d("Методы — что объект умеет ДЕЛАТЬ.");r(v,s)},$$slots:{default:!0}}),r(a,t)},$$slots:{default:!0}});var de=e(oe,4);b(de,{style:"margin-left: 3.5em;",children:(a,h)=>{var t=ot(),c=y(t);w(c,{children:(v,_)=>{o();var s=d("Перечислить 10 разных переменных — модель, номер, цвет, пробег...");r(v,s)},$$slots:{default:!0}});var $=e(c,2);w($,{children:(v,_)=>{o();var s=d("Создать один объект, где будут все эти свойства.");r(v,s)},$$slots:{default:!0}}),r(a,t)},$$slots:{default:!0}});var B=e(de,4),ve=i(B),je=i(ve);f(je,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/74e/19e/aea/74e19eaea84e2ed0ca70a8dccd97c42b.png",style:"width: 100%;"}),p(ve),p(B);var ie=e(B,8);m(ie,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(a,h)=>{o();var t=d();t.nodeValue=`var cat = {
name: “Pussy”,
year: 1,
sleep: function() {
// sleeping code
}
}`,r(a,t)},$$slots:{default:!0}});var E=e(ie,2),pe=i(E),De=i(pe);f(De,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/e54/411/117/e54411117536be81e8adbdc73a022897.png",style:"width: 100%;"}),p(pe),p(E);var ne=e(E,4);b(ne,{style:"margin-left: 3.5em;",children:(a,h)=>{var t=dt(),c=y(t);w(c,{children:(v,_)=>{o();var s=d("Свойства — name, year (что это за кошечка)");r(v,s)},$$slots:{default:!0}});var $=e(c,2);w($,{children:(v,_)=>{o();var s=d("Функции — sleep (что она умеет делать, описание поведения)");r(v,s)},$$slots:{default:!0}}),r(a,t)},$$slots:{default:!0}});var ce=e(ne,8);m(ce,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(a,h)=>{o();var t=d();t.nodeValue=`{
name: “Pussy”,
year: 1,
}
`,r(a,t)},$$slots:{default:!0}});var we=e(ce,10);b(we,{style:"margin-left: 3.5em;",children:(a,h)=>{var t=vt(),c=y(t);w(c,{children:(s,l)=>{o();var u=d("client_fio (в коде это свойство fio объекта client)");r(s,u)},$$slots:{default:!0}});var $=e(c,2);w($,{children:(s,l)=>{o();var u=d("kitty_name (в коде это свойство name объекта cat)");r(s,u)},$$slots:{default:!0}});var v=e($,2);w(v,{children:(s,l)=>{o();var u=d("car_model (в коде это свойство model объекта car)");r(s,u)},$$slots:{default:!0}});var _=e(v,2);w(_,{children:(s,l)=>{o();var u=d("…");r(s,u)},$$slots:{default:!0}}),r(a,t)},$$slots:{default:!0}});var A=e(we,4),ue=i(A),Te=i(ue);f(Te,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a27/55f/745/a2755f74538cb927c9117a876c44232d.png",style:"width: 100%;"}),p(ue),p(A);var $e=e(A,10);b($e,{style:"margin-left: 3.5em;",children:(a,h)=>{var t=it(),c=y(t);w(c,{children:(l,u)=>{o();var n=d("Число");r(l,n)},$$slots:{default:!0}});var $=e(c,2);w($,{children:(l,u)=>{o();var n=d("строка");r(l,n)},$$slots:{default:!0}});var v=e($,2);w(v,{children:(l,u)=>{o();var n=d("массив");r(l,n)},$$slots:{default:!0}});var _=e(v,2);w(_,{children:(l,u)=>{o();var n=d("другой объект");r(l,n)},$$slots:{default:!0}});var s=e(_,2);w(s,{children:(l,u)=>{o();var n=d("…");r(l,n)},$$slots:{default:!0}}),r(a,t)},$$slots:{default:!0}});var _e=e($e,4);G(_e,{id:"JSON-array",children:(a,h)=>{var t=pt();r(a,t)},$$slots:{default:!0}});var he=e(_e,6);m(he,{code:'[ "MALE", "FEMALE" ]',hideCopyButton:!0,showMoreLess:!1});var q=e(he,4),fe=i(q),ze=i(fe);f(ze,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/5b1/c5f/800/5b1c5f800d9c612a1b27e87be3cc0297.png",style:"width: 100%;"}),p(fe),p(q);var I=e(q,4),ge=i(I),Fe=i(ge);f(Fe,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/f7b/4b1/af8/f7b4b1af8f617aa9ca89fe15124863ed.png",style:"width: 100%;"}),p(ge),p(I);var V=e(I,4),ye=i(V),Ke=i(ye);f(Ke,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/760/c8f/f7a/760c8ff7ab4e88155efae8faeb46b689.png",style:"width: 100%;"}),p(ye),p(V);var me=e(V,8);m(me,{code:"[ 1, 5, 10, 33 ]",hideCopyButton:!0,showMoreLess:!1});var be=e(me,4);m(be,{code:'[ "MALE", "FEMALE" ]',hideCopyButton:!0,showMoreLess:!1});var xe=e(be,4);m(xe,{code:'[ 1, "Андрюшка",  10, 33 ]',hideCopyButton:!0,showMoreLess:!1});var Pe=e(xe,6);m(Pe,{code:'[1, {a:1, b:2}, "такой вот массивчик"]',hideCopyButton:!0,showMoreLess:!1});var ke=e(Pe,4);m(ke,{type:"multi",hideCopyButton:!0,children:(a,h)=>{o();var t=d();t.nodeValue=`[
        {
            "value": "Иванов Виктор",
            "unrestricted_value": "Иванов Виктор",
            "data": {
                "surname": "Иванов",
                "name": "Виктор",
                "patronymic": null,
                "gender": "MALE"
            }
        },
        {
            "value": "Иванченко Виктор",
            "unrestricted_value": "Иванченко Виктор",
            "data": {
                "surname": "Иванченко",
                "name": "Виктор",
                "patronymic": null,
                "gender": "MALE"
            }
        },
        {
            "value": "Виктор Иванович",
            "unrestricted_value": "Виктор Иванович",
            "data": {
                "surname": null,
                "name": "Виктор",
                "patronymic": "Иванович",
                "gender": "MALE"
            }
        }
]`,r(a,t)},$$slots:{default:!0}});var Le=e(ke,6);m(Le,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(a,h)=>{o();var t=d();t.nodeValue=`{
"query": "Виктор Иван",
"count": 7,
"parts": ["NAME", "SURNAME"]
}`,r(a,t)},$$slots:{default:!0}});var Re=e(Le,8);b(Re,{style:"margin-left: 3.5em;",children:(a,h)=>{var t=nt(),c=y(t);w(c,{children:(l,u)=>{o();var n=d("числа");r(l,n)},$$slots:{default:!0}});var $=e(c,2);w($,{children:(l,u)=>{o();var n=d("строки");r(l,n)},$$slots:{default:!0}});var v=e($,2);w(v,{children:(l,u)=>{o();var n=d("другие массивы");r(l,n)},$$slots:{default:!0}});var _=e(v,2);w(_,{children:(l,u)=>{o();var n=d("объекты");r(l,n)},$$slots:{default:!0}});var s=e(_,2);w(s,{children:(l,u)=>{o();var n=d("смесь из всего вышеназванного");r(l,n)},$$slots:{default:!0}}),r(a,t)},$$slots:{default:!0}}),r(Ne,j)}export{Lt as component};
