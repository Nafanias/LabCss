import"../chunks/Bg9kRutz.js";import"../chunks/69_IOA4Y.js";import{T as lt,U as ot,V as nt,W as e,X as y,Y as dt,J as c,R as pt,Z as r,K as $}from"../chunks/BLW39w_c.js";import{t as g,a as t,b as a}from"../chunks/Cv4kYyPD.js";import{p as it}from"../chunks/BqNR6XOf.js";import"../chunks/BUBboewO.js";import{A as W}from"../chunks/CiiEjXNQ.js";import{T as Te,D as vt,a as Ie,b as S,c as J,d as Re,e as M}from"../chunks/R3EfYBdW.js";import{O as L}from"../chunks/Z_eQhedQ.js";import{I as x}from"../chunks/CKGXAM_j.js";import{O as ct}from"../chunks/XM2WaJwn.js";import{C as P}from"../chunks/CRnu2a1D.js";import{L as u}from"../chunks/BsjRrwzf.js";var $t=g("<!> <!>",1),ut=g("<!> <!>",1),_t=g("<!> <!>",1),ht=g("<!> <!>",1),ft=g("<!> <!>",1),gt=g("<!> <!>",1),yt=g('<h2 class="svelte-1on0sn0">Как устроен JSON</h2>'),mt=g("<!> <!> <!> <!> <!>",1),bt=g('<h2 class="svelte-1on0sn0">JSON-объект</h2>'),xt=g("<!> <!>",1),Pt=g("<!> <!>",1),wt=g("<!> <!>",1),Lt=g("<!> <!>",1),kt=g("<!> <!>",1),Ot=g("<!> <!> <!> <!>",1),St=g("<!> <!> <!> <!> <!>",1),Jt=g('<h2 class="svelte-1on0sn0">JSON-массив</h2>'),Mt=g("<!> <!> <!> <!> <!>",1),Nt=g('<h1 class="svelte-1on0sn0">Что такое JSON</h1> <!> <p class="svelte-1on0sn0">s</p> <!> <p class="svelte-1on0sn0">JSON (англ. JavaScript Object Notation) — это формат данных, который в основном используется для хранения и передачи данных, в частности между сервером и веб-приложением. Он широко применяется для представления структурированных данных.</p> <!> <p class="svelte-1on0sn0">В качестве значений в JSON могут быть использованы:</p> <!> <p class="svelte-1on0sn0">Я думаю, с простыми значениями вопросов не возникнет, поэтому разберем массивы и объекты.</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <!> <h3>Как устроен</h3> <p class="svelte-1on0sn0">Возьмем пример из <!>.</p> <!> <p class="svelte-1on0sn0">И разберемся, что означает эта запись.</p> <p class="svelte-1on0sn0">Объект заключен в фигурные скобки &lbrace;&rbrace;</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">JSON-объект — это неупорядоченное множество пар «ключ:значение».</p> <p class="svelte-1on0sn0">Ключ — это название параметра, который мы передаем серверу. Он служит маркером для принимающей запрос системы: «смотри, здесь у меня значение такого-то параметра!». А иначе как система поймет, где что? Ей нужна подсказка!</p> <p class="svelte-1on0sn0">Вот, например, «Виктор Иван» — это что? Ищем описание параметра «query» в документации — ага, да это же запрос для подсказок!</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Это как если бы мы вбили строку «Виктор Иван» в GUI (графическом интерфейсе пользователя):</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Когда пользователь начинает вводить данные в формочку, то сразу видит результат — появляется список подсказок. Это значит, что разработчик прописал в коде условие — делать некое действие на каждый ввод символа в это поле. Какое действие? Можно увидеть через f12.</p> <p class="svelte-1on0sn0">Открываем вкладку Network, вбиваем «Виктор Иван» и находим запрос, который при этом уходит на сервер. Ого, да это тот самый пример, что мы разбираем!</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Клиент передает серверу запрос в JSON-формате. Внутри два параметра, две пары «ключ-значение»:</p> <!> <p class="svelte-1on0sn0">Пары «ключ-значение» разделены запятыми:</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Строки берем в кавычки, числа нет:</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Конечно, внутри может быть не только строка или число. Это может быть и другой объект! Или массив... Или объект в массиве, массив в объекте... Любое количество уровней вложенности =))</p> <p class="svelte-1on0sn0">Объект, массив, число, булево значение (true / false) — если у нас НЕ строка, кавычки не нужны. Но в любом случае это будет значение какого-то ключа:</p> ТАБЛИЦА <p class="svelte-1on0sn0">Переносы строк делать необязательно. Вообще пробелы и переносы строк нужны только человеку для читабельности, система поймет и без них:</p> ТАБЛИЦА <p class="svelte-1on0sn0">Ключ — ВСЕГДА строка, но мы все равно берем его в кавычки. В JavaScript этого можно не делать, в JSON нельзя.</p> ТАБЛИЦА <p class="svelte-1on0sn0">По крайней мере, если вы работаете с простыми значениями ключей, а несколько слов записываете в верблюжьемРегистре или в змеином_регистре. Если вы хотите написать в ключе несколько слов через пробел, ключ нужно взять в кавычки.</p> ТАБЛИЦА <p class="svelte-1on0sn0">И все же я рекомендую использовать простые названия ключей, или использовать snake_case.</p> <p class="svelte-1on0sn0">Писать ключи можно в любом порядке. Ведь JSON-объект — это <u>неупорядоченное</u> множество пар «ключ:значение».</p> <!> <p class="svelte-1on0sn0">Очень важно это понимать, и тестировать! Принимающая запрос система должна ориентировать на название ключей в запросе, а не на порядок их следования. Ключевое слово «должна» )) Хотя знаю примеры, когда от перестановки ключей местами всё ломалось, ведь «первым должен идти запрос, а не count!».</p> <h3>Ключ или свойство?</h3> <p class="svelte-1on0sn0">Вот у нас есть JSON-объект:</p> <!> <p class="svelte-1on0sn0">Что такое «query»? Если я хочу к нему обратиться, как мне это сказать? Есть 2 варианта, и оба правильные:</p> <!> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">То есть «query» можно назвать как ключом, так и свойством. А как правильно то?</p> <div style="text-align: center;  margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Правильно и так, и так! Просто есть разные определения объекта:</p> <h3>Объект</h3> <p class="svelte-1on0sn0">В JS объект — это именно объект. У которого есть набор свойств и методов:</p> <!> <p class="svelte-1on0sn0">То есть если мы хотим создать машину, есть два пути:</p> <!> <p class="svelte-1on0sn0">Аналогично с кошечкой, собачкой, другом из записной книжки...</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Объектно-ориентированное программирование (ООП) предлагает мыслить не набором переменных, а объектом. Хотя бы потому, что это логичнее. Переменных в коде будет много, как понять, какие из них взаимосвязаны?</p> <p class="svelte-1on0sn0">Вот если я создаю машину, сколько переменных мне надо заполнить? А если меняю данные? А если удаляю? Когда переменные разбросаны по коду, можно забыть про какую-то и получить ошибку в интерфейсе. А если у нас есть цельный объект, всегда можно посмотреть, какие у него есть свойства и методы.</p> <p class="svelte-1on0sn0">Например, создадим кошечку:</p> <!> <div style="text-align: center;  margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">В объекте cat есть:</p> <!> <p class="svelte-1on0sn0">По коду сразу видно, что у кошечки есть имя и возраст, она умеет спать. Если разработчик решит добавить новые свойства или методы, он дополнит этот объект, и снова всё в одном месте.</p> <p class="svelte-1on0sn0">Если потом нужно будет получить информацию по кошечке, разработчик сделает REST-метод getByID, searchKitty, или какой-то другой. А в нем будет возвращать свойства объекта.</p> <p class="svelte-1on0sn0">То есть метод вернет</p> <!> <p class="svelte-1on0sn0">И при использовании имени вполне уместно говорить «обратиться к свойству объекта». Это ведь объект (кошечка), и его свойства!</p> <h3>Объект</h3> <p class="svelte-1on0sn0">Второе определение объекта — неупорядоченное множество пар ключ:значение, заключенное в фигурные скобки &lbrace;&rbrace;.</p> <p class="svelte-1on0sn0">Оно применимо тогда, когда внутри фигурных скобок приходит не конкретный целостный объект, а просто набор полей. Они могут быть связаны между собой, а могут относится к совершенно разным объектам внутри кода:</p> <!> <p class="svelte-1on0sn0">В таком случае логично называть эти параметры именно ключами — мы хотим получить значение по ключу.</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Но в любом случае, и «ключ», и «свойство» будет правильно. Не пугайтесь, если в одной книге / статье / видео увидели одно, в другой другое... Это просто разные трактовки.</p> <h3>Итого</h3> <p class="svelte-1on0sn0">Json-объект — это неупорядоченное множество пар «ключ:значение», заключённое в фигурные скобки «&lbrace;  &rbrace;». Ключ описывается строкой, между ним и значением стоит символ «:». Пары ключ-значение отделяются друг от друга запятыми.</p> <p class="svelte-1on0sn0">Значения ключа могут быть любыми:</p> <!> <p class="svelte-1on0sn0">И только строку мы берем в кавычки!</p> <!> <p class="svelte-1on0sn0"><span class="bold svelte-1on0sn0">Как устроен</span></p> <p class="svelte-1on0sn0">Давайте снова начнем с примера. Это массив:</p> <!> <p class="svelte-1on0sn0">Массив заключен в квадратные скобки []</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Внутри квадратных скобок идет набор значений. Тут нет ключей, как в объекте, поэтому обращаться к массиву можно только по номеру элемента. И поэтому в случае массива менять местами данные внутри <u>нельзя</u>. Это упорядоченное множество значений.</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0">Значения разделены запятыми:</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1on0sn0"><span class="bold svelte-1on0sn0">Значения внутри</span></p> <p class="svelte-1on0sn0">Внутри массива может быть все, что угодно:</p> <p class="svelte-1on0sn0"><span class="bold svelte-1on0sn0">Цифры</span></p> <!> <p class="svelte-1on0sn0"><span class="bold svelte-1on0sn0">Строки</span></p> <!> <p class="svelte-1on0sn0"><span class="bold svelte-1on0sn0">Смесь</span></p> <!> <p class="svelte-1on0sn0"><span class="bold svelte-1on0sn0">Объекты</span></p> <p class="svelte-1on0sn0">Да, а почему бы и нет:</p> <!> <p class="svelte-1on0sn0">Или даже что-то более сложное. Вот пример ответа подсказок из Дадаты:</p> <!> <p class="svelte-1on0sn0">Система возвращает массив подсказок. Сколько запросили в параметре count, столько и получили. Каждая подсказка — объект, внутри которого еще один объект. И это далеко не самая сложная структура! Уровней вложенности может быть сколько угодно — массив в массиве, который внутри объекта, который внутри массива, который внутри объекта...</p> <p class="svelte-1on0sn0">Ну и, конечно, можно и наоборот, передать массив в объекте. Вот пример запроса в подсказки:</p> <!> <h3>Итого</h3> <p class="svelte-1on0sn0">Массив — это просто набор значений, разделенных запятыми. Находится внутри квадратных скобок [].</p> <p class="svelte-1on0sn0">А вот внутри него может быть все, что угодно:</p> <!>',1);function Ft(Ge,X){lt(X,!1);let N=it(X,"rows",24,()=>[{id:1,name:"Тест",right:{test:123}}]);ot(()=>pt(N()),()=>{console.log("Rows:",N())}),nt();var Y=Nt(),Z=e(y(Y),2);Te(Z,{children:(l,f)=>{var s=_t(),v=y(s);Ie(v,{children:(d,h)=>{S(d,{children:(o,p)=>{var i=$t(),n=y(i);J(n,{children:(m,O)=>{r();var b=a("Так правильно");t(m,b)},$$slots:{default:!0}});var k=e(n,2);J(k,{children:(m,O)=>{r();var b=a("Так тоже правильно");t(m,b)},$$slots:{default:!0}}),t(o,i)},$$slots:{default:!0}})},$$slots:{default:!0}});var _=e(v,2);Re(_,{children:(d,h)=>{S(d,{children:(o,p)=>{var i=ut(),n=y(i);M(n,{children:(m,O)=>{P(m,{type:"multi",hideCopyButton:!0,children:(b,z)=>{r();var w=a();w.nodeValue=`{
	query: "Виктор Иван",
	count: 7
}`,t(b,w)},$$slots:{default:!0}})},$$slots:{default:!0}});var k=e(n,2);M(k,{children:(m,O)=>{P(m,{type:"multi",hideCopyButton:!0,children:(b,z)=>{r();var w=a();w.nodeValue=`{
	count: 7,
	query: "Виктор Иван"
}`,t(b,w)},$$slots:{default:!0}})},$$slots:{default:!0}}),t(o,i)},$$slots:{default:!0}})},$$slots:{default:!0}}),t(l,s)},$$slots:{default:!0}});var Q=e(Z,4);Te(Q,{style:"margin: 0.5rem 0; border: 1px solid var(--cds-border-subtle);",children:(l,f)=>{var s=gt(),v=y(s);Ie(v,{children:(d,h)=>{S(d,{style:"border-bottom: 1px solid var(--cds-border-subtle);",children:(o,p)=>{var i=ht(),n=y(i);J(n,{style:"padding: 0.5rem 1rem; border-right: 1px solid var(--cds-border-subtle);",children:(m,O)=>{r();var b=a("Так правильно");t(m,b)},$$slots:{default:!0}});var k=e(n,2);J(k,{style:"padding: 0.5rem 1rem;",children:(m,O)=>{r();var b=a("Так тоже правильно");t(m,b)},$$slots:{default:!0}}),t(o,i)},$$slots:{default:!0}})},$$slots:{default:!0}});var _=e(v,2);Re(_,{children:(d,h)=>{S(d,{children:(o,p)=>{var i=ft(),n=y(i);M(n,{style:"padding: 0.5rem; border-right: 1px solid var(--cds-border-subtle);",children:(m,O)=>{P(m,{type:"multi",hideCopyButton:!0,style:"padding: 0.25rem; margin: 0; border: none;",children:(b,z)=>{r();var w=a();w.nodeValue=`{
  query: "Виктор Иван",
  count: 7
}`,t(b,w)},$$slots:{default:!0}})},$$slots:{default:!0}});var k=e(n,2);M(k,{style:"padding: 0.5rem;",children:(m,O)=>{P(m,{type:"multi",hideCopyButton:!0,style:"padding: 0.25rem; margin: 0; border: none;",children:(b,z)=>{r();var w=a();w.nodeValue=`{
  count: 7,
  query: "Виктор Иван"
}`,t(b,w)},$$slots:{default:!0}})},$$slots:{default:!0}}),t(o,i)},$$slots:{default:!0}})},$$slots:{default:!0}}),t(l,s)},$$slots:{default:!0}});var ee=e(Q,4);W(ee,{id:"JSON",children:(l,f)=>{var s=yt();t(l,s)},$$slots:{default:!0}});var te=e(ee,4);L(te,{style:"margin-left: 3.5em;",children:(l,f)=>{var s=mt(),v=y(s);u(v,{children:(p,i)=>{r();var n=a("JSON-объект");t(p,n)},$$slots:{default:!0}});var _=e(v,2);u(_,{children:(p,i)=>{r();var n=a("Массив");t(p,n)},$$slots:{default:!0}});var d=e(_,2);u(d,{children:(p,i)=>{r();var n=a("Число (целое или вещественное)");t(p,n)},$$slots:{default:!0}});var h=e(d,2);u(h,{children:(p,i)=>{r();var n=a("Литералы true (логическое значение «истина»), false (логическое значение «ложь») и null");t(p,n)},$$slots:{default:!0}});var o=e(h,2);u(o,{children:(p,i)=>{r();var n=a("Строка");t(p,n)},$$slots:{default:!0}}),t(l,s)},$$slots:{default:!0}});var C=e(te,4),se=c(C),Ue=c(se);x(Ue,{src:"https://images-cdn.9gag.com/photo/aGdOG6w_700b.jpg",style:"width: 100%;"}),$(se),$(C);var re=e(C,2);W(re,{id:"JSON-object",children:(l,f)=>{var s=bt();t(l,s)},$$slots:{default:!0}});var B=e(re,4),je=e(c(B));ct(je,{visited:!0,href:"https://confluence.hflabs.ru/pages/viewpage.action?pageId=204669115",children:(l,f)=>{r();var s=a("документации подсказок Дадаты по ФИО:");t(l,s)},$$slots:{default:!0}}),r(),$(B);var ae=e(B,2);P(ae,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(l,f)=>{r();var s=a();s.nodeValue=`{
  "query": "Виктор Иван",
  "count": 7
}`,t(l,s)},$$slots:{default:!0}});var E=e(ae,6),le=c(E),De=c(le);x(De,{src:"https://habrastorage.org/getpro/habr/upload_files/acd/1a0/b3e/acd1a0b3e42086178942fcc0c0fd8d1b.png",style:"width: 100%;"}),$(le),$(E);var q=e(E,8),oe=c(q),Fe=c(oe);x(Fe,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/876/d5f/5df/876d5f5df458e26a565517291b9c08f5.png",style:"width: 100%;"}),$(oe),$(q);var A=e(q,4),ne=c(A),He=c(ne);x(He,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/bfe/c50/765/bfec507654e0e328a5260abae1a63928.png",style:"width: 100%;"}),$(ne),$(A);var V=e(A,6),de=c(V),Ke=c(de);x(Ke,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/2db/ef1/434/2dbef14341056172d3815e69b7f0772b.png",style:"width: 100%;"}),$(de),$(V);var pe=e(V,4);L(pe,{style:"margin-left: 3.5em;",children:(l,f)=>{var s=xt(),v=y(s);u(v,{children:(d,h)=>{r();var o=a("query — строка, по которой ищем (то, что пользователь вбил в GUI);");t(d,o)},$$slots:{default:!0}});var _=e(v,2);u(_,{children:(d,h)=>{r();var o=a("count — количество подсказок в ответе (в Дадате этот параметр зашит в форму, всегда возвращается 7 подсказок. Но если дергать подсказки напрямую, значение можно менять!)");t(d,o)},$$slots:{default:!0}}),t(l,s)},$$slots:{default:!0}});var T=e(pe,4),ie=c(T),ze=c(ie);x(ze,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/404/210/27a/40421027ad8962083a263742db86b2e2.png",style:"width: 100%;"}),$(ie),$(T);var I=e(T,4),ve=c(I),We=c(ve);x(We,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/fe9/c45/523/fe9c45523dd56e5f240b7f1bdf267ecf.png",style:"width: 100%;"}),$(ve),$(I);var ce=e(I,16);vt(ce,{zebra:!0,headers:[{key:"name",value:"Так правильно"},{key:"right",value:"Так тоже правильно"}],get rows(){return N()}});var $e=e(ce,8);P($e,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(l,f)=>{r();var s=a();s.nodeValue=`{
  "query": "Виктор Иван",
  "count": 7
}`,t(l,s)},$$slots:{default:!0}});var ue=e($e,4);L(ue,{style:"margin-left: 3.5em;",children:(l,f)=>{var s=Pt(),v=y(s);u(v,{children:(d,h)=>{r();var o=a("Обратиться к свойству объекта;");t(d,o)},$$slots:{default:!0}});var _=e(v,2);u(_,{children:(d,h)=>{r();var o=a("Получить значение по ключу.");t(d,o)},$$slots:{default:!0}}),t(l,s)},$$slots:{default:!0}});var R=e(ue,2),_e=c(R),Xe=c(_e);x(Xe,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/571/394/c65/571394c65e5f9992310a329cad1df6c3.png",style:"width: 100%;"}),$(_e),$(R);var G=e(R,4),he=c(G),Ye=c(he);x(Ye,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a17/d1f/8d3/a17d1f8d358046158dc484d8490eb993.png",style:"width: 100%;"}),$(he),$(G);var fe=e(G,8);L(fe,{style:"margin-left: 3.5em;",children:(l,f)=>{var s=wt(),v=y(s);u(v,{children:(d,h)=>{r();var o=a("Свойства — описывают, ЧТО мы создаем.");t(d,o)},$$slots:{default:!0}});var _=e(v,2);u(_,{children:(d,h)=>{r();var o=a("Методы — что объект умеет ДЕЛАТЬ.");t(d,o)},$$slots:{default:!0}}),t(l,s)},$$slots:{default:!0}});var ge=e(fe,4);L(ge,{style:"margin-left: 3.5em;",children:(l,f)=>{var s=Lt(),v=y(s);u(v,{children:(d,h)=>{r();var o=a("Перечислить 10 разных переменных — модель, номер, цвет, пробег...");t(d,o)},$$slots:{default:!0}});var _=e(v,2);u(_,{children:(d,h)=>{r();var o=a("Создать один объект, где будут все эти свойства.");t(d,o)},$$slots:{default:!0}}),t(l,s)},$$slots:{default:!0}});var U=e(ge,4),ye=c(U),Ze=c(ye);x(Ze,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/74e/19e/aea/74e19eaea84e2ed0ca70a8dccd97c42b.png",style:"width: 100%;"}),$(ye),$(U);var me=e(U,8);P(me,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(l,f)=>{r();var s=a();s.nodeValue=`var cat = {
name: “Pussy”,
year: 1,
sleep: function() {
// sleeping code
}
}`,t(l,s)},$$slots:{default:!0}});var j=e(me,2),be=c(j),Qe=c(be);x(Qe,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/e54/411/117/e54411117536be81e8adbdc73a022897.png",style:"width: 100%;"}),$(be),$(j);var xe=e(j,4);L(xe,{style:"margin-left: 3.5em;",children:(l,f)=>{var s=kt(),v=y(s);u(v,{children:(d,h)=>{r();var o=a("Свойства — name, year (что это за кошечка)");t(d,o)},$$slots:{default:!0}});var _=e(v,2);u(_,{children:(d,h)=>{r();var o=a("Функции — sleep (что она умеет делать, описание поведения)");t(d,o)},$$slots:{default:!0}}),t(l,s)},$$slots:{default:!0}});var Pe=e(xe,8);P(Pe,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(l,f)=>{r();var s=a();s.nodeValue=`{
name: “Pussy”,
year: 1,
}
`,t(l,s)},$$slots:{default:!0}});var we=e(Pe,10);L(we,{style:"margin-left: 3.5em;",children:(l,f)=>{var s=Ot(),v=y(s);u(v,{children:(o,p)=>{r();var i=a("client_fio (в коде это свойство fio объекта client)");t(o,i)},$$slots:{default:!0}});var _=e(v,2);u(_,{children:(o,p)=>{r();var i=a("kitty_name (в коде это свойство name объекта cat)");t(o,i)},$$slots:{default:!0}});var d=e(_,2);u(d,{children:(o,p)=>{r();var i=a("car_model (в коде это свойство model объекта car)");t(o,i)},$$slots:{default:!0}});var h=e(d,2);u(h,{children:(o,p)=>{r();var i=a("…");t(o,i)},$$slots:{default:!0}}),t(l,s)},$$slots:{default:!0}});var D=e(we,4),Le=c(D),et=c(Le);x(et,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a27/55f/745/a2755f74538cb927c9117a876c44232d.png",style:"width: 100%;"}),$(Le),$(D);var ke=e(D,10);L(ke,{style:"margin-left: 3.5em;",children:(l,f)=>{var s=St(),v=y(s);u(v,{children:(p,i)=>{r();var n=a("Число");t(p,n)},$$slots:{default:!0}});var _=e(v,2);u(_,{children:(p,i)=>{r();var n=a("строка");t(p,n)},$$slots:{default:!0}});var d=e(_,2);u(d,{children:(p,i)=>{r();var n=a("массив");t(p,n)},$$slots:{default:!0}});var h=e(d,2);u(h,{children:(p,i)=>{r();var n=a("другой объект");t(p,n)},$$slots:{default:!0}});var o=e(h,2);u(o,{children:(p,i)=>{r();var n=a("…");t(p,n)},$$slots:{default:!0}}),t(l,s)},$$slots:{default:!0}});var Oe=e(ke,4);W(Oe,{id:"JSON-array",children:(l,f)=>{var s=Jt();t(l,s)},$$slots:{default:!0}});var Se=e(Oe,6);P(Se,{code:'[ "MALE", "FEMALE" ]',hideCopyButton:!0,showMoreLess:!1});var F=e(Se,4),Je=c(F),tt=c(Je);x(tt,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/5b1/c5f/800/5b1c5f800d9c612a1b27e87be3cc0297.png",style:"width: 100%;"}),$(Je),$(F);var H=e(F,4),Me=c(H),st=c(Me);x(st,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/f7b/4b1/af8/f7b4b1af8f617aa9ca89fe15124863ed.png",style:"width: 100%;"}),$(Me),$(H);var K=e(H,4),Ne=c(K),rt=c(Ne);x(rt,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/760/c8f/f7a/760c8ff7ab4e88155efae8faeb46b689.png",style:"width: 100%;"}),$(Ne),$(K);var Ce=e(K,8);P(Ce,{code:"[ 1, 5, 10, 33 ]",hideCopyButton:!0,showMoreLess:!1});var Be=e(Ce,4);P(Be,{code:'[ "MALE", "FEMALE" ]',hideCopyButton:!0,showMoreLess:!1});var Ee=e(Be,4);P(Ee,{code:'[ 1, "Андрюшка",  10, 33 ]',hideCopyButton:!0,showMoreLess:!1});var qe=e(Ee,6);P(qe,{code:'[1, {a:1, b:2}, "такой вот массивчик"]',hideCopyButton:!0,showMoreLess:!1});var Ae=e(qe,4);P(Ae,{type:"multi",hideCopyButton:!0,children:(l,f)=>{r();var s=a();s.nodeValue=`[
        {
            "value": "Иванов Виктор",
            "unrestricted_value": "Иванов Виктор",
            "data": {
                "surname": "Иванов",
                "name": "Виктор",
                "patronymic": null,
                "gender": "MALE"
            }
        },
        {
            "value": "Иванченко Виктор",
            "unrestricted_value": "Иванченко Виктор",
            "data": {
                "surname": "Иванченко",
                "name": "Виктор",
                "patronymic": null,
                "gender": "MALE"
            }
        },
        {
            "value": "Виктор Иванович",
            "unrestricted_value": "Виктор Иванович",
            "data": {
                "surname": null,
                "name": "Виктор",
                "patronymic": "Иванович",
                "gender": "MALE"
            }
        }
]`,t(l,s)},$$slots:{default:!0}});var Ve=e(Ae,6);P(Ve,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(l,f)=>{r();var s=a();s.nodeValue=`{
"query": "Виктор Иван",
"count": 7,
"parts": ["NAME", "SURNAME"]
}`,t(l,s)},$$slots:{default:!0}});var at=e(Ve,8);L(at,{style:"margin-left: 3.5em;",children:(l,f)=>{var s=Mt(),v=y(s);u(v,{children:(p,i)=>{r();var n=a("числа");t(p,n)},$$slots:{default:!0}});var _=e(v,2);u(_,{children:(p,i)=>{r();var n=a("строки");t(p,n)},$$slots:{default:!0}});var d=e(_,2);u(d,{children:(p,i)=>{r();var n=a("другие массивы");t(p,n)},$$slots:{default:!0}});var h=e(d,2);u(h,{children:(p,i)=>{r();var n=a("объекты");t(p,n)},$$slots:{default:!0}});var o=e(h,2);u(o,{children:(p,i)=>{r();var n=a("смесь из всего вышеназванного");t(p,n)},$$slots:{default:!0}}),t(l,s)},$$slots:{default:!0}}),t(Ge,Y),dt()}export{Ft as component};
