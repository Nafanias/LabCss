import{t as b,a as s,s as P,c as Me,b as d}from"../chunks/qGGmyE-U.js";import"../chunks/9Ud8F66T.js";import{L as t,M as g,J as p,K as i,G as k,g as m,d as O,N as n}from"../chunks/TTrIPi8I.js";import{i as Ce}from"../chunks/F-Xwb0I_.js";import"../chunks/BJPfbbUz.js";import{A as z}from"../chunks/5ZNi9sMP.js";import{D as qe}from"../chunks/D1iOQp2k.js";import{O as x}from"../chunks/Btiysd1D.js";import{I as f}from"../chunks/bTJzNCin.js";import{O as st}from"../chunks/-XsP_0nH.js";import{C as y}from"../chunks/DTaq0LnW.js";import{L as w}from"../chunks/DF7_RIey.js";var at=b('<pre class="json-block svelte-1now5bw"> </pre>'),rt=b('<span class="header-text svelte-1now5bw"> </span>'),lt=b('<h2 class="svelte-1now5bw">Как устроен JSON</h2>'),ot=b("<!> <!> <!> <!> <!>",1),dt=b('<h2 class="svelte-1now5bw">JSON-объект</h2>'),nt=b("<!> <!>",1),vt=b('<pre class="json-block svelte-1now5bw"> </pre>'),pt=b('<span class="header-text svelte-1now5bw"> </span>'),it=b("<!> <!>",1),ct=b("<!> <!>",1),ut=b("<!> <!>",1),wt=b("<!> <!>",1),_t=b("<!> <!> <!> <!>",1),$t=b("<!> <!> <!> <!> <!>",1),ht=b('<h2 class="svelte-1now5bw">JSON-массив</h2>'),bt=b("<!> <!> <!> <!> <!>",1),ft=b('<h1 class="svelte-1now5bw">Что такое JSON</h1> <!> <p class="svelte-1now5bw">JSON (англ. JavaScript Object Notation) — это формат данных, который в основном используется для хранения и передачи данных, в частности между сервером и веб-приложением. Он широко применяется для представления структурированных данных.</p> <!> <p class="svelte-1now5bw">В качестве значений в JSON могут быть использованы:</p> <!> <p class="svelte-1now5bw">Я думаю, с простыми значениями вопросов не возникнет, поэтому разберем массивы и объекты.</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <!> <h3>Как устроен</h3> <p class="svelte-1now5bw">Возьмем пример из <!>.</p> <!> <p class="svelte-1now5bw">И разберемся, что означает эта запись.</p> <p class="svelte-1now5bw">Объект заключен в фигурные скобки &lbrace;&rbrace;</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1now5bw">JSON-объект — это неупорядоченное множество пар «ключ:значение».</p> <p class="svelte-1now5bw">Ключ — это название параметра, который мы передаем серверу. Он служит маркером для принимающей запрос системы: «смотри, здесь у меня значение такого-то параметра!». А иначе как система поймет, где что? Ей нужна подсказка!</p> <p class="svelte-1now5bw">Вот, например, «Виктор Иван» — это что? Ищем описание параметра «query» в документации — ага, да это же запрос для подсказок!</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1now5bw">Это как если бы мы вбили строку «Виктор Иван» в GUI (графическом интерфейсе пользователя):</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1now5bw">Когда пользователь начинает вводить данные в формочку, то сразу видит результат — появляется список подсказок. Это значит, что разработчик прописал в коде условие — делать некое действие на каждый ввод символа в это поле. Какое действие? Можно увидеть через f12.</p> <p class="svelte-1now5bw">Открываем вкладку Network, вбиваем «Виктор Иван» и находим запрос, который при этом уходит на сервер. Ого, да это тот самый пример, что мы разбираем!</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1now5bw">Клиент передает серверу запрос в JSON-формате. Внутри два параметра, две пары «ключ-значение»:</p> <!> <p class="svelte-1now5bw">Пары «ключ-значение» разделены запятыми:</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1now5bw">Строки берем в кавычки, числа нет:</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1now5bw">Конечно, внутри может быть не только строка или число. Это может быть и другой объект! Или массив... Или объект в массиве, массив в объекте... Любое количество уровней вложенности =))</p> <p class="svelte-1now5bw">Объект, массив, число, булево значение (true / false) — если у нас НЕ строка, кавычки не нужны. Но в любом случае это будет значение какого-то ключа:</p> ТАБЛИЦА <p class="svelte-1now5bw">Переносы строк делать необязательно. Вообще пробелы и переносы строк нужны только человеку для читабельности, система поймет и без них:</p> ТАБЛИЦА <p class="svelte-1now5bw">Ключ — ВСЕГДА строка, но мы все равно берем его в кавычки. В JavaScript этого можно не делать, в JSON нельзя.</p> <p class="svelte-1now5bw">По крайней мере, если вы работаете с простыми значениями ключей, а несколько слов записываете в верблюжьемРегистре или в змеином_регистре. Если вы хотите написать в ключе несколько слов через пробел, ключ нужно взять в кавычки.</p> ТАБЛИЦА <p class="svelte-1now5bw">И все же я рекомендую использовать простые названия ключей, или использовать snake_case.</p> <p class="svelte-1now5bw">Писать ключи можно в любом порядке. Ведь JSON-объект — это <u>неупорядоченное</u> множество пар «ключ:значение».</p> <!> <p class="svelte-1now5bw">Очень важно это понимать, и тестировать! Принимающая запрос система должна ориентировать на название ключей в запросе, а не на порядок их следования. Ключевое слово «должна» )) Хотя знаю примеры, когда от перестановки ключей местами всё ломалось, ведь «первым должен идти запрос, а не count!».</p> <h3>Ключ или свойство?</h3> <p class="svelte-1now5bw">Вот у нас есть JSON-объект:</p> <!> <p class="svelte-1now5bw">Что такое «query»? Если я хочу к нему обратиться, как мне это сказать? Есть 2 варианта, и оба правильные:</p> <!> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1now5bw">То есть «query» можно назвать как ключом, так и свойством. А как правильно то?</p> <div style="text-align: center;  margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1now5bw">Правильно и так, и так! Просто есть разные определения объекта:</p> <h3>Объект</h3> <p class="svelte-1now5bw">В JS объект — это именно объект. У которого есть набор свойств и методов:</p> <!> <p class="svelte-1now5bw">То есть если мы хотим создать машину, есть два пути:</p> <!> <p class="svelte-1now5bw">Аналогично с кошечкой, собачкой, другом из записной книжки...</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1now5bw">Объектно-ориентированное программирование (ООП) предлагает мыслить не набором переменных, а объектом. Хотя бы потому, что это логичнее. Переменных в коде будет много, как понять, какие из них взаимосвязаны?</p> <p class="svelte-1now5bw">Вот если я создаю машину, сколько переменных мне надо заполнить? А если меняю данные? А если удаляю? Когда переменные разбросаны по коду, можно забыть про какую-то и получить ошибку в интерфейсе. А если у нас есть цельный объект, всегда можно посмотреть, какие у него есть свойства и методы.</p> <p class="svelte-1now5bw">Например, создадим кошечку:</p> <!> <div style="text-align: center;  margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1now5bw">В объекте cat есть:</p> <!> <p class="svelte-1now5bw">По коду сразу видно, что у кошечки есть имя и возраст, она умеет спать. Если разработчик решит добавить новые свойства или методы, он дополнит этот объект, и снова всё в одном месте.</p> <p class="svelte-1now5bw">Если потом нужно будет получить информацию по кошечке, разработчик сделает REST-метод getByID, searchKitty, или какой-то другой. А в нем будет возвращать свойства объекта.</p> <p class="svelte-1now5bw">То есть метод вернет</p> <!> <p class="svelte-1now5bw">И при использовании имени вполне уместно говорить «обратиться к свойству объекта». Это ведь объект (кошечка), и его свойства!</p> <h3>Объект</h3> <p class="svelte-1now5bw">Второе определение объекта — неупорядоченное множество пар ключ:значение, заключенное в фигурные скобки &lbrace;&rbrace;.</p> <p class="svelte-1now5bw">Оно применимо тогда, когда внутри фигурных скобок приходит не конкретный целостный объект, а просто набор полей. Они могут быть связаны между собой, а могут относится к совершенно разным объектам внутри кода:</p> <!> <p class="svelte-1now5bw">В таком случае логично называть эти параметры именно ключами — мы хотим получить значение по ключу.</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1now5bw">Но в любом случае, и «ключ», и «свойство» будет правильно. Не пугайтесь, если в одной книге / статье / видео увидели одно, в другой другое... Это просто разные трактовки.</p> <h3>Итого</h3> <p class="svelte-1now5bw">Json-объект — это неупорядоченное множество пар «ключ:значение», заключённое в фигурные скобки «&lbrace;  &rbrace;». Ключ описывается строкой, между ним и значением стоит символ «:». Пары ключ-значение отделяются друг от друга запятыми.</p> <p class="svelte-1now5bw">Значения ключа могут быть любыми:</p> <!> <p class="svelte-1now5bw">И только строку мы берем в кавычки!</p> <!> <p class="svelte-1now5bw"><span class="bold svelte-1now5bw">Как устроен</span></p> <p class="svelte-1now5bw">Давайте снова начнем с примера. Это массив:</p> <!> <p class="svelte-1now5bw">Массив заключен в квадратные скобки []</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1now5bw">Внутри квадратных скобок идет набор значений. Тут нет ключей, как в объекте, поэтому обращаться к массиву можно только по номеру элемента. И поэтому в случае массива менять местами данные внутри <u>нельзя</u>. Это упорядоченное множество значений.</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1now5bw">Значения разделены запятыми:</p> <div style="text-align: center; margin-top: 20px;"><div style="width: 60%; display: inline-block;"><!></div></div> <p class="svelte-1now5bw"><span class="bold svelte-1now5bw">Значения внутри</span></p> <p class="svelte-1now5bw">Внутри массива может быть все, что угодно:</p> <p class="svelte-1now5bw"><span class="bold svelte-1now5bw">Цифры</span></p> <!> <p class="svelte-1now5bw"><span class="bold svelte-1now5bw">Строки</span></p> <!> <p class="svelte-1now5bw"><span class="bold svelte-1now5bw">Смесь</span></p> <!> <p class="svelte-1now5bw"><span class="bold svelte-1now5bw">Объекты</span></p> <p class="svelte-1now5bw">Да, а почему бы и нет:</p> <!> <p class="svelte-1now5bw">Или даже что-то более сложное. Вот пример ответа подсказок из Дадаты:</p> <!> <p class="svelte-1now5bw">Система возвращает массив подсказок. Сколько запросили в параметре count, столько и получили. Каждая подсказка — объект, внутри которого еще один объект. И это далеко не самая сложная структура! Уровней вложенности может быть сколько угодно — массив в массиве, который внутри объекта, который внутри массива, который внутри объекта...</p> <p class="svelte-1now5bw">Ну и, конечно, можно и наоборот, передать массив в объекте. Вот пример запроса в подсказки:</p> <!> <h3>Итого</h3> <p class="svelte-1now5bw">Массив — это просто набор значений, разделенных запятыми. Находится внутри квадратных скобок [].</p> <p class="svelte-1now5bw">А вот внутри него может быть все, что угодно:</p> <!>',1);function Ct(Be){const Ee=[{key:"left",value:"Так правильно"},{key:"right",value:"Так тоже правильно"}],Ae=[{id:1,left:{query:"Виктор Иван",count:7},right:{count:7,query:"Виктор Иван"}}],je=[{key:"description",value:"Так правильно"},{key:"json",value:"Так неправильно в JSON"}],Ie=[{id:2,description:"Так правильно",json:{query:"Виктор Иван",count:7}},{id:3,description:"Так неправильно в JSON",json:{query:"Виктор Иван",count:7}}],F=a=>JSON.stringify(a,null,2);var K=ft(),R=t(g(K),2);qe(R,{headers2:je,rows2:Ie,zebra:!0,$$slots:{cell:(a,_)=>{const e=O(()=>_.cell);var o=Me(),u=g(o);{var v=r=>{var l=at(),$=p(l);i(l),k(c=>P($,`        ${c??""}
      `),[()=>F(m(e).value)],O),s(r,l)},h=r=>{var l=d();k(()=>P(l,m(e).value)),s(r,l)};Ce(u,r=>{m(e).key==="json"?r(v):r(h,!1)})}s(a,o)},"cell-header":(a,_)=>{const e=O(()=>_.header);var o=rt(),u=p(o,!0);i(o),k(()=>P(u,m(e).value)),s(a,o)}}});var T=t(R,4);z(T,{id:"JSON",children:(a,_)=>{var e=lt();s(a,e)},$$slots:{default:!0}});var H=t(T,4);x(H,{style:"margin-left: 3.5em;",children:(a,_)=>{var e=ot(),o=g(e);w(o,{children:(l,$)=>{n();var c=d("JSON-объект");s(l,c)},$$slots:{default:!0}});var u=t(o,2);w(u,{children:(l,$)=>{n();var c=d("Массив");s(l,c)},$$slots:{default:!0}});var v=t(u,2);w(v,{children:(l,$)=>{n();var c=d("Число (целое или вещественное)");s(l,c)},$$slots:{default:!0}});var h=t(v,2);w(h,{children:(l,$)=>{n();var c=d("Литералы true (логическое значение «истина»), false (логическое значение «ложь») и null");s(l,c)},$$slots:{default:!0}});var r=t(h,2);w(r,{children:(l,$)=>{n();var c=d("Строка");s(l,c)},$$slots:{default:!0}}),s(a,e)},$$slots:{default:!0}});var S=t(H,4),Q=p(S),Ve=p(Q);f(Ve,{src:"https://images-cdn.9gag.com/photo/aGdOG6w_700b.jpg",style:"width: 100%;"}),i(Q),i(S);var W=t(S,2);z(W,{id:"JSON-object",children:(a,_)=>{var e=dt();s(a,e)},$$slots:{default:!0}});var J=t(W,4),Ge=t(p(J));st(Ge,{visited:!0,href:"https://confluence.hflabs.ru/pages/viewpage.action?pageId=204669115",children:(a,_)=>{n();var e=d("документации подсказок Дадаты по ФИО:");s(a,e)},$$slots:{default:!0}}),n(),i(J);var X=t(J,2);y(X,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(a,_)=>{n();var e=d();e.nodeValue=`{
  "query": "Виктор Иван",
  "count": 7
}`,s(a,e)},$$slots:{default:!0}});var N=t(X,6),Y=p(N),De=p(Y);f(De,{src:"https://habrastorage.org/getpro/habr/upload_files/acd/1a0/b3e/acd1a0b3e42086178942fcc0c0fd8d1b.png",style:"width: 100%;"}),i(Y),i(N);var L=t(N,8),Z=p(L),Ue=p(Z);f(Ue,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/876/d5f/5df/876d5f5df458e26a565517291b9c08f5.png",style:"width: 100%;"}),i(Z),i(L);var M=t(L,4),ee=p(M),ze=p(ee);f(ze,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/bfe/c50/765/bfec507654e0e328a5260abae1a63928.png",style:"width: 100%;"}),i(ee),i(M);var C=t(M,6),te=p(C),Fe=p(te);f(Fe,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/2db/ef1/434/2dbef14341056172d3815e69b7f0772b.png",style:"width: 100%;"}),i(te),i(C);var se=t(C,4);x(se,{style:"margin-left: 3.5em;",children:(a,_)=>{var e=nt(),o=g(e);w(o,{children:(v,h)=>{n();var r=d("query — строка, по которой ищем (то, что пользователь вбил в GUI);");s(v,r)},$$slots:{default:!0}});var u=t(o,2);w(u,{children:(v,h)=>{n();var r=d("count — количество подсказок в ответе (в Дадате этот параметр зашит в форму, всегда возвращается 7 подсказок. Но если дергать подсказки напрямую, значение можно менять!)");s(v,r)},$$slots:{default:!0}}),s(a,e)},$$slots:{default:!0}});var q=t(se,4),ae=p(q),Ke=p(ae);f(Ke,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/404/210/27a/40421027ad8962083a263742db86b2e2.png",style:"width: 100%;"}),i(ae),i(q);var B=t(q,4),re=p(B),Re=p(re);f(Re,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/fe9/c45/523/fe9c45523dd56e5f240b7f1bdf267ecf.png",style:"width: 100%;"}),i(re),i(B);var le=t(B,16);qe(le,{headers:Ee,rows:Ae,zebra:!0,$$slots:{cell:(a,_)=>{const e=O(()=>_.cell);var o=Me(),u=g(o);{var v=r=>{var l=vt(),$=p(l);i(l),k(c=>P($,`        ${c??""}
      `),[()=>F(m(e).value)],O),s(r,l)},h=r=>{var l=d();k(()=>P(l,m(e).value)),s(r,l)};Ce(u,r=>{m(e).key==="left"||m(e).key==="right"?r(v):r(h,!1)})}s(a,o)},"cell-header":(a,_)=>{const e=O(()=>_.header);var o=pt(),u=p(o,!0);i(o),k(()=>P(u,m(e).value)),s(a,o)}}});var oe=t(le,8);y(oe,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(a,_)=>{n();var e=d();e.nodeValue=`{
  "query": "Виктор Иван",
  "count": 7
}`,s(a,e)},$$slots:{default:!0}});var de=t(oe,4);x(de,{style:"margin-left: 3.5em;",children:(a,_)=>{var e=it(),o=g(e);w(o,{children:(v,h)=>{n();var r=d("Обратиться к свойству объекта;");s(v,r)},$$slots:{default:!0}});var u=t(o,2);w(u,{children:(v,h)=>{n();var r=d("Получить значение по ключу.");s(v,r)},$$slots:{default:!0}}),s(a,e)},$$slots:{default:!0}});var E=t(de,2),ne=p(E),Te=p(ne);f(Te,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/571/394/c65/571394c65e5f9992310a329cad1df6c3.png",style:"width: 100%;"}),i(ne),i(E);var A=t(E,4),ve=p(A),He=p(ve);f(He,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a17/d1f/8d3/a17d1f8d358046158dc484d8490eb993.png",style:"width: 100%;"}),i(ve),i(A);var pe=t(A,8);x(pe,{style:"margin-left: 3.5em;",children:(a,_)=>{var e=ct(),o=g(e);w(o,{children:(v,h)=>{n();var r=d("Свойства — описывают, ЧТО мы создаем.");s(v,r)},$$slots:{default:!0}});var u=t(o,2);w(u,{children:(v,h)=>{n();var r=d("Методы — что объект умеет ДЕЛАТЬ.");s(v,r)},$$slots:{default:!0}}),s(a,e)},$$slots:{default:!0}});var ie=t(pe,4);x(ie,{style:"margin-left: 3.5em;",children:(a,_)=>{var e=ut(),o=g(e);w(o,{children:(v,h)=>{n();var r=d("Перечислить 10 разных переменных — модель, номер, цвет, пробег...");s(v,r)},$$slots:{default:!0}});var u=t(o,2);w(u,{children:(v,h)=>{n();var r=d("Создать один объект, где будут все эти свойства.");s(v,r)},$$slots:{default:!0}}),s(a,e)},$$slots:{default:!0}});var j=t(ie,4),ce=p(j),Qe=p(ce);f(Qe,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/74e/19e/aea/74e19eaea84e2ed0ca70a8dccd97c42b.png",style:"width: 100%;"}),i(ce),i(j);var ue=t(j,8);y(ue,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(a,_)=>{n();var e=d();e.nodeValue=`var cat = {
name: “Pussy”,
year: 1,
sleep: function() {
// sleeping code
}
}`,s(a,e)},$$slots:{default:!0}});var I=t(ue,2),we=p(I),We=p(we);f(We,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/e54/411/117/e54411117536be81e8adbdc73a022897.png",style:"width: 100%;"}),i(we),i(I);var _e=t(I,4);x(_e,{style:"margin-left: 3.5em;",children:(a,_)=>{var e=wt(),o=g(e);w(o,{children:(v,h)=>{n();var r=d("Свойства — name, year (что это за кошечка)");s(v,r)},$$slots:{default:!0}});var u=t(o,2);w(u,{children:(v,h)=>{n();var r=d("Функции — sleep (что она умеет делать, описание поведения)");s(v,r)},$$slots:{default:!0}}),s(a,e)},$$slots:{default:!0}});var $e=t(_e,8);y($e,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(a,_)=>{n();var e=d();e.nodeValue=`{
name: “Pussy”,
year: 1,
}
`,s(a,e)},$$slots:{default:!0}});var he=t($e,10);x(he,{style:"margin-left: 3.5em;",children:(a,_)=>{var e=_t(),o=g(e);w(o,{children:(r,l)=>{n();var $=d("client_fio (в коде это свойство fio объекта client)");s(r,$)},$$slots:{default:!0}});var u=t(o,2);w(u,{children:(r,l)=>{n();var $=d("kitty_name (в коде это свойство name объекта cat)");s(r,$)},$$slots:{default:!0}});var v=t(u,2);w(v,{children:(r,l)=>{n();var $=d("car_model (в коде это свойство model объекта car)");s(r,$)},$$slots:{default:!0}});var h=t(v,2);w(h,{children:(r,l)=>{n();var $=d("…");s(r,$)},$$slots:{default:!0}}),s(a,e)},$$slots:{default:!0}});var V=t(he,4),be=p(V),Xe=p(be);f(Xe,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/a27/55f/745/a2755f74538cb927c9117a876c44232d.png",style:"width: 100%;"}),i(be),i(V);var fe=t(V,10);x(fe,{style:"margin-left: 3.5em;",children:(a,_)=>{var e=$t(),o=g(e);w(o,{children:(l,$)=>{n();var c=d("Число");s(l,c)},$$slots:{default:!0}});var u=t(o,2);w(u,{children:(l,$)=>{n();var c=d("строка");s(l,c)},$$slots:{default:!0}});var v=t(u,2);w(v,{children:(l,$)=>{n();var c=d("массив");s(l,c)},$$slots:{default:!0}});var h=t(v,2);w(h,{children:(l,$)=>{n();var c=d("другой объект");s(l,c)},$$slots:{default:!0}});var r=t(h,2);w(r,{children:(l,$)=>{n();var c=d("…");s(l,c)},$$slots:{default:!0}}),s(a,e)},$$slots:{default:!0}});var ge=t(fe,4);z(ge,{id:"JSON-array",children:(a,_)=>{var e=ht();s(a,e)},$$slots:{default:!0}});var ye=t(ge,6);y(ye,{code:'[ "MALE", "FEMALE" ]',hideCopyButton:!0,showMoreLess:!1});var G=t(ye,4),me=p(G),Ye=p(me);f(Ye,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/5b1/c5f/800/5b1c5f800d9c612a1b27e87be3cc0297.png",style:"width: 100%;"}),i(me),i(G);var D=t(G,4),xe=p(D),Ze=p(xe);f(Ze,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/f7b/4b1/af8/f7b4b1af8f617aa9ca89fe15124863ed.png",style:"width: 100%;"}),i(xe),i(D);var U=t(D,4),Pe=p(U),et=p(Pe);f(et,{src:"https://habrastorage.org/r/w1560/getpro/habr/upload_files/760/c8f/f7a/760c8ff7ab4e88155efae8faeb46b689.png",style:"width: 100%;"}),i(Pe),i(U);var ke=t(U,8);y(ke,{code:"[ 1, 5, 10, 33 ]",hideCopyButton:!0,showMoreLess:!1});var Oe=t(ke,4);y(Oe,{code:'[ "MALE", "FEMALE" ]',hideCopyButton:!0,showMoreLess:!1});var Se=t(Oe,4);y(Se,{code:'[ 1, "Андрюшка",  10, 33 ]',hideCopyButton:!0,showMoreLess:!1});var Je=t(Se,6);y(Je,{code:'[1, {a:1, b:2}, "такой вот массивчик"]',hideCopyButton:!0,showMoreLess:!1});var Ne=t(Je,4);y(Ne,{type:"multi",hideCopyButton:!0,children:(a,_)=>{n();var e=d();e.nodeValue=`
[
	{
		"value": "Иванов Виктор",
		"unrestricted_value": "Иванов Виктор",
		"data": {
			"surname": "Иванов",
			"name": "Виктор",
			"patronymic": null,
			"gender": "MALE"
			}
	},
	{
		"value": "Иванченко Виктор",
		"unrestricted_value": "Иванченко Виктор",
		"data": {
			"surname": "Иванченко",
			"name": "Виктор",
			"patronymic": null,
			"gender": "MALE"
		}
	},
	{
		"value": "Виктор Иванович",
		"unrestricted_value": "Виктор Иванович",
		"data": {
			"surname": null,
			"name": "Виктор",
			"patronymic": "Иванович",
			"gender": "MALE"
		}
	}
]`,s(a,e)},$$slots:{default:!0}});var Le=t(Ne,6);y(Le,{type:"multi",hideCopyButton:!0,showMoreLess:!1,children:(a,_)=>{n();var e=d();e.nodeValue=`
{
	"query": "Виктор Иван",
	"count": 7,
	"parts": ["NAME", "SURNAME"]
}`,s(a,e)},$$slots:{default:!0}});var tt=t(Le,8);x(tt,{style:"margin-left: 3.5em;",children:(a,_)=>{var e=bt(),o=g(e);w(o,{children:(l,$)=>{n();var c=d("числа");s(l,c)},$$slots:{default:!0}});var u=t(o,2);w(u,{children:(l,$)=>{n();var c=d("строки");s(l,c)},$$slots:{default:!0}});var v=t(u,2);w(v,{children:(l,$)=>{n();var c=d("другие массивы");s(l,c)},$$slots:{default:!0}});var h=t(v,2);w(h,{children:(l,$)=>{n();var c=d("объекты");s(l,c)},$$slots:{default:!0}});var r=t(h,2);w(r,{children:(l,$)=>{n();var c=d("смесь из всего вышеназванного");s(l,c)},$$slots:{default:!0}}),s(a,e)},$$slots:{default:!0}}),s(Be,K)}export{Ct as component};
